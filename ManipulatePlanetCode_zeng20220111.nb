(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    490862,       9171]
NotebookOptionsPosition[    488294,       9124]
NotebookOutlinePosition[    488706,       9140]
CellTagsIndexPosition[    488663,       9137]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 StyleBox[ButtonBox["Exoplanet mass-radius plotting and analyzing tool",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://community.wolfram.com/groups/-/m/t/2445247"], None},
  ButtonNote->"https://community.wolfram.com/groups/-/m/t/2445247"],
  FontWeight->"Bold"],
 "\n",
 StyleBox["by ",
  FontSlant->"Italic"],
 StyleBox[ButtonBox["Li Zeng",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://community.wolfram.com/web/astrozeng"], None},
  ButtonNote->"https://community.wolfram.com/web/astrozeng"],
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.850569815929*^9, 3.850569860198738*^9}, {
   3.850840330225919*^9, 3.850840342516161*^9}, {3.8510842010658994`*^9, 
   3.8510842010679116`*^9}, 3.851084250541876*^9, {3.8510848038801556`*^9, 
   3.851084803881961*^9}, {3.8510851209856567`*^9, 
   3.85108512106328*^9}},ExpressionUUID->"f1d157ee-91a3-42d6-bc68-\
af1122e93353"],

Cell[CellGroupData[{

Cell["Reference", "Section",
 CellChangeTimes->{{3.850569884079735*^9, 3.8505698881736097`*^9}, {
  3.850912402279134*^9, 
  3.8509124047427254`*^9}},ExpressionUUID->"716bd89b-8757-42e0-a151-\
c1a29588d53c"],

Cell["\<\
Journal reference: ApJ 923 247 (2021)
DOI:\t10.3847/1538-4357/ac3137\
\>", "Text",
 CellChangeTimes->{{3.850569902423401*^9, 3.8505699398785496`*^9}, {
   3.8505699712098346`*^9, 3.8505700058907022`*^9}, {3.850840397865386*^9, 
   3.850840433119706*^9}, {3.850840499856257*^9, 3.85084113285705*^9}, {
   3.8508411719101133`*^9, 3.850841304956724*^9}, {3.850841335706588*^9, 
   3.8508413378526917`*^9}, {3.850842324834836*^9, 3.8508423323875113`*^9}, {
   3.850842362411302*^9, 3.850842418043996*^9}, {3.850912262591041*^9, 
   3.8509122635181723`*^9}, {3.850912394916064*^9, 3.85091239513282*^9}, 
   3.850912435951707*^9},ExpressionUUID->"ac94e22b-06d2-4f04-b4ba-\
c481651b31df"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Abstract (original article)", "Section",
 CellChangeTimes->{{3.8509124463836355`*^9, 
  3.850912473420475*^9}},ExpressionUUID->"f0a7d849-8d09-4e6e-a2cc-\
2c81062b0700"],

Cell["\<\
Recent astronomical observations obtained with the Kepler and TESS missions \
and their related ground-based follow-ups revealed an abundance of exoplanets \
with a size intermediate between Earth and Neptune (1 R\[CirclePlus] \
\[LessEqual] R \[LessEqual] 4 R\[CirclePlus]). A low occurrence rate of \
planets has been identified at around twice the size of Earth (2 \[Times] R\
\[CirclePlus]), known as the exoplanet radius gap or radius valley. We \
explore the geometry of this gap in the mass\[Dash]radius diagram, with the \
help of a Mathematica plotting tool developed with the capability of \
manipulating exoplanet data in multidimensional parameter space, and with the \
help of visualized water equations of state in the temperature\[Dash]density \
(T\[Dash]\[Rho]) graph and the entropy\[Dash]pressure (s\[Dash]P) graph. We \
show that the radius valley can be explained by a compositional difference \
between smaller, predominantly rocky planets (<2 \[Times] R\[CirclePlus]) and \
larger planets (>2 \[Times] R\[CirclePlus]) that exhibit greater \
compositional diversity including cosmic ices (water, ammonia, methane, etc.) \
and gaseous envelopes. In particular, among the larger planets (>2 \[Times] R\
\[CirclePlus]), when viewed from the perspective of planet equilibrium \
temperature (Teq), the hot ones (Teq \[GreaterTilde] 900 K) are consistent \
with ice-dominated composition without significant gaseous envelopes, while \
the cold ones (Teq \[LessTilde] 900 K) have more diverse compositions, \
including various amounts of gaseous envelopes.\
\>", "Text",
 CellChangeTimes->{
  3.8509159163461547`*^9},ExpressionUUID->"8684fee0-b417-4f67-a1a0-\
9c526676e9b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.850912485946578*^9, 
  3.8509124890438204`*^9}},ExpressionUUID->"4064be94-039a-41cf-9c40-\
c2b61a455f52"],

Cell[TextData[{
 "This is a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " plotting tool developed to plot the exoplanet data in mass-radius diagram, \
and the relevant histograms (mass-histogram, radius-histogram, and \
\\zeta-histogram). It is built on the functionality of Mathematica to ",
 StyleBox["Manipulate",
  FontSlant->"Italic"],
 " various input parameters when constructing the plots. For example, one \
important input parameter to separate exoplanet populations is the \
equilibrium temperature Teq , which is determined by the amount of \
host-stellar radiation that a planet receives per its unit surface area. By \
analogy, this is similar to the broad classification of any human disorder \
into either hot-nature or cold-nature according to the ancient Chinese, \
Ayurvedic, and Hellenistic medical knowledge. This ",
 StyleBox["manipulate",
  FontSlant->"Italic"],
 " function allows us to glean information from the observed planet \
population and make distinctions. \nAnother goal of this tool is to explore \
the possible origins of the exoplanet radius gap or radius valley, which \
corresponds to a low occurrence rate of observed planet population at around \
twice the size of Earth (2 \[Times] R\[CirclePlus]). We show that this radius \
gap or valley can be explained by a compositional difference between smaller, \
predominantly rocky planets (<2 \[Times] R\[CirclePlus] ) and larger planets \
(>2 \[Times] R\[CirclePlus] ) which exhibit greater compositional diversity \
including cosmic ices (water, ammonia, methane) plus gaseous envelopes. In \
particular, among the larger planets (>2 \[Times] R\[CirclePlus] ), when \
viewed from the perspective of planet equilibrium temperature (Teq ), some \
hotter exoplanets (Teq>900 K) are consistent with ice-dominated composition \
without signi\[FiLigature]cant gaseous envelopes, while some colder \
exoplanets (Teq<900 K) seem to manifest various amounts of gaseous envelopes. "
}], "Text",
 CellChangeTimes->{{3.850569902423401*^9, 3.8505699398785496`*^9}, {
  3.8505699712098346`*^9, 3.8505700058907022`*^9}, {3.850840397865386*^9, 
  3.850840433119706*^9}, {3.850840499856257*^9, 3.85084113285705*^9}, {
  3.8508411719101133`*^9, 3.850841304956724*^9}, {3.850841335706588*^9, 
  3.8508413378526917`*^9}, {3.850842324834836*^9, 3.8508423323875113`*^9}, {
  3.850842362411302*^9, 3.850842418043996*^9}, {3.850912262591041*^9, 
  3.8509122635181723`*^9}, {3.850912394916064*^9, 3.85091239513282*^9}, {
  3.8509124390419865`*^9, 
  3.850912440058859*^9}},ExpressionUUID->"54311706-e5ec-494f-b545-\
1edddd49b7a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Importing data", "Section",
 CellChangeTimes->{{3.8509125112655497`*^9, 3.8509125210404654`*^9}, {
  3.8509148145807424`*^9, 
  3.8509148188258305`*^9}},ExpressionUUID->"58b98613-c77c-45cb-9077-\
3d4540786097"],

Cell[TextData[{
 "Import some mass-radius curves of isentropic pure-Hydrogen composition, \
calculated from the Hydrogen-EOS in Becker et al. ApJS 215,21 (2014). \
Mass-radius curves of the \[OpenCurlyDoubleQuote]isentropic\
\[CloseCurlyDoubleQuote] pure-Hydrogen compositions are added as an option \
here, particularly useful for the gas giant exoplanets such as those hot \
jupiters. \[OpenCurlyDoubleQuote]isentropic\[CloseCurlyDoubleQuote] here \
means that we assume the specific entropy within the gas envelope from its \
top to its bottom remains the same. This usually holds for deep fluidic \
envelopes due to internal convective motions caused by the presence of \
internal heat source from the central region of the planet. These \
\[OpenCurlyDoubleQuote]isentropic\[CloseCurlyDoubleQuote] pure-Hydrogen \
mass-radius curves counting from bottom upward in the mass-radius diagram are \
for speci\[FiLigature]c entropy S \
(eV/1000K/atom)=0.3,0.4,0.5,0.6,0.7,0.8,0.9,and 1.0 correspondingly. One \
could see that both Saturn and Jupiter lie relatively close to the S \
(eV/1000K/atom)=0.3 curve, which is considered to be a relatively cold \
isentropic profile. The nominal surface of truncation of calculation for \
these mass-radius curves is taken to be at the density of 0.01 g/cc. Hydrogen \
EOS data are taken from Becker et al. ApJS 215,21 (2014) ",
 ButtonBox["https://arxiv.org/abs/1411.4010",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://arxiv.org/abs/1411.4010"], None},
  ButtonNote->"https://arxiv.org/abs/1411.4010"]
}], "Text",
 CellChangeTimes->{
  3.8509125577768793`*^9, {3.850914409783391*^9, 3.850914443808761*^9}, {
   3.850914649494299*^9, 
   3.8509147093794975`*^9}},ExpressionUUID->"ca92c054-1ac9-4741-a0d8-\
32b6a20301c0"],

Cell["Set the working directory to notebook directory", "Text",
 CellChangeTimes->{{3.822659246175016*^9, 3.822659257951509*^9}, 
   3.8509125782539773`*^9, {3.8509147269472*^9, 
   3.8509147281137238`*^9}},ExpressionUUID->"33bdaa63-8fd1-4fe8-b423-\
e56cfb0ac609"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.5645810226818533`*^9, 3.564581023419976*^9}, {
  3.5681174962129374`*^9, 3.568117511134275*^9}, {3.568117614221088*^9, 
  3.568117625235682*^9}, {3.639412561192102*^9, 3.6394125619684687`*^9}, {
  3.821879797222406*^9, 3.821879797389632*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"0e219a26-63aa-4155-919e-aa91a6878317"],

Cell[BoxData[
 RowBox[{
  RowBox[{"massradiusS03Becker", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List", "ListIcon", 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox[
             RowBox[{"{", 
               RowBox[{"41", ",", "2"}], "}"}], "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["3976", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAZXTxVWwY0z9GYjECJcYIQK74u6wg
cts/f8Q0Fam0CkBxvBKC/czjP3DrLzJf3gxA7ceDk5ue7D+NlktYeEQPQNlI
gE2asvQ/jrTeLqb0EEDpupzkxfH9P2AOfdcjaBJAuTx1hnipBUCMd2Fl3f4T
QLX6aL3V6gxApD/Bz2FUFUAL03FqrwATQKn6JZabpBZAAaDbTFbFGEA5uWgh
U/UXQBPQTrDL/R9ADTPJZPlDGUCifd7nv3MkQLiMr3q/jRpAWPO+MzkOKkB4
qhFxT9obQL7rb1TXkTBAh0Pz7bcsHUCe+Kci8wo1QI1Zij/xhR5AHR2BSqtW
OkDo927GDNIfQKWVoiwCa0BAlH98m/uOIECRiPhYgWNEQCPQIUSkNCFAK9Yh
CKoCSUC0Xz6NyNIhQD8i2Z0ZKU5AQjo/6OtjIkCjyjb9QwtSQF49wHdf7SJA
nsl9W/b9VECsb/O9R14jQPg/V4e5gVhAyynlH8nLI0CpZw/sWRtdQGxxeK3N
QSRAqIfcodE+YUDHdu0cgbUkQIfWsp6ZfGRAW9prHMQqJUAeBHGRo0RoQGNj
O/BuniVAL4C+j4qQbEDj0x/Acw0mQEsDnzg3rnBA/+aVwpJ1JkBzHg5E6Gxz
QE+Fxx0l2SZATpkcSoWAdkD/3ZacczYnQKcb/qEV4nlAmnq2G46LJ0DV/6AS
Sq99QJ28N2p+2idAk/hjnIPogECqV9MRCyEoQC2JyfDyMoNAf65Vs7NgKEC4
SxT5+5qFQBXvVhd+lihAFECHqL05iEBNlXUvTsQoQElw0O55FotA64/J25fq
KECEbIpWKjmOQFrZqaUBCilAB+WjbkLVkED6N7QwNiMpQC0raP8OqZJAMdT7
DOk1KUCR0itQ
    "],
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.844434212097267*^9, 3.844434217012957*^9}, 
   3.8509147380971107`*^9},ExpressionUUID->"61131167-537f-4456-bfe0-\
538c1346e768"],

Cell[BoxData[
 RowBox[{
  RowBox[{"massradiusS04Becker", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List", "ListIcon", 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox[
             RowBox[{"{", 
               RowBox[{"41", ",", "2"}], "}"}], "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["3976", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAATMdarmKG8D/c7yYd5gEUQJHEhlwE
X/U/hobDXirLFEBieIvpivf7PzGZTHP0shVAg8XquA5tAkBa9A/C9rcWQDdI
sIMYYAhAfTkrI5HYF0DXjDRsYigQQM/xVpiNExlAtDuVZC5yFUB8tcFKSmga
QK7qZ4S7URtABClan9+cG0BY33WXqD0hQADjiBVOzxxASKxWzUClJUBh3WWa
GQIeQIMINrmY+CpAUJCOPS8xH0CMZ2eGHKcwQPXDpK4vLCBAN1PgtPh+NEDW
RtLVLL8gQEO7BmL3DDlAcktUOahOIUApy3nSHIU+QKKqGF3c3CFAh03XBQU7
QkD93XTR51wiQMYDJt0GKEVAur5R20bGIkATEQxBDZpHQIN+9Q3qDSNAWrYf
aMzxSkBUCbr2tlojQEnkqJRVME9AqfI7BuqoI0AcaEuOo19SQLLTpCUM/yNA
QbFK2FUKVkBHAFc6rGIkQCWCb4UemlpAie/LeA/RJEAeUfAdtgxgQGQ1L9FR
RiVA7e4OkzVCY0DSX323Z70lQH1h9zti9mZAo2eYbI0zJkCm8XDM8C9rQAqN
vMhJpiZAxWyLdkrzb0CVQW0PohMnQHuygldCmnJA3NoyM9Z4J0DZhvUco5R1
QMuEbDZg2CdAVK5Ro1/keEBtOED7zzAoQH0NNWMMgnxA8/JbD4CAKEBWzMKG
2EWAQGFpLh9gyShAs7Z5MVp3gkDdLGF16gkpQHDtN+jf44RA8htUvGNDKUDR
SUyHTm6HQD51K9c7cylAg7ZIh1gwikB5DsmQDpspQLrzwP40MY1Aj3h7SUy7
KUDNDwV9ZjyQQIDmRnWZ1ClAQezAkN4HkkDLnaAyoOcpQNR8QKXZ8ZNAyzfw
dm/0KUAgAB5B
    "],
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.844434230485321*^9, 3.844434239294903*^9}, 
   3.8509147479428473`*^9},ExpressionUUID->"1471fa0b-8e93-4104-aab6-\
6bc9e8d01b1d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"massradiusS05Becker", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List", "ListIcon", 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox[
             RowBox[{"{", 
               RowBox[{"41", ",", "2"}], "}"}], "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["3976", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAA6rKRbuZEB0BlF5ccXZQdQK7RgCnQ
nQtAJixwtKQTHkAm0G0kK4IQQAqxuQHgoB5AOP1XT7PVE0CYLrw08DsfQI58
c4SZ6BdAjvDU+r3jH0ChxRNm6eAcQLfGSAuFSyBAkFoED5F2IUDMpz0MYKog
QHp2r2GYHCVAYaF5KksNIUC/yxDLbYYpQPrS7DAudCFAesDIhKPcLkDg8Sm3
zN4hQD7K0mIvnDJAefM0aXdLIkBHx6fxCFk2QCyTmg84uCJA9LlwVZvMOkDP
QmqHJSYjQCKzZJk/nj5Ay2cquwx2I0D0IS90KEJBQIBpx5oluCNAUGrW3GFS
Q0C0qrsY4e4jQKjEv9Oys0VAB21C1pIeJECv0n2lib9IQEPdS46RTiRA88qg
/RD4TEAt4gPTM4gkQEq2v/JBVlFAv2vjSUPSJEB6TfFY//lUQE0VF7d4LSVA
qnP5QoBYWUD0Y1DfrJMlQKXUvhZTnl5An6Jx2BIDJkDsa2zdgWliQEqSICjB
diZATdjdIGr8ZUARp8tUdeomQPAwf0U+DmpAwSHOjoJbJ0CnJoKwNapuQBy7
FLtMyCdAZh0lzo7lcUCkRJ9OaC4oQOBAedzGuHRAKP+EVXSMKEBX6Gi2X+d3
QPy1YpZY5ChA06eyAWJte0Cih0MgBDUpQN4MEZUWRH9AEGezFCJ9KUAU+KmA
c8SBQMKP8ZRWvilAF3Y4MJAVhED0KLmcg/cpQGvJ/BJHo4ZA0EBzOLUpKkCj
uqrz60+JQJ14f8zGUipARKOMDnk1jEDZnKKr93MqQPu72RshW49Al/MFQ66N
KkDtJykIZGSRQNuuI6aHoCpAZUGWQoBDk0C2QcwUKa0qQNczs/lOQpVA/Czy
/c6zKkAqOiYk
    "],
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.8444342508664417`*^9, 3.844434257838202*^9}, 
   3.850914756358531*^9},ExpressionUUID->"a8f95d0b-e115-4c6c-a227-\
769d7815d02b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"massradiusS06Becker", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List", "ListIcon", 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox[
             RowBox[{"{", 
               RowBox[{"41", ",", "2"}], "}"}], "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["3976", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAA9rLFgP0OHUCO5+5Y7rEkQIMU9Szv
dSBAmYMtkFzVJEAb476eVbciQKo6CDx2+SRACAfY9/lVJUCME064vx4lQJZQ
PyiPXShAt4oMRy5FJUD8MHZlsdsrQDwv4s6TbCVAV7UpoiPgL0Do6ihNt5Ql
QLt1kWRkCTJAREiy8w+5JUAeq9j/s1c0QL81kxa92SVAkPknk5niNkAwt1NW
YfYlQPpqR0dnmDlA0Yw5eykOJkCiVI7OM2Q8QDwT7QOAHyZA1zshUMZgP0Ch
3yfMnSomQN2wuFMOQUFA9O0ymXMvJkASM2cbI+1CQDD50XkoLiZAnLM8Rr1F
RUC8hEA2cygmQPnwd8JxVUhAECfESwwnJkDiva81mJhMQA/FAeIGNSZA2Pzp
EIwjUUA7XV/v61omQLkF9y3trlRAqa6g8Q+YJkCsl0GGrAxZQFRU2euu6CZA
jO/auwQyXkDr3qo9WEUnQE2JJHI9I2JA2rHvMZOqJ0CzEPBpN6JlQE/AVv2X
EihAt5KVuveZaUCl6uazynkoQKtlZ0gUGG5AlMInEGveKEDBOIszGpFxQC6U
UEqQPilAZRittiJcdEDdM+XZf5gpQFtcAJI+a3dAOHQ1gLTqKUCdC0Hrd9d6
QCreLYSzNipAFQvsWt+dfkD53NIhxHsqQAlO4diVXIFAisbxVuG4KkBVCsEX
zKKDQDXh9mNG7ypA+yEg3+EahkA70l43RR4rQBWglEYJ0ohA/pgNDaJGK0Dl
+OfEH6mLQO8DEEOoZitAbY3a6uK6jkCiyUOxIH8rQE7OnyhDB5FAzCgNE16Q
K0AzyPoM+dWSQH8AuH/xmitAb0JprNvNlEBIU4kMd58rQGanvOaB55ZA3OFr
KVqeK0DHhSL/
    "],
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.844434265849409*^9, 3.8444342727540092`*^9}, 
   3.8509147739343896`*^9},ExpressionUUID->"6be83ca3-bf3e-414d-ac04-\
276f40355d44"],

Cell[BoxData[
 RowBox[{
  RowBox[{"massradiusS07Becker", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List", "ListIcon", 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox[
             RowBox[{"{", 
               RowBox[{"41", ",", "2"}], "}"}], "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["3976", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAA4/FpX70IMEAg78bTkPIrQLqAFUG/
cDFAUoptdUXrK0AJVjr3G/kyQGNeflYk3itABivLAQakNEC9ENkUAcwrQL3R
mwO0czZAnomJxFi1K0CDF4AJpGo4QAJf76+EmitApw2j/6iLOkAUK/Zq2Xsr
QMREwmav5jxAWKybuiZZK0AgX2mwMHo/QKw9G0esMytAoaiskkslQUCZMvEt
4QsrQFLWGNRBwUJARZhI+WHgKkBthHgnfqxEQNH3LPfisipA+nyo+EnfRkBX
iIBv+4cqQCS5Kdlw60lAAaxE6a5cKkBiLiU2/L9NQNGbPxbuPypAZXgMMnlq
UUDHSsWEpjYqQKUpoCYanlRA9+sPjmRGKkA1WFDo7ZVYQNLVAKB9bipAHNBC
Daw8XUD16rJfrqgqQBltBKwaZGFAKugQnRzxKkBrtogRGp9kQJopOEz8QitA
88b9HydDaECB2bTjL5grQDCYu25HaWxAqhk1A+/uK0BZCIRA9oZwQNAGGgmn
QyxAXiBLO1Qdc0D1n8GIrZQsQGoj9kT8AnZAbwcrT5PhLECqb0bf6jd5QD79
KHMQKS1A5MX3asm7fECjxkHUFGotQPZQkM4UR4BAK+R3FrmjLUASbbLJ2mOC
QCoCoLfF1i1Aq5+idWKzhEANkZmYDgMuQCeb8GXuM4dA7T+grRIoLkAtm2xy
MfOJQE16tWB1Ri5Ag/+6shHkjEAT2ie/y10uQBt5eKNEC5BAtXgfbWRuLkA9
gMT9ZrqRQHInF7rmdy5Aq3ZZNpSKk0Cv5JBsWXouQKryEp6Mf5VAmDq2IA92
LkCFifsNaZ2XQHYGZpyNay5AvkpAjZbomUAEn7DHZVsuQKGRdhqhWJxAB9be
XltGLkCd6R2/
    "],
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.844434283608698*^9, 3.8444342898978233`*^9}, 
   3.8509147871627135`*^9},ExpressionUUID->"149b29d6-ba92-4342-a41d-\
6c352943ec67"],

Cell[BoxData[
 RowBox[{
  RowBox[{"massradiusS08Becker", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List", "ListIcon", 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox[
             RowBox[{"{", 
               RowBox[{"41", ",", "2"}], "}"}], "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["3976", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAAhglWnLtIPECeQLPx4D0xQKqoelVg
PT5Ajq78lqkrMUA+nawWxihAQKAZ8r8pFTFAASNPEkZDQUD0wu4/AvswQH6F
D3/WbkJAEdVZiJ3dMEBNh7JoG6xDQLyRg9BIvTBA9HV96Nz7REDUi/JxR5ow
QPCqW9+udkZAkGyBG+dyMEDcXX01ahRIQKTW7ynDSTBAiJFKiSrXSUDz+hys
jh8wQO1/pV82EkxAAbAR/BjdL0Adr0K++0ZPQHEMsZYMci9A99v/81quUUA2
PCmY4BkvQCiERkJKTFRARtKwSVrZLkA0gY4wyIxXQOqgqYm1tC5AGySe/qlw
W0DICDsQh6ouQDXTR6A3DmBA+IkeZWe2LkDLmdeCKdZiQE1sDI0f1S5AtmwI
R9QGZkCBXIDaegEvQFSyAMO8qGlAdXFv0Jc2L0DkTJ3LT81tQPs7L6kqcS9A
HYyhuhs5cUBhfqf1w60vQM5FXeBp1nNAO8T+lszqL0DNDvAzN752QJRcR6H3
EjBAr7uAFmbweUA3BO02sC4wQPyN9szxbX1A8UL5IuJHMEA+tIZ+F52AQEt1
xCQOXjBALVaG89GtgkDVBU/U8XAwQN07iNRt7IRA74qKdG2AMEBLrQu4jmKH
QDb6AfmrjDBAymK2CKoRikBOSNI20pUwQOvrbVjE+oxAfpQKed2bMEB1rxr0
7BSQQMFOyZ73njBAnFmbuZfNkUB5LFa5RJ8wQNIMz1SlrZNAfoDSj9acMEDS
uyD1CaGVQALqGQPClzBAX8BRdLK3l0BdreT9fY8wQOsIGpJg9ZlAcbu1kBCE
MEDC9YlHPF6cQPSlwsyqdTBANBpixr/2nkD6UsgRi2QwQAKkkJJA36BAeD5I
vgtRMEDuBS9n
    "],
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.8444342966973867`*^9, 3.844434302507059*^9}, 
   3.8509147919591665`*^9},ExpressionUUID->"815484b4-6924-4fc5-885f-\
3c419fe7ed8e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"massradiusS09Becker", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List", "ListIcon", 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox[
             RowBox[{"{", 
               RowBox[{"41", ",", "2"}], "}"}], "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["3976", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    CompressedData["
1:eJwVjX0s1HEAh7mulzkmrrO01iY7Rhv1/V2MqA+ZOCOveVvk3RXiopS8M7mQ
snNyrhMTirtiLSamlBN6ldKdZURT0qV0lYz0x2fPnj1/fEwiT/rG0LS0tCzW
9p9ppU78HoEb3PMH+31VHMwMdQrcrLnYHblQYNjLgXFhs+MejQd01L263VIO
+Odj+ysnPSHc+y29JYODaNf25envh7HR6rTeRX8O6ps9VxQsH0SEMg4oLDkQ
pX6Nu+Tqi5nhequmFQrKzB/RthN+aGWdU9EHKFjFleQqBgJgKlmASQWFzjfj
U26MIIzbLLppR1FwZpaaSB6EgDv7wlZhS0GU3eB+Uz8MPPpk4KAhBXWmXM1c
Poaqu4LynRqCDWNRr0xdovC8Ln1UOkkga+dVyedi4N8+8yH0NYEdd4Xtrc/D
zNWW+w1PCfYN0tscmhMQm1I27L3mrLOWS+qQZMQxmT/rXhIMOnmpjBv5yOyi
l5B3BGkMlzIOlYastq3CjimCde/dkzyY6ahhuB7ynCfo7bs1ctkhA6qHI226
vwkWJ0ZljHtZMPPfr7alUdATFxbQHHNhKWh58liHgk+u1+yqcz7Chman/2ym
kOxunrArpxA5j0YGrm+hcIqeZGavKUJl13yimkXBsLhRUlMvQC0v0GZ1re+w
yTNwzCvFcWVHmtSAAkM+zpZ7l+Mzf3tOMYOCg324wJp2BdLW4L9ja//D7MRW
7tsKBMsYxZJfBBl5eT3XRoWotRtXTX8iaOowmt/2RYRuWbTSSkmQ2qwS3jGv
hosT9UymIOAtnbjRdKEGmiKWfmIbwUr4XJ8FS4r4XPH6sGoCe+347P7ZWmTc
ZvvJsgnE+WeCEFGHVLowQBRJIKcFpBRo6vGRe5R75CCBcphvrS1uQOOmhT4j
U4J/lVAq+w==
    "],
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.844434307787252*^9, 3.844434321113165*^9}, 
   3.8509147975491533`*^9},ExpressionUUID->"5c8a4d6d-e74a-4d10-a9c6-\
0132f1a99925"],

Cell[BoxData[
 RowBox[{
  RowBox[{"massradiusS10Becker", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"List", "ListIcon", 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["List", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox[
             RowBox[{"{", 
               RowBox[{"41", ",", "2"}], "}"}], "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            
            TagBox["3976", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    CompressedData["
1:eJwVxW0s1HEAB/CrpTydNbNO8hhbeSov3P93/5F9TyLrzENWduFyKPNsnjKN
m4c877g8k06I6+5oI4oM8zBbIu621IRU8lSW5M0p1YvPPlbChIDIwwwGw/af
//c9QVzXUhBOCWrHdadpbLtwE/YW+PAldpaSMRrS+KcGh7aC4SU6mSXooSEu
abZzZArgeUmz4/SAhpAuHXouvYmH5jPbnGwawa66HjrjYXj9fZKe59PwKtN2
dd8VIu5wuW+WEw3NQdb59OoIWEhbXyb94sArp4BVW3oL2h3hEqqfA/t7pszK
pSiEvrFlZ+RyIOuHFI0xCFkWf1EHcDBExE2xs/FYE2p8mbYcHBQPWos8klAe
WpmdfpQD9er4cowwGVpFVhvDGwQ1K8YDqlepkLzLnVCoCVIVxfvciDuYaMi1
zRglGDf+fbXOPRNT3So7+x6C1e6f07zYLKQN5s7I2ggWHSeFnbsiyKz8dq7U
EBzIQjDxOQdB5vpcRSHBRbMXVu26+eB6vnedyiAY6FvavBtagE3zwPCeaIJG
eflt769FMGG57XfzCb5tUTudj0qx05l9xN+bgA4eemtYLcaqh3eHHkWgrOHu
UpEVSHLTL6m2JNCTbFufsbwPhcFl2kCHgOlQncj7U4neoOm9kG0K+Y5zaZnH
apCUbGbAV1EQr3tFyt3q0Dbfe+L6Mwrr8T7KDGkDNJn7+2tVFE7zneURZ5sQ
Izwu16RQUDqamsgSpRBVqWyW/SmM8TWTXdPN0Bq5UZ96jgJLzhwJdGmBLE9t
zNSmkBfEiJoYboX/gdFc2Qc2WgTKCmbIY/iLRkY/drExlVBvEW3YgcHMa/Nh
2Wy0+6XMO3ySIbh1pSCUxwbrwg/ByKwc+osJozYsNijS4lO4poQRb2E4YMkZ
fwEnXSqS
    "],
    SelectWithContents->True,
    Selectable->False]}], ";"}]], "Input",
 CellChangeTimes->{{3.844434327477669*^9, 3.844434337666726*^9}, 
   3.8509116518635073`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"1f35bdc0-3633-4a1c-9cf3-124abee6ad05"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Interactive interface", "Section",
 CellChangeTimes->{
  3.850912652052558*^9},ExpressionUUID->"274ab1d2-6721-4da4-895b-\
2fc868a91310"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"plt", "=", 
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "plot", " ", "the", " ", "mass", " ", "histogram", " ", 
            "projected", " ", "onto", " ", "the", " ", "x"}], "-", "axis"}], 
          "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"plt3", "=", 
           RowBox[{"Dynamic", "@", 
            RowBox[{"Histogram", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}], "*", "317.8"}], ")"}], "&"}], "/@",
                  "\[IndentingNewLine]", 
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{"data0", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"mmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}], "*", "317.8"}], ")"}], 
                    "\[LessEqual]", "mmax"}], "&&", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "28", 
                    "\[RightDoubleBracket]"}], "]"}], "&&", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "29", 
                    "\[RightDoubleBracket]"}], "]"}], "&&", 
                    RowBox[{"rmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}], "*", "11.2"}], ")"}], 
                    "\[LessEqual]", "rmax"}], "&&", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "31", 
                    "\[RightDoubleBracket]"}], "]"}], "&&", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "32", 
                    "\[RightDoubleBracket]"}], "]"}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "31", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}]}], "\[LessEqual]", 
                    RowBox[{"\[Sigma]Rpercent", "/", "100."}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "32", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}]}], "\[LessEqual]", 
                    RowBox[{"\[Sigma]Rpercent", "/", "100."}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "28", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}]}], "\[LessEqual]", 
                    RowBox[{"\[Sigma]Mpercent", "/", "100."}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "29", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}]}], "\[LessEqual]", 
                    RowBox[{"\[Sigma]Mpercent", "/", "100."}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}], "^", "4"}], "/", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}]}], ">", "0.01"}], "&&", 
                    RowBox[{
                    RowBox[{
                    "Porb", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "20", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "Porb", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "Teq", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "39", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "Teq", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "Teff", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "Teff", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "eccentricity", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "21", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "eccentricity", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "mstar", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "mstar", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "rstar", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "rstar", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "aorb", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "24", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "aorb", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"First", "[", "FeHdex", "]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{"Last", "[", "FeHdex", "]"}]}]}], "&"}]}], 
                  "]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{"add1", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "&"}], "/@", 
                   RowBox[{"Select", "[", 
                    RowBox[{"np2", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"filter1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"mmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "mmax"}], "&&", 
                    RowBox[{"rmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{"#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "rmax"}], "&&", 
                    RowBox[{
                    RowBox[{
                    "Teq", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    RowBox[{
                    "Teq", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "&"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"mmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "mmax"}], "&&", 
                    RowBox[{"rmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "rmax"}]}], "&"}]}], "]"}]}], "]"}]}], ",", 
                  RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}],
               ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"{", "0.1", "}"}], ","}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{"xscale", ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"\"\<Log\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{"10", "^", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"10", ",", "mmin"}], "]"}], ",", 
                    RowBox[{"Log", "[", 
                    RowBox[{"10", ",", "mmax"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"10", ",", "mmax"}], "]"}], "-", 
                    RowBox[{"Log", "[", 
                    RowBox[{"10", ",", "mmin"}], "]"}]}], ")"}], "/", 
                    "histmassbin"}]}], "]"}]}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"mmin", ",", "mmax", ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"mmax", "-", "mmin"}], ")"}], "/", 
                   "histmassbin"}]}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"log", " ", "count", " ", "in", " ", 
                 RowBox[{"mass", "?", " ", "\"\<LogCount\>\""}]}], ","}], 
               "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{"logcountinmass", ",", "\"\<LogCount\>\"", ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", 
              InterpretationBox[
               DynamicModuleBox[{Typeset`open = False}, 
                TemplateBox[{"Expression", "SequenceIcon", 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Head: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["Sequence", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Length: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["10", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["1816", "IconizedItem"]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  Dynamic[Typeset`open]},
                 "IconizedObject"]],
               Sequence[
               AspectRatio -> 1/5, BarOrigin -> Bottom, ChartLayout -> 
                "Stacked", PlotRangePadding -> None, 
                ImageSize -> {450, Automatic}, 
                ImagePadding -> {{50, 0}, {0, 50}}, Frame -> True, FrameTicks -> 
                All, FrameLabel -> {{
                   If[$CellContext`logcountinmass, "LogCount", "Count"], 
                   ""}, {"", 
                   "Histogram of (\!\(\*SubscriptBox[\(M\), \
\(p\)]\)/\!\(\*SubscriptBox[\(M\), \(\[Earth]\)]\))"}}, FrameStyle -> 
                Directive[14, Gray, 
                  Thickness[0.005]]],
               SelectWithContents->True,
               Selectable->False]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
             RowBox[{"plot", " ", 
              RowBox[{"the", " ", "\\", "zeta"}]}], "-", 
             RowBox[{"parameter", " ", "\[Zeta]"}]}], "=", 
            RowBox[{
             FractionBox[
              RowBox[{"(", 
               RowBox[{
                SubscriptBox["R", "p"], "/", 
                SubscriptBox["R", "\[Earth]"]}], ")"}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 SubscriptBox["M", "p"], "/", 
                 SubscriptBox["M", "\[Earth]"]}], ")"}], 
               RowBox[{"1", "/", "4"}]]], " ", "histogram", " ", "at", " ", 
             "the", " ", "upper", " ", "right", " ", "corner"}]}], "*)"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"plt4", "=", 
           RowBox[{"Dynamic", "@", 
            RowBox[{"Histogram", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}], "*", "11.2"}], ")"}], "/", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}], "*", "317.8"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}]}], "&"}], "/@", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{"data0", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"mmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}], "*", "317.8"}], ")"}], 
                    "\[LessEqual]", "mmax"}], "&&", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "28", 
                    "\[RightDoubleBracket]"}], "]"}], "&&", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "29", 
                    "\[RightDoubleBracket]"}], "]"}], "&&", 
                    RowBox[{"rmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}], "*", "11.2"}], ")"}], 
                    "\[LessEqual]", "rmax"}], "&&", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "31", 
                    "\[RightDoubleBracket]"}], "]"}], "&&", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "32", 
                    "\[RightDoubleBracket]"}], "]"}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "31", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}]}], "\[LessEqual]", 
                    RowBox[{"\[Sigma]Rpercent", "/", "100."}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "32", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}]}], "\[LessEqual]", 
                    RowBox[{"\[Sigma]Rpercent", "/", "100."}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "28", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}]}], "\[LessEqual]", 
                    RowBox[{"\[Sigma]Mpercent", "/", "100."}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "29", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}]}], "\[LessEqual]", 
                    RowBox[{"\[Sigma]Mpercent", "/", "100."}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}], "^", "4"}], "/", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}]}], ">", "0.01"}], "&&", 
                    RowBox[{
                    RowBox[{
                    "Porb", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "20", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "Porb", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "Teq", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "39", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "Teq", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "Teff", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "Teff", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "eccentricity", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "21", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "eccentricity", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "mstar", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "mstar", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "rstar", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "rstar", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "aorb", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "24", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "aorb", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"First", "[", "FeHdex", "]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{"Last", "[", "FeHdex", "]"}]}]}], "&"}]}], 
                  "]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{"add1", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], ")"}], "/", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ")"}], "^", 
                    RowBox[{"(", 
                    RowBox[{"1", "/", "4"}], ")"}]}]}], "&"}], "/@", 
                   RowBox[{"Select", "[", 
                    RowBox[{"np2", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"filter1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"mmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "mmax"}], "&&", 
                    RowBox[{"rmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "rmax"}], "&&", 
                    RowBox[{
                    RowBox[{
                    "Teq", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    RowBox[{
                    "Teq", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "&"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"mmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "mmax"}], "&&", 
                    RowBox[{"rmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "rmax"}]}], "&"}]}], "]"}]}], "]"}]}], ",", 
                  RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}],
               ",", 
              RowBox[{"{", 
               RowBox[{"1", "/", "histzetabin"}], "}"}], ",", 
              InterpretationBox[
               DynamicModuleBox[{Typeset`open = False}, 
                TemplateBox[{"Expression", "SequenceIcon", 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Head: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["Sequence", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Length: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["8", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["1704", "IconizedItem"]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  Dynamic[Typeset`open]},
                 "IconizedObject"]],
               Sequence[
               AspectRatio -> 1/GoldenRatio, ChartLayout -> "Stacked", 
                ImageSize -> {Automatic, 150}, 
                ImagePadding -> {{0, 50}, {0, 70}}, Frame -> True, 
                FrameLabel -> {{"", "Count"}, {
                  "", "Histogram of \
\[Zeta]=\!\(\*FractionBox[\((\*SubscriptBox[\(R\), \
\(p\)]/\*SubscriptBox[\(R\), \(\[Earth]\)])\), \
SuperscriptBox[\((\*SubscriptBox[\(M\), \(p\)]/\*SubscriptBox[\(M\), \(\
\[Earth]\)])\), \(1/4\)]]\)"}}, FrameTicks -> All, FrameStyle -> 
                Directive[9, Gray, Bold, 
                  Thickness[0.007]]],
               SelectWithContents->True,
               Selectable->False]}], "]"}]}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"the", " ", "main", " ", 
            RowBox[{"plot", ":", " ", 
             RowBox[{"mass", "-", 
              RowBox[{"radius", " ", "diagram"}]}]}]}], ",", " ", 
           RowBox[{
           "with", " ", "the", " ", "manipulation", " ", "functionality"}], 
           ",", " ", 
           RowBox[{
           "provided", " ", "by", " ", "various", " ", "parameter", " ", 
            "control", " ", "types"}], ",", " ", 
           RowBox[{"such", " ", "as", " ", "Sliders"}], ",", " ", 
           "InputFields", ",", " ", "..."}], " ", "*)"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"The", " ", "red"}], ",", "yellow", ",", 
           RowBox[{
            RowBox[{
            "and", " ", "blue", " ", "lines", " ", "correspond", " ", "to", 
             " ", "the", " ", "mass"}], "-", 
            RowBox[{"radius", " ", "curves", " ", "for", " ", "Pure"}], "-", 
            RowBox[{"Fe", " ", "metals"}]}], ",", 
           RowBox[{"Pure", " ", "Silicates"}], ",", 
           RowBox[{
            RowBox[{"and", " ", "High"}], "-", 
            RowBox[{"Pressure", " ", 
             RowBox[{"Ices", ".", " ", "The"}], " ", "gray", " ", 
             "interlines", " ", "and", " ", "density"}], "-", 
            RowBox[{
            "mesh", " ", "shadings", " ", "between", " ", "them", " ", "are", 
             " ", "simply", " ", "equal"}], "-", 
            RowBox[{"radius", " ", "inter"}], "-", 
            RowBox[{"polation", " ", "between", " ", "the", " ", "red"}], "-", 
            RowBox[{"yellow", " ", "and", " ", "yellow"}], "-", 
            RowBox[{"blue", " ", 
             RowBox[{"lines", ".", " ", "In"}], " ", "this", " ", "case"}]}], 
           ",", 
           RowBox[{
            RowBox[{
            "they", " ", "closely", " ", "approximate", " ", "the", " ", 
             "two"}], "-", 
            RowBox[{"component", " ", "mass"}], "-", 
            RowBox[{"fraction", " ", 
             RowBox[{"mixtures", "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "The", " ", "contours", " ", "above", " ", "the", " ", "blue", " ",
             "line"}], ",", " ", 
           RowBox[{"for", " ", "example"}], ",", " ", 
           RowBox[{
            RowBox[{
            "are", " ", "for", " ", "different", " ", "amounts", " ", "of", 
             " ", "envelope", " ", "added", " ", "to", " ", "a", " ", 
             "pure"}], "-", "water", "-", 
            RowBox[{"ice", " ", "core", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "almost", " ", "equivalent", " ", "to", " ", "a", " ", 
                 "water"}], "-", 
                RowBox[{"rich", " ", "core"}]}], ")"}], ".", " ", "To"}], " ",
              "be", " ", "more", " ", "specific"}]}], ",", 
           RowBox[{
            RowBox[{
            "they", " ", "are", " ", "contours", " ", "of", " ", "the", " ", 
             RowBox[{"parameter", " ", "\\", "zeta"}], " ", "defined", " ", 
             "as", " ", "\[Zeta]"}], "=", 
            RowBox[{
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"(", 
                 RowBox[{
                  SubscriptBox["R", "p"], "/", 
                  SubscriptBox["R", "\[Earth]"]}], ")"}], 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   SubscriptBox["M", "p"], "/", 
                   SubscriptBox["M", "\[Earth]"]}], ")"}], 
                 RowBox[{"1", "/", "4"}]]], ".", "\[IndentingNewLine]", 
               "In"}], " ", "the", " ", "mass"}], "-", 
             RowBox[{
             "radius", " ", "plot", " ", "that", " ", "we", " ", 
              "generate"}]}]}], ",", 
           RowBox[{
           "we", " ", "choose", " ", "to", " ", "show", " ", "the", " ", 
            "contours", " ", "of", " ", "\[Zeta]", " ", "of", " ", "the", " ",
             "value", " ", "from", " ", "0", " ", "to", " ", "1", " ", "in", 
            " ", "incremental", " ", "step", " ", "of", " ", "0.1"}], ",", 
           RowBox[{"and", " ", "then"}], ",", 
           RowBox[{
           "followed", " ", "by", " ", "the", " ", "contours", " ", "of", " ",
             "z", " ", "value", " ", "of", " ", "1.5"}], ",", "2.0", ",", 
           "2.5", ",", "3.0", ",", " ", "4.0", ",", " ", 
           RowBox[{"and", " ", 
            RowBox[{"5.0", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"plt1", "=", 
           RowBox[{"Show", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{"env1", ",", "\[IndentingNewLine]", 
               RowBox[{"Which", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"env2", "\[Equal]", "1"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Density", " ", "Plot", " ", "for", " ", "Fe"}], 
                    "-", 
                    RowBox[{"Silicates", " ", "Contour", " ", "Mesh"}]}], ",",
                     " ", 
                    RowBox[{
                    RowBox[{"approximated", " ", "by", " ", "Power"}], "-", 
                    RowBox[{"Series", " ", "in", " ", 
                    RowBox[{"lg", "[", "mass", "]"}]}]}]}], "*)"}], 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"DensityPlot", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"r", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"10.", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.11408792224566819`"}], "+", 
                    RowBox[{"0.27851883673695`", " ", "x"}], "-", 
                    RowBox[{"0.01997874049680844`", " ", 
                    SuperscriptBox["x", "2"]}], "-", 
                    RowBox[{"0.002490304269884624`", " ", 
                    SuperscriptBox["x", "3"]}], "+", 
                    RowBox[{"0.00007525048500183394`", " ", 
                    SuperscriptBox["x", "4"]}], "-", 
                    RowBox[{"0.00007162041164677924`", " ", 
                    SuperscriptBox["x", "5"]}], "-", 
                    RowBox[{"0.00003393158521958243`", " ", 
                    SuperscriptBox["x", "6"]}], "+", 
                    RowBox[{"8.589995554646332`*^-7", " ", 
                    SuperscriptBox["x", "7"]}], "+", 
                    RowBox[{"1.132375249329131`*^-6", " ", 
                    SuperscriptBox["x", "8"]}], "+", 
                    RowBox[{"2.2299345660512832`*^-8", " ", 
                    SuperscriptBox["x", "9"]}], "-", 
                    RowBox[{"1.0475165171649914`*^-8", " ", 
                    SuperscriptBox["x", "10"]}]}], ")"}]}], "/.", 
                    RowBox[{"x", "\[Rule]", 
                    RowBox[{"Log10", "[", "m", "]"}]}]}], ")"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"10.", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.020013868549526272`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.29811170324848235`", " ", "x"}], "-", 
                    RowBox[{"0.02012734730157388`", " ", 
                    SuperscriptBox["x", "2"]}], "-", 
                    RowBox[{"0.0052918215948260265`", " ", 
                    SuperscriptBox["x", "3"]}], "-", 
                    RowBox[{"0.0003311775031243655`", " ", 
                    SuperscriptBox["x", "4"]}], "+", 
                    RowBox[{"0.00004856681718363753`", " ", 
                    SuperscriptBox["x", "5"]}], "-", 
                    RowBox[{"0.00001245509278944841`", " ", 
                    SuperscriptBox["x", "6"]}], "-", 
                    RowBox[{"1.3074832660503483`*^-6", " ", 
                    SuperscriptBox["x", "7"]}], "+", 
                    RowBox[{"8.211419885278952`*^-7", " ", 
                    SuperscriptBox["x", "8"]}], "+", 
                    RowBox[{"3.47368749025812`*^-8", " ", 
                    SuperscriptBox["x", "9"]}], "-", 
                    RowBox[{"1.1251826465596989`*^-8", " ", 
                    SuperscriptBox["x", "10"]}]}], ")"}]}], "/.", 
                    RowBox[{"x", "\[Rule]", 
                    RowBox[{"Log10", "[", "m", "]"}]}]}], ")"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"10.", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.11408792224566819`"}], "+", 
                    RowBox[{"0.27851883673695`", " ", "x"}], "-", 
                    RowBox[{"0.01997874049680844`", " ", 
                    SuperscriptBox["x", "2"]}], "-", 
                    RowBox[{"0.002490304269884624`", " ", 
                    SuperscriptBox["x", "3"]}], "+", 
                    RowBox[{"0.00007525048500183394`", " ", 
                    SuperscriptBox["x", "4"]}], "-", 
                    RowBox[{"0.00007162041164677924`", " ", 
                    SuperscriptBox["x", "5"]}], "-", 
                    RowBox[{"0.00003393158521958243`", " ", 
                    SuperscriptBox["x", "6"]}], "+", 
                    RowBox[{"8.589995554646332`*^-7", " ", 
                    SuperscriptBox["x", "7"]}], "+", 
                    RowBox[{"1.132375249329131`*^-6", " ", 
                    SuperscriptBox["x", "8"]}], "+", 
                    RowBox[{"2.2299345660512832`*^-8", " ", 
                    SuperscriptBox["x", "9"]}], "-", 
                    RowBox[{"1.0475165171649914`*^-8", " ", 
                    SuperscriptBox["x", "10"]}]}], ")"}]}], "/.", 
                    RowBox[{"x", "\[Rule]", 
                    RowBox[{"Log10", "[", "m", "]"}]}]}], ")"}]}], ")"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"m", ",", "mmin", ",", "mmax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
                    InterpretationBox[
                    DynamicModuleBox[{Typeset`open = False}, 
                    TemplateBox[{"Expression", "SequenceIcon", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Head: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["Sequence", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Length: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["9", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["6056", "IconizedItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    Dynamic[Typeset`open]},
                    "IconizedObject"]],
                    Sequence[ScalingFunctions -> {
                    If[$CellContext`xscale, "Log", None], 
                    If[$CellContext`yscale, "Log", None]}, 
                    MeshFunctions -> {#3& }, Mesh -> {{0.2, 0.4, 0.6, 0.8}}, 
                    PlotPoints -> ControlActive[10, 30], RegionFunction -> 
                    Function[{$CellContext`m, $CellContext`r, $CellContext`z},
                     ReplaceAll[
                    10.^(-0.11408792224566819` + 
                    0.27851883673695 $CellContext`x - 
                    0.01997874049680844 $CellContext`x^2 - 
                    0.002490304269884624 $CellContext`x^3 + 
                    0.00007525048500183394 $CellContext`x^4 - 
                    0.00007162041164677924 $CellContext`x^5 - 
                    0.00003393158521958243 $CellContext`x^6 + 
                    8.589995554646332*^-7 $CellContext`x^7 + 
                    1.132375249329131*^-6 $CellContext`x^8 + 
                    2.2299345660512832`*^-8 $CellContext`x^9 - 
                    1.0475165171649914`*^-8 $CellContext`x^10), \
$CellContext`x -> Log10[$CellContext`m]] < $CellContext`r < 
                    ReplaceAll[
                    10.^(0.020013868549526272` + 
                    0.29811170324848235` $CellContext`x - 
                    0.02012734730157388 $CellContext`x^2 - 
                    0.0052918215948260265` $CellContext`x^3 - 
                    0.0003311775031243655 $CellContext`x^4 + 
                    0.00004856681718363753 $CellContext`x^5 - 
                    0.00001245509278944841 $CellContext`x^6 - 
                    1.3074832660503483`*^-6 $CellContext`x^7 + 
                    8.211419885278952*^-7 $CellContext`x^8 + 
                    3.47368749025812*^-8 $CellContext`x^9 - 
                    1.1251826465596989`*^-8 $CellContext`x^10), \
$CellContext`x -> Log10[$CellContext`m]]], BoundaryStyle -> None, 
                    ColorFunction -> (Opacity[1., 
                    Blend[{Gray, White}, #]]& ), ColorFunctionScaling -> 
                    False, Exclusions -> None],
                    SelectWithContents->True,
                    Selectable->False]}], "]"}], ",", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Density", " ", "Plot", " ", "for", " ", "Silicates"}], 
                    "-", 
                    RowBox[{"H2O", " ", "Contour", " ", "Mesh"}]}], ",", " ", 
                    
                    RowBox[{
                    RowBox[{"approximated", " ", "by", " ", "Power"}], "-", 
                    RowBox[{"Series", " ", "in", " ", 
                    RowBox[{"lg", "[", "mass", "]"}]}]}]}], "*)"}], 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"DensityPlot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"r", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"10.", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.020013868549526272`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.29811170324848235`", " ", "x"}], "-", 
                    RowBox[{"0.02012734730157388`", " ", 
                    SuperscriptBox["x", "2"]}], "-", 
                    RowBox[{"0.0052918215948260265`", " ", 
                    SuperscriptBox["x", "3"]}], "-", 
                    RowBox[{"0.0003311775031243655`", " ", 
                    SuperscriptBox["x", "4"]}], "+", 
                    RowBox[{"0.00004856681718363753`", " ", 
                    SuperscriptBox["x", "5"]}], "-", 
                    RowBox[{"0.00001245509278944841`", " ", 
                    SuperscriptBox["x", "6"]}], "-", 
                    RowBox[{"1.3074832660503483`*^-6", " ", 
                    SuperscriptBox["x", "7"]}], "+", 
                    RowBox[{"8.211419885278952`*^-7", " ", 
                    SuperscriptBox["x", "8"]}], "+", 
                    RowBox[{"3.47368749025812`*^-8", " ", 
                    SuperscriptBox["x", "9"]}], "-", 
                    RowBox[{"1.1251826465596989`*^-8", " ", 
                    SuperscriptBox["x", "10"]}]}], ")"}]}], "/.", 
                    RowBox[{"x", "\[Rule]", 
                    RowBox[{"Log10", "[", "m", "]"}]}]}], ")"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"10.", "^", 
                    RowBox[{"(", 
                    RowBox[{"0.13666292574887867`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.27183702181443314`", " ", "x"}], "-", 
                    RowBox[{"0.007134024332627119`", " ", 
                    SuperscriptBox["x", "2"]}], "-", 
                    RowBox[{"0.0021407416433092126`", " ", 
                    SuperscriptBox["x", "3"]}], "-", 
                    RowBox[{"0.0022608931475693915`", " ", 
                    SuperscriptBox["x", "4"]}], "-", 
                    RowBox[{"0.0002516518649610248`", " ", 
                    SuperscriptBox["x", "5"]}], "+", 
                    RowBox[{"0.00011968169122553435`", " ", 
                    SuperscriptBox["x", "6"]}], "+", 
                    RowBox[{"0.000011663496987412905`", " ", 
                    SuperscriptBox["x", "7"]}], "-", 
                    RowBox[{"3.536434693875541`*^-6", " ", 
                    SuperscriptBox["x", "8"]}], "-", 
                    RowBox[{"1.6848230313524644`*^-7", " ", 
                    SuperscriptBox["x", "9"]}], "+", 
                    RowBox[{"4.4044933682275176`*^-8", " ", 
                    SuperscriptBox["x", "10"]}]}], ")"}]}], "/.", 
                    RowBox[{"x", "\[Rule]", 
                    RowBox[{"Log10", "[", "m", "]"}]}]}], ")"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"10.", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.020013868549526272`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.29811170324848235`", " ", "x"}], "-", 
                    RowBox[{"0.02012734730157388`", " ", 
                    SuperscriptBox["x", "2"]}], "-", 
                    RowBox[{"0.0052918215948260265`", " ", 
                    SuperscriptBox["x", "3"]}], "-", 
                    RowBox[{"0.0003311775031243655`", " ", 
                    SuperscriptBox["x", "4"]}], "+", 
                    RowBox[{"0.00004856681718363753`", " ", 
                    SuperscriptBox["x", "5"]}], "-", 
                    RowBox[{"0.00001245509278944841`", " ", 
                    SuperscriptBox["x", "6"]}], "-", 
                    RowBox[{"1.3074832660503483`*^-6", " ", 
                    SuperscriptBox["x", "7"]}], "+", 
                    RowBox[{"8.211419885278952`*^-7", " ", 
                    SuperscriptBox["x", "8"]}], "+", 
                    RowBox[{"3.47368749025812`*^-8", " ", 
                    SuperscriptBox["x", "9"]}], "-", 
                    RowBox[{"1.1251826465596989`*^-8", " ", 
                    SuperscriptBox["x", "10"]}]}], ")"}]}], "/.", 
                    RowBox[{"x", "\[Rule]", 
                    RowBox[{"Log10", "[", "m", "]"}]}]}], ")"}]}], ")"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"m", ",", "mmin", ",", "mmax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
                    InterpretationBox[
                    DynamicModuleBox[{Typeset`open = False}, 
                    TemplateBox[{"Expression", "SequenceIcon", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Head: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["Sequence", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Length: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["9", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["6128", "IconizedItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    Dynamic[Typeset`open]},
                    "IconizedObject"]],
                    Sequence[ScalingFunctions -> {
                    If[$CellContext`xscale, "Log", None], 
                    If[$CellContext`yscale, "Log", None]}, 
                    MeshFunctions -> {#3& }, Mesh -> {{0.2, 0.4, 0.6, 0.8}}, 
                    PlotPoints -> ControlActive[10, 30], RegionFunction -> 
                    Function[{$CellContext`m, $CellContext`r, $CellContext`z},
                     ReplaceAll[
                    10.^(0.020013868549526272` + 
                    0.29811170324848235` $CellContext`x - 
                    0.02012734730157388 $CellContext`x^2 - 
                    0.0052918215948260265` $CellContext`x^3 - 
                    0.0003311775031243655 $CellContext`x^4 + 
                    0.00004856681718363753 $CellContext`x^5 - 
                    0.00001245509278944841 $CellContext`x^6 - 
                    1.3074832660503483`*^-6 $CellContext`x^7 + 
                    8.211419885278952*^-7 $CellContext`x^8 + 
                    3.47368749025812*^-8 $CellContext`x^9 - 
                    1.1251826465596989`*^-8 $CellContext`x^10), \
$CellContext`x -> Log10[$CellContext`m]] < $CellContext`r < 
                    ReplaceAll[
                    10.^(0.13666292574887867` + 
                    0.27183702181443314` $CellContext`x - 
                    0.007134024332627119 $CellContext`x^2 - 
                    0.0021407416433092126` $CellContext`x^3 - 
                    0.0022608931475693915` $CellContext`x^4 - 
                    0.0002516518649610248 $CellContext`x^5 + 
                    0.00011968169122553435` $CellContext`x^6 + 
                    0.000011663496987412905` $CellContext`x^7 - 
                    3.536434693875541*^-6 $CellContext`x^8 - 
                    1.6848230313524644`*^-7 $CellContext`x^9 + 
                    4.4044933682275176`*^-8 $CellContext`x^10), \
$CellContext`x -> Log10[$CellContext`m]]], BoundaryStyle -> None, 
                    ColorFunction -> (Opacity[1., 
                    Blend[{Gray, White}, #]]& ), ColorFunctionScaling -> 
                    False, Exclusions -> None],
                    SelectWithContents->True,
                    Selectable->False]}], "]"}], ",", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Density", " ", "Plot", " ", "for", " ", "Envelope"}], 
                    "-", 
                    RowBox[{"H2O", " ", "Contour", " ", "Mesh"}]}], ",", " ", 
                    
                    RowBox[{
                    RowBox[{"approximated", " ", "by", " ", "Power"}], "-", 
                    RowBox[{"Series", " ", "in", " ", 
                    RowBox[{"lg", "[", "mass", "]"}]}]}]}], "*)"}], 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"DensityPlot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"10.", "^", 
                    RowBox[{"(", 
                    RowBox[{"0.13666292574887867`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.27183702181443314`", " ", "x"}], "-", 
                    RowBox[{"0.007134024332627119`", " ", 
                    SuperscriptBox["x", "2"]}], "-", 
                    RowBox[{"0.0021407416433092126`", " ", 
                    SuperscriptBox["x", "3"]}], "-", 
                    RowBox[{"0.0022608931475693915`", " ", 
                    SuperscriptBox["x", "4"]}], "-", 
                    RowBox[{"0.0002516518649610248`", " ", 
                    SuperscriptBox["x", "5"]}], "+", 
                    RowBox[{"0.00011968169122553435`", " ", 
                    SuperscriptBox["x", "6"]}], "+", 
                    RowBox[{"0.000011663496987412905`", " ", 
                    SuperscriptBox["x", "7"]}], "-", 
                    RowBox[{"3.536434693875541`*^-6", " ", 
                    SuperscriptBox["x", "8"]}], "-", 
                    RowBox[{"1.6848230313524644`*^-7", " ", 
                    SuperscriptBox["x", "9"]}], "+", 
                    RowBox[{"4.4044933682275176`*^-8", " ", 
                    SuperscriptBox["x", "10"]}]}], ")"}]}], "/.", 
                    RowBox[{"x", "\[Rule]", 
                    RowBox[{"Log10", "[", "m", "]"}]}]}], ")"}]}], "-", 
                    RowBox[{"1", "/", "r"}]}], ")"}], "*", "m"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"m", ",", "mmin", ",", "mmax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
                    InterpretationBox[
                    DynamicModuleBox[{Typeset`open = False}, 
                    TemplateBox[{"Expression", "SequenceIcon", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Head: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["Sequence", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Length: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["9", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["4232", "IconizedItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    Dynamic[Typeset`open]},
                    "IconizedObject"]],
                    Sequence[ScalingFunctions -> {
                    If[$CellContext`xscale, "Log", None], 
                    If[$CellContext`yscale, "Log", None]}, 
                    MeshFunctions -> {#3& }, 
                    Mesh -> {{0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.,
                     1.5, 2., 2.5, 3., 4., 5.}}, PlotPoints -> 
                    ControlActive[10, 50], RegionFunction -> 
                    Function[{$CellContext`m, $CellContext`r, $CellContext`z},
                     ReplaceAll[
                    10.^(0.13666292574887867` + 
                    0.27183702181443314` $CellContext`x - 
                    0.007134024332627119 $CellContext`x^2 - 
                    0.0021407416433092126` $CellContext`x^3 - 
                    0.0022608931475693915` $CellContext`x^4 - 
                    0.0002516518649610248 $CellContext`x^5 + 
                    0.00011968169122553435` $CellContext`x^6 + 
                    0.000011663496987412905` $CellContext`x^7 - 
                    3.536434693875541*^-6 $CellContext`x^8 - 
                    1.6848230313524644`*^-7 $CellContext`x^9 + 
                    4.4044933682275176`*^-8 $CellContext`x^10), \
$CellContext`x -> Log10[$CellContext`m]] < $CellContext`r], BoundaryStyle -> 
                    None, ColorFunction -> (Opacity[1., 
                    Blend[{Gray, White}, #]]& ), ColorFunctionScaling -> 
                    False, Exclusions -> None],
                    SelectWithContents->True,
                    Selectable->False]}], "]"}]}], "}"}], ",", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"env2", "\[Equal]", "2"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Density", " ", "Plot", " ", "for", " ", "Fe"}], 
                    "-", 
                    RowBox[{"Silicates", " ", "Contour", " ", "Mesh"}]}], ",",
                     " ", 
                    RowBox[{
                    RowBox[{"approximated", " ", "by", " ", "Power"}], "-", 
                    RowBox[{"Series", " ", "in", " ", 
                    RowBox[{"lg", "[", "mass", "]"}]}]}]}], "*)"}], 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"DensityPlot", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"r", "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"10.", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.11408792224566819`"}], "+", 
                    RowBox[{"0.27851883673695`", " ", "x"}], "-", 
                    RowBox[{"0.01997874049680844`", " ", 
                    SuperscriptBox["x", "2"]}], "-", 
                    RowBox[{"0.002490304269884624`", " ", 
                    SuperscriptBox["x", "3"]}], "+", 
                    RowBox[{"0.00007525048500183394`", " ", 
                    SuperscriptBox["x", "4"]}], "-", 
                    RowBox[{"0.00007162041164677924`", " ", 
                    SuperscriptBox["x", "5"]}], "-", 
                    RowBox[{"0.00003393158521958243`", " ", 
                    SuperscriptBox["x", "6"]}], "+", 
                    RowBox[{"8.589995554646332`*^-7", " ", 
                    SuperscriptBox["x", "7"]}], "+", 
                    RowBox[{"1.132375249329131`*^-6", " ", 
                    SuperscriptBox["x", "8"]}], "+", 
                    RowBox[{"2.2299345660512832`*^-8", " ", 
                    SuperscriptBox["x", "9"]}], "-", 
                    RowBox[{"1.0475165171649914`*^-8", " ", 
                    SuperscriptBox["x", "10"]}]}], ")"}]}], "/.", 
                    RowBox[{"x", "\[Rule]", 
                    RowBox[{"Log10", "[", "m", "]"}]}]}], ")"}]}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"10.", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.020013868549526272`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.29811170324848235`", " ", "x"}], "-", 
                    RowBox[{"0.02012734730157388`", " ", 
                    SuperscriptBox["x", "2"]}], "-", 
                    RowBox[{"0.0052918215948260265`", " ", 
                    SuperscriptBox["x", "3"]}], "-", 
                    RowBox[{"0.0003311775031243655`", " ", 
                    SuperscriptBox["x", "4"]}], "+", 
                    RowBox[{"0.00004856681718363753`", " ", 
                    SuperscriptBox["x", "5"]}], "-", 
                    RowBox[{"0.00001245509278944841`", " ", 
                    SuperscriptBox["x", "6"]}], "-", 
                    RowBox[{"1.3074832660503483`*^-6", " ", 
                    SuperscriptBox["x", "7"]}], "+", 
                    RowBox[{"8.211419885278952`*^-7", " ", 
                    SuperscriptBox["x", "8"]}], "+", 
                    RowBox[{"3.47368749025812`*^-8", " ", 
                    SuperscriptBox["x", "9"]}], "-", 
                    RowBox[{"1.1251826465596989`*^-8", " ", 
                    SuperscriptBox["x", "10"]}]}], ")"}]}], "/.", 
                    RowBox[{"x", "\[Rule]", 
                    RowBox[{"Log10", "[", "m", "]"}]}]}], ")"}], "-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"10.", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.11408792224566819`"}], "+", 
                    RowBox[{"0.27851883673695`", " ", "x"}], "-", 
                    RowBox[{"0.01997874049680844`", " ", 
                    SuperscriptBox["x", "2"]}], "-", 
                    RowBox[{"0.002490304269884624`", " ", 
                    SuperscriptBox["x", "3"]}], "+", 
                    RowBox[{"0.00007525048500183394`", " ", 
                    SuperscriptBox["x", "4"]}], "-", 
                    RowBox[{"0.00007162041164677924`", " ", 
                    SuperscriptBox["x", "5"]}], "-", 
                    RowBox[{"0.00003393158521958243`", " ", 
                    SuperscriptBox["x", "6"]}], "+", 
                    RowBox[{"8.589995554646332`*^-7", " ", 
                    SuperscriptBox["x", "7"]}], "+", 
                    RowBox[{"1.132375249329131`*^-6", " ", 
                    SuperscriptBox["x", "8"]}], "+", 
                    RowBox[{"2.2299345660512832`*^-8", " ", 
                    SuperscriptBox["x", "9"]}], "-", 
                    RowBox[{"1.0475165171649914`*^-8", " ", 
                    SuperscriptBox["x", "10"]}]}], ")"}]}], "/.", 
                    RowBox[{"x", "\[Rule]", 
                    RowBox[{"Log10", "[", "m", "]"}]}]}], ")"}]}], ")"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"m", ",", "mmin", ",", "mmax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
                    InterpretationBox[
                    DynamicModuleBox[{Typeset`open = False}, 
                    TemplateBox[{"Expression", "SequenceIcon", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Head: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["Sequence", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Length: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["9", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["6056", "IconizedItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    Dynamic[Typeset`open]},
                    "IconizedObject"]],
                    Sequence[ScalingFunctions -> {
                    If[$CellContext`xscale, "Log", None], 
                    If[$CellContext`yscale, "Log", None]}, 
                    MeshFunctions -> {#3& }, Mesh -> {{0.2, 0.4, 0.6, 0.8}}, 
                    PlotPoints -> ControlActive[10, 30], RegionFunction -> 
                    Function[{$CellContext`m, $CellContext`r, $CellContext`z},
                     ReplaceAll[
                    10.^(-0.11408792224566819` + 
                    0.27851883673695 $CellContext`x - 
                    0.01997874049680844 $CellContext`x^2 - 
                    0.002490304269884624 $CellContext`x^3 + 
                    0.00007525048500183394 $CellContext`x^4 - 
                    0.00007162041164677924 $CellContext`x^5 - 
                    0.00003393158521958243 $CellContext`x^6 + 
                    8.589995554646332*^-7 $CellContext`x^7 + 
                    1.132375249329131*^-6 $CellContext`x^8 + 
                    2.2299345660512832`*^-8 $CellContext`x^9 - 
                    1.0475165171649914`*^-8 $CellContext`x^10), \
$CellContext`x -> Log10[$CellContext`m]] < $CellContext`r < 
                    ReplaceAll[
                    10.^(0.020013868549526272` + 
                    0.29811170324848235` $CellContext`x - 
                    0.02012734730157388 $CellContext`x^2 - 
                    0.0052918215948260265` $CellContext`x^3 - 
                    0.0003311775031243655 $CellContext`x^4 + 
                    0.00004856681718363753 $CellContext`x^5 - 
                    0.00001245509278944841 $CellContext`x^6 - 
                    1.3074832660503483`*^-6 $CellContext`x^7 + 
                    8.211419885278952*^-7 $CellContext`x^8 + 
                    3.47368749025812*^-8 $CellContext`x^9 - 
                    
                    1.1251826465596989`*^-8 $CellContext`x^10), \
$CellContext`x -> Log10[$CellContext`m]]], BoundaryStyle -> None, 
                    ColorFunction -> (Opacity[1., 
                    Blend[{Gray, White}, #]]& ), ColorFunctionScaling -> 
                    False, Exclusions -> None],
                    SelectWithContents->True,
                    Selectable->False]}], "]"}], ",", "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Density", " ", "Plot", " ", "for", " ", "Envelope"}], 
                    "-", 
                    RowBox[{"Silicates", " ", "Contour", " ", "Mesh"}]}], ",",
                     " ", 
                    RowBox[{
                    RowBox[{"approximated", " ", "by", " ", "Power"}], "-", 
                    RowBox[{"Series", " ", "in", " ", 
                    RowBox[{"lg", "[", "mass", "]"}]}]}]}], "*)"}], 
                   "\[IndentingNewLine]", "\[IndentingNewLine]", 
                   RowBox[{"DensityPlot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"10.", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.020013868549526272`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.29811170324848235`", " ", "x"}], "-", 
                    RowBox[{"0.02012734730157388`", " ", 
                    SuperscriptBox["x", "2"]}], "-", 
                    RowBox[{"0.0052918215948260265`", " ", 
                    SuperscriptBox["x", "3"]}], "-", 
                    RowBox[{"0.0003311775031243655`", " ", 
                    SuperscriptBox["x", "4"]}], "+", 
                    RowBox[{"0.00004856681718363753`", " ", 
                    SuperscriptBox["x", "5"]}], "-", 
                    RowBox[{"0.00001245509278944841`", " ", 
                    SuperscriptBox["x", "6"]}], "-", 
                    RowBox[{"1.3074832660503483`*^-6", " ", 
                    SuperscriptBox["x", "7"]}], "+", 
                    RowBox[{"8.211419885278952`*^-7", " ", 
                    SuperscriptBox["x", "8"]}], "+", 
                    RowBox[{"3.47368749025812`*^-8", " ", 
                    SuperscriptBox["x", "9"]}], "-", 
                    RowBox[{"1.1251826465596989`*^-8", " ", 
                    SuperscriptBox["x", "10"]}]}], ")"}]}], "/.", 
                    RowBox[{"x", "\[Rule]", 
                    RowBox[{"Log10", "[", "m", "]"}]}]}], ")"}]}], "-", 
                    RowBox[{"1", "/", "r"}]}], ")"}], "*", "m"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"m", ",", "mmin", ",", "mmax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
                    InterpretationBox[
                    DynamicModuleBox[{Typeset`open = False}, 
                    TemplateBox[{"Expression", "SequenceIcon", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Head: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["Sequence", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Length: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["9", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["4232", "IconizedItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    Dynamic[Typeset`open]},
                    "IconizedObject"]],
                    Sequence[ScalingFunctions -> {
                    If[$CellContext`xscale, "Log", None], 
                    If[$CellContext`yscale, "Log", None]}, 
                    MeshFunctions -> {#3& }, 
                    Mesh -> {{0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.,
                     1.5, 2., 2.5, 3., 4., 5.}}, PlotPoints -> 
                    ControlActive[10, 50], RegionFunction -> 
                    Function[{$CellContext`m, $CellContext`r, $CellContext`z},
                     ReplaceAll[
                    10.^(0.020013868549526272` + 
                    0.29811170324848235` $CellContext`x - 
                    0.02012734730157388 $CellContext`x^2 - 
                    0.0052918215948260265` $CellContext`x^3 - 
                    0.0003311775031243655 $CellContext`x^4 + 
                    0.00004856681718363753 $CellContext`x^5 - 
                    0.00001245509278944841 $CellContext`x^6 - 
                    1.3074832660503483`*^-6 $CellContext`x^7 + 
                    8.211419885278952*^-7 $CellContext`x^8 + 
                    3.47368749025812*^-8 $CellContext`x^9 - 
                    1.1251826465596989`*^-8 $CellContext`x^10), \
$CellContext`x -> Log10[$CellContext`m]] < $CellContext`r], BoundaryStyle -> 
                    None, ColorFunction -> (Opacity[1., 
                    Blend[{Gray, White}, #]]& ), ColorFunctionScaling -> 
                    False, Exclusions -> None],
                    SelectWithContents->True,
                    Selectable->False]}], "]"}]}], "}"}], ",", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"env2", "\[Equal]", "3"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "Density", " ", "Plot", " ", "for", " ", "Envelope"}], 
                    "-", 
                    RowBox[{"Fe", " ", "Contour", " ", "Mesh"}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"approximated", " ", "by", " ", "Power"}], "-", 
                    RowBox[{"Series", " ", "in", " ", 
                    RowBox[{"lg", "[", "mass", "]"}]}]}]}], "*)"}], 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", 
                  RowBox[{"DensityPlot", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"10.", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.11408792224566819`"}], "+", 
                    RowBox[{"0.27851883673695`", " ", "x"}], "-", 
                    RowBox[{"0.01997874049680844`", " ", 
                    SuperscriptBox["x", "2"]}], "-", 
                    RowBox[{"0.002490304269884624`", " ", 
                    SuperscriptBox["x", "3"]}], "+", 
                    RowBox[{"0.00007525048500183394`", " ", 
                    SuperscriptBox["x", "4"]}], "-", 
                    RowBox[{"0.00007162041164677924`", " ", 
                    SuperscriptBox["x", "5"]}], "-", 
                    RowBox[{"0.00003393158521958243`", " ", 
                    SuperscriptBox["x", "6"]}], "+", 
                    RowBox[{"8.589995554646332`*^-7", " ", 
                    SuperscriptBox["x", "7"]}], "+", 
                    RowBox[{"1.132375249329131`*^-6", " ", 
                    SuperscriptBox["x", "8"]}], "+", 
                    RowBox[{"2.2299345660512832`*^-8", " ", 
                    SuperscriptBox["x", "9"]}], "-", 
                    RowBox[{"1.0475165171649914`*^-8", " ", 
                    SuperscriptBox["x", "10"]}]}], ")"}]}], "/.", 
                    RowBox[{"x", "\[Rule]", 
                    RowBox[{"Log10", "[", "m", "]"}]}]}], ")"}]}], "-", 
                    RowBox[{"1", "/", "r"}]}], ")"}], "*", "m"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"m", ",", "mmin", ",", "mmax"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"r", ",", "rmin", ",", "rmax"}], "}"}], ",", 
                    InterpretationBox[
                    DynamicModuleBox[{Typeset`open = False}, 
                    TemplateBox[{"Expression", "SequenceIcon", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Head: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["Sequence", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Length: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["9", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["4160", "IconizedItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    Dynamic[Typeset`open]},
                    "IconizedObject"]],
                    Sequence[ScalingFunctions -> {
                    If[$CellContext`xscale, "Log", None], 
                    If[$CellContext`yscale, "Log", None]}, 
                    MeshFunctions -> {#3& }, 
                    Mesh -> {{0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.,
                     1.5, 2., 2.5, 3., 4., 5.}}, PlotPoints -> 
                    ControlActive[10, 50], RegionFunction -> 
                    Function[{$CellContext`m, $CellContext`r, $CellContext`z},
                     ReplaceAll[
                    10.^(-0.11408792224566819` + 
                    0.27851883673695 $CellContext`x - 
                    0.01997874049680844 $CellContext`x^2 - 
                    0.002490304269884624 $CellContext`x^3 + 
                    0.00007525048500183394 $CellContext`x^4 - 
                    0.00007162041164677924 $CellContext`x^5 - 
                    0.00003393158521958243 $CellContext`x^6 + 
                    8.589995554646332*^-7 $CellContext`x^7 + 
                    1.132375249329131*^-6 $CellContext`x^8 + 
                    2.2299345660512832`*^-8 $CellContext`x^9 - 
                    1.0475165171649914`*^-8 $CellContext`x^10), \
$CellContext`x -> Log10[$CellContext`m]] < $CellContext`r], BoundaryStyle -> 
                    None, ColorFunction -> (Opacity[1., 
                    Blend[{Gray, White}, #]]& ), ColorFunctionScaling -> 
                    False, Exclusions -> None],
                    SelectWithContents->True,
                    Selectable->False]}], "]"}], "}"}], ",", "True", ",", 
                 RowBox[{"{", "}"}]}], "]"}], ",", 
               RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
                RowBox[{"plot", " ", "the", " ", "three", " ", "mass"}], "-", 
                
                RowBox[{"radius", " ", "curves", " ", 
                 RowBox[{"for", ":", " ", 
                  RowBox[{"pure", "-", "Fe", "-", "metals"}]}]}]}], ",", " ", 
               
               RowBox[{"pure", "-", "Silicates"}], ",", " ", 
               RowBox[{
                RowBox[{"and", " ", "pure"}], "-", "high", "-", "pressure", 
                "-", "ices"}]}], " ", "*)"}], "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"10.", "^", 
                    RowBox[{"(", 
                    RowBox[{"0.13666292574887867`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.27183702181443314`", " ", "x"}], "-", 
                    RowBox[{"0.007134024332627119`", " ", 
                    SuperscriptBox["x", "2"]}], "-", 
                    RowBox[{"0.0021407416433092126`", " ", 
                    SuperscriptBox["x", "3"]}], "-", 
                    RowBox[{"0.0022608931475693915`", " ", 
                    SuperscriptBox["x", "4"]}], "-", 
                    RowBox[{"0.0002516518649610248`", " ", 
                    SuperscriptBox["x", "5"]}], "+", 
                    RowBox[{"0.00011968169122553435`", " ", 
                    SuperscriptBox["x", "6"]}], "+", 
                    RowBox[{"0.000011663496987412905`", " ", 
                    SuperscriptBox["x", "7"]}], "-", 
                    RowBox[{"3.536434693875541`*^-6", " ", 
                    SuperscriptBox["x", "8"]}], "-", 
                    RowBox[{"1.6848230313524644`*^-7", " ", 
                    SuperscriptBox["x", "9"]}], "+", 
                    RowBox[{"4.4044933682275176`*^-8", " ", 
                    SuperscriptBox["x", "10"]}]}], ")"}]}], "/.", 
                   RowBox[{"x", "\[Rule]", 
                    RowBox[{"Log10", "[", "m", "]"}]}]}], ")"}], ",", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"10.", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    "0.020013868549526272`", "\[VeryThinSpace]", "+", 
                    RowBox[{"0.29811170324848235`", " ", "x"}], "-", 
                    RowBox[{"0.02012734730157388`", " ", 
                    SuperscriptBox["x", "2"]}], "-", 
                    RowBox[{"0.0052918215948260265`", " ", 
                    SuperscriptBox["x", "3"]}], "-", 
                    RowBox[{"0.0003311775031243655`", " ", 
                    SuperscriptBox["x", "4"]}], "+", 
                    RowBox[{"0.00004856681718363753`", " ", 
                    SuperscriptBox["x", "5"]}], "-", 
                    RowBox[{"0.00001245509278944841`", " ", 
                    SuperscriptBox["x", "6"]}], "-", 
                    RowBox[{"1.3074832660503483`*^-6", " ", 
                    SuperscriptBox["x", "7"]}], "+", 
                    RowBox[{"8.211419885278952`*^-7", " ", 
                    SuperscriptBox["x", "8"]}], "+", 
                    RowBox[{"3.47368749025812`*^-8", " ", 
                    SuperscriptBox["x", "9"]}], "-", 
                    RowBox[{"1.1251826465596989`*^-8", " ", 
                    SuperscriptBox["x", "10"]}]}], ")"}]}], "/.", 
                   RowBox[{"x", "\[Rule]", 
                    RowBox[{"Log10", "[", "m", "]"}]}]}], ")"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"10.", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "0.11408792224566819`"}], "+", 
                    RowBox[{"0.27851883673695`", " ", "x"}], "-", 
                    RowBox[{"0.01997874049680844`", " ", 
                    SuperscriptBox["x", "2"]}], "-", 
                    RowBox[{"0.002490304269884624`", " ", 
                    SuperscriptBox["x", "3"]}], "+", 
                    RowBox[{"0.00007525048500183394`", " ", 
                    SuperscriptBox["x", "4"]}], "-", 
                    RowBox[{"0.00007162041164677924`", " ", 
                    SuperscriptBox["x", "5"]}], "-", 
                    RowBox[{"0.00003393158521958243`", " ", 
                    SuperscriptBox["x", "6"]}], "+", 
                    RowBox[{"8.589995554646332`*^-7", " ", 
                    SuperscriptBox["x", "7"]}], "+", 
                    RowBox[{"1.132375249329131`*^-6", " ", 
                    SuperscriptBox["x", "8"]}], "+", 
                    RowBox[{"2.2299345660512832`*^-8", " ", 
                    SuperscriptBox["x", "9"]}], "-", 
                    RowBox[{"1.0475165171649914`*^-8", " ", 
                    SuperscriptBox["x", "10"]}]}], ")"}]}], "/.", 
                   RowBox[{"x", "\[Rule]", 
                    RowBox[{"Log10", "[", "m", "]"}]}]}], ")"}]}], 
                "\[IndentingNewLine]", "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"m", ",", "mmin", ",", "mmax"}], "}"}], ",", 
               InterpretationBox[
                DynamicModuleBox[{Typeset`open = False}, 
                 TemplateBox[{"Expression", "SequenceIcon", 
                   GridBox[{{
                    RowBox[{
                    TagBox["\"Head: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["Sequence", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Length: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["1512", "IconizedItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   Dynamic[Typeset`open]},
                  "IconizedObject"]],
                Sequence[
                PlotRange -> {$CellContext`rmin, $CellContext`rmax}, 
                 ScalingFunctions -> {
                   If[$CellContext`xscale, "Log", None], 
                   If[$CellContext`yscale, "Log", None]}, PlotStyle -> {
                   Directive[
                    Thickness[0.007], 
                    Part[
                    ColorData[97, "ColorList"], 1]], 
                   Directive[
                    Thickness[0.007], 
                    Part[
                    ColorData[97, "ColorList"], 2]], 
                   Directive[
                    Thickness[0.007], 
                    Part[
                    ColorData[97, "ColorList"], 4]]}],
                SelectWithContents->True,
                Selectable->False]}], "]"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
                RowBox[{
                "option", " ", "to", " ", "plot", " ", "the", " ", 
                 "isentropic", " ", "mass"}], "-", 
                RowBox[{
                "radius", " ", "curves", " ", "for", " ", "the", " ", 
                 "pure"}], "-", 
                RowBox[{
                "Hydrogen", " ", "composition", " ", "at", " ", "different", 
                 " ", "specific", " ", "entropy", " ", "values", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"S", "=", "0.3"}], ",", "0.4", ",", "0.5", ",", 
                   "0.6", ",", "0.7", ",", "0.8", ",", "0.9", ",", "1.0"}], 
                  ")"}], 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"eV", "/", "1000"}], 
                   RowBox[{"K", "/", "atom"}]}], ")"}]}]}], ",", " ", 
               RowBox[{
               "according", " ", "to", " ", "Becker", " ", "et", " ", 
                RowBox[{"al", ".", " ", "ApJS"}], " ", "215"}], ",", 
               RowBox[{"21", " ", 
                RowBox[{
                 RowBox[{"(", "2014", ")"}], "."}]}]}], " ", "*)"}], 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{"env3", ",", 
               RowBox[{"ListPlot", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "massradiusS03Becker", ",", "massradiusS04Becker", ",", 
                   "massradiusS05Becker", ",", "massradiusS06Becker", ",", 
                   "massradiusS07Becker", ",", "massradiusS08Becker", ",", 
                   "massradiusS09Becker", ",", "massradiusS10Becker"}], "}"}],
                  ",", "\[IndentingNewLine]", 
                 RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"PlotStyle", "\[Rule]", 
                  RowBox[{"Directive", "[", 
                   RowBox[{"Thickness", "[", "0.003", "]"}], "]"}]}], ",", 
                 RowBox[{"PlotRange", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"rmin", ",", "rmax"}], "}"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"ScalingFunctions", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xscale", ",", "\"\<Log\>\"", ",", "None"}], 
                    "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"yscale", ",", "\"\<Log\>\"", ",", "None"}], 
                    "]"}]}], "}"}]}]}], 
                RowBox[{"(*", 
                 RowBox[{",", 
                  RowBox[{"PlotLabels", "\[Rule]", 
                   RowBox[{"Placed", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.3", ",", "0.4", ",", "0.5", ",", "0.6", ",", "0.7", 
                    ",", "0.8", ",", "0.9", ",", "1.0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Scaled", "[", "0.2", "]"}], ",", "After"}], 
                    "}"}]}], "]"}]}]}], "*)"}], "]"}], ",", 
               RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
                RowBox[{
                "option", " ", "to", " ", "plot", " ", "the", " ", "central", 
                 " ", "density", " ", "contours", " ", "for", " ", "the", " ",
                  "isentropic", " ", "mass"}], "-", 
                RowBox[{
                "radius", " ", "curves", " ", "for", " ", "the", " ", 
                 "pure"}], "-", 
                RowBox[{"Hydrogen", " ", "composition"}]}], ",", " ", 
               RowBox[{
               "according", " ", "to", " ", "Becker", " ", "et", " ", 
                RowBox[{"al", ".", " ", "ApJS"}], " ", "215"}], ",", 
               RowBox[{"21", " ", 
                RowBox[{
                 RowBox[{"(", "2014", ")"}], "."}]}]}], " ", "*)"}], 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{"env4", ",", 
               RowBox[{"ListPlot", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Transpose", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "massradiusS03Becker", ",", "massradiusS04Becker", ",", 
                    "massradiusS05Becker", ",", "massradiusS06Becker", ",", 
                    "massradiusS07Becker", ",", "massradiusS08Becker", ",", 
                    "massradiusS09Becker", ",", "massradiusS10Becker"}], 
                    "}"}], "]"}], "\[LeftDoubleBracket]", 
                  RowBox[{"1", ";;", "41", ";;", "5"}], 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"Joined", "\[Rule]", "True"}], ",", 
                 RowBox[{"PlotStyle", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.003", "]"}], ",", "Black"}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.001", "]"}], ",", "Dashed", 
                    ",", "Black"}], "]"}]}], "}"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"PlotRange", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"rmin", ",", "rmax"}], "}"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"ScalingFunctions", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xscale", ",", "\"\<Log\>\"", ",", "None"}], 
                    "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"yscale", ",", "\"\<Log\>\"", ",", "None"}], 
                    "]"}]}], "}"}]}]}], 
                RowBox[{"(*", 
                 RowBox[{",", 
                  RowBox[{"PlotLabels", "\[Rule]", 
                   RowBox[{"Placed", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(\[Rho]\), \(0\)]\)=0.1g/cc\>\"",
                     ",", "\"\<\>\"", ",", "\"\<0.32\>\"", ",", "\"\<\>\"", 
                    ",", "\"\<\!\(\*SubscriptBox[\(\[Rho]\), \(0\)]\)=1g/cc\>\
\"", ",", "\"\<\>\"", ",", "\"\<3.2\>\"", ",", "\"\<\>\"", ",", 
                    "\"\<\!\(\*SubscriptBox[\(\[Rho]\), \
\(0\)]\)=10g/cc\>\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Scaled", "[", "0.05", "]"}], ",", "Below"}], 
                    "}"}]}], "]"}]}]}], "*)"}], "]"}], ",", 
               RowBox[{"{", "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
               "Legend", " ", "for", " ", "the", " ", "Temperature", " ", 
                "Coloring", " ", "of", " ", "Planets", " ", "based", " ", 
                "on", " ", 
                SubscriptBox["T", 
                 RowBox[{"eq", " "}]], "with", " ", "the", " ", "colorscheme",
                 " ", "of", " ", "\"\<Rainbow\>\""}], ":"}], "*)"}], 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Inset", "[", 
                 RowBox[{
                  RowBox[{"BarLegend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"\"\<Rainbow\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
                    "\[IndentingNewLine]", 
                    InterpretationBox[
                    DynamicModuleBox[{Typeset`open = False}, 
                    TemplateBox[{"Expression", "SequenceIcon", 
                    GridBox[{{
                    RowBox[{
                    TagBox["\"Head: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["Sequence", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Length: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["8", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["5592", "IconizedItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    Dynamic[Typeset`open]},
                    "IconizedObject"]],
                    Sequence[
                    "Ticks" -> {{Log10[300./300.]/Log10[2000./300.], "300"}, {
                    Log10[400./300.]/Log10[2000./300.], "400"}, {
                    Log10[500./300.]/Log10[2000./300.], "500"}, {
                    Log10[700./300.]/Log10[2000./300.], "700"}, {
                    Log10[1000./300.]/Log10[2000./300.], "1000"}, {
                    Log10[1400./300.]/Log10[2000./300.], "1400"}, {
                    Log10[2000./300.]/Log10[2000./300.], "2000"}}, "TickSide" -> 
                    Right, "TickLengths" -> 2, "TicksStyle" -> Directive[Gray, 
                    Thickness[0.1]], Frame -> False, LabelStyle -> 
                    Directive[Gray, FontSize -> 12, Italic], LegendMarkerSize -> 
                    90, LegendLabel -> 
                    "      \!\(\*SubscriptBox[\(T\), \(eq\)]\)(K)"],
                    SelectWithContents->True,
                    Selectable->False]}], "]"}], ",", 
                  RowBox[{"Scaled", "[", 
                   RowBox[{"{", 
                    RowBox[{"0.", ",", "0.47"}], "}"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Legend", " ", "for", " ", "Three", " ", "Pure"}], 
                   "-", 
                   RowBox[{"Componennt", " ", "Mass"}], "-", 
                   RowBox[{"Radius", " ", 
                    RowBox[{"Curves", ":", " ", "Ices"}]}]}], ",", " ", 
                  "Silicates", ",", " ", 
                  RowBox[{
                   RowBox[{"and", " ", "Fe"}], "-", "metals"}]}], "*)"}], 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"Inset", "[", 
                 RowBox[{
                  RowBox[{"LineLegend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.007", "]"}], ",", 
                    RowBox[{
                    RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.007", "]"}], ",", 
                    RowBox[{
                    RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.007", "]"}], ",", 
                    RowBox[{
                    RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
                    "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<Ices\>\"", ",", "\"\<Silicates\>\"", ",", 
                    "\"\<Fe-metals\>\""}], "}"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"16", ",", "Gray"}], "}"}]}]}], "]"}], ",", 
                  RowBox[{"Scaled", "[", 
                   RowBox[{"{", 
                    RowBox[{"0.", ",", "0.77"}], "}"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}], ",", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "Dynamic", " ", "Annotation", " ", "within", " ", "the", " ", 
                  RowBox[{"Figure", ":"}]}], " ", "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{"Mass", " ", "and", " ", "Radius", " ", 
                  RowBox[{"Errorbars", ":"}]}], "*)"}], "\[IndentingNewLine]",
                 "\[IndentingNewLine]", 
                RowBox[{"Dynamic", "[", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{
                    "\"\<\!\(\*SubscriptBox[\(\[Sigma]M\), \
\(p\)]\)/\!\(\*SubscriptBox[\(M\), \(p\)]\)\[LessEqual]\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"NumberForm", "[", "\[Sigma]Mpercent", "]"}], ",",
                     "TraditionalForm"}], "]"}], "<>", 
                    "\"\<%;\!\(\*SubscriptBox[\(\[Sigma]R\), \
\(p\)]\)/\!\(\*SubscriptBox[\(R\), \(p\)]\)\[LessEqual]\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"NumberForm", "[", "\[Sigma]Rpercent", "]"}], ",",
                     "TraditionalForm"}], "]"}], "<>", "\"\<%\>\""}], ",", 
                    "Gray", ",", 
                    RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
                   RowBox[{"Scaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", "0.96"}], "}"}], "]"}]}], "]"}], 
                 "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "Planet", " ", "Equilibrium", " ", "Temperature", " ", 
                  RowBox[{"Range", ":"}]}], "*)"}], "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"Dynamic", "[", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"First", "[", "Teq", "]"}], "]"}], ",", 
                    "TraditionalForm"}], "]"}], "<>", 
                    "\"\<\[LessEqual]\!\(\*SubscriptBox[\(T\), \(eq\)]\)(K)\
\[LessEqual]\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"Last", "[", "Teq", "]"}], "]"}], ",", 
                    "TraditionalForm"}], "]"}]}], ",", "Gray", ",", 
                    RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
                   RowBox[{"Scaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.99", ",", "0.05"}], "}"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], ",", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{"Host", " ", "Stellar", " ", "Radius", " ", 
                  RowBox[{"Range", ":"}]}], "*)"}], "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"Dynamic", "[", 
                 RowBox[{"Text", "[", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"First", "[", "rstar", "]"}], "]"}], ",", 
                    "TraditionalForm"}], "]"}], "<>", 
                    
                    "\"\<\[LessEqual] \!\(\*SubscriptBox[\(R\), \
\(\[Star]\)]\)/\!\(\*SubscriptBox[\(R\), \(\[Sun]\)]\)\[LessEqual]\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"Last", "[", "rstar", "]"}], "]"}], ",", 
                    "TraditionalForm"}], "]"}]}], ",", "Gray", ",", 
                    RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
                   RowBox[{"Scaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.98", ",", "0.015"}], "}"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], ",", 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{"Eccentricity", " ", 
                  RowBox[{"Range", ":"}]}], "*)"}], "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{"Dynamic", "[", 
                   RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"First", "[", "eccentricity", "]"}], "]"}], ",", 
                    "TraditionalForm"}], "]"}], "<>", 
                    "\"\<\[LessEqual] e\[LessEqual]\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"Last", "[", "eccentricity", "]"}], "]"}], ",", 
                    "TraditionalForm"}], "]"}]}], ",", "Gray", ",", 
                    RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], ",", 
                    RowBox[{"Scaled", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.98", ",", "0.1"}], "}"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], ","}], 
                 "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{
                  "Solar", " ", "System", " ", "Planets", " ", "Represented", 
                   " ", "as", " ", "Gray", " ", "Filled"}], "-", 
                  RowBox[{"Circles", ":"}]}], " ", "*)"}], 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"PointSize", "[", "0.033", "]"}], ",", "Gray", ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Point", "@", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"yscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "}"}]}], "&"}], "/@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0.1074", ",", "0.53", ",", "\"\<M\>\""}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"0.815", ",", "0.95", ",", "\"\<V\>\""}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"1.", ",", "1.", ",", "\"\<E\>\""}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"14.536", ",", "4.0", ",", "\"\<U\>\""}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"17.15", ",", "3.883", ",", "\"\<N\>\""}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"95.159", ",", "9.14", ",", "\"\<S\>\""}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"317.8", ",", "11.2", ",", "\"\<J\>\""}], "}"}]}],
                   "}"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "Labelling", " ", "of", " ", "Solar", " ", "System", " ", 
                  "Planets", " ", "with", " ", "their", " ", "First", " ", 
                  RowBox[{"Letter", ":"}]}], " ", "*)"}], 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Text", "[", 
                   RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}], ",", "Bold", ",", "Gray", ",", 
                    
                    RowBox[{"FontSize", "\[Rule]", "12"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"yscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "2"}]}], "}"}]}], "]"}], "&"}], "/@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0.1074", ",", "0.53", ",", "\"\<M\>\""}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"0.815", ",", "0.95", ",", "\"\<V\>\""}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"1.", ",", "1.", ",", "\"\<E\>\""}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"14.536", ",", "4.0", ",", "\"\<U\>\""}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"17.15", ",", "3.883", ",", "\"\<N\>\""}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"95.159", ",", "9.14", ",", "\"\<S\>\""}], "}"}], 
                   ",", 
                   RowBox[{"{", 
                    RowBox[{"317.8", ",", "11.2", ",", "\"\<J\>\""}], "}"}]}],
                   "}"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "Interative", " ", "Rendering", " ", "of", " ", "Background",
                   " ", "Exoplanet", " ", "Data", " ", 
                  RowBox[{"(", 
                   RowBox[{"from", " ", "TepCat"}], ")"}], " ", "with", " ", 
                  "Tooltip", " ", "and", " ", "Mouseover", " ", 
                  RowBox[{"Functions", ":"}]}], " ", "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{
                  "Mouseover", " ", "shows", " ", "the", " ", "name", " ", 
                   "of", " ", "the", " ", "planet"}], ",", " ", 
                  RowBox[{
                  "as", " ", "well", " ", "as", " ", "its", " ", "mass", " ", 
                   "and", " ", "radius", " ", "errorbars"}], ",", " ", 
                  RowBox[{
                  "when", " ", "Mouse", " ", "cursor", " ", "hovers", " ", 
                   "over", " ", "it"}]}], "*)"}], "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"PointSize", "[", "0.025", "]"}], ",", 
                RowBox[{"Dynamic", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "39", 
                    "\[RightDoubleBracket]"}], "/", "300"}], "]"}], ")"}], 
                    "/", 
                    RowBox[{"Log", "[", 
                    RowBox[{"2000", "/", "300"}], "]"}]}], "]"}], ",", 
                    RowBox[{"Mouseover", "[", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    RowBox[{"Point", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}], "*", "317.8"}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"yscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}], "*", "11.2"}], ")"}]}]}], 
                    "}"}]}], ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "29", 
                    "\[RightDoubleBracket]"}]}], ")"}], "*", "317.8"}], 
                    ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"yscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}], "*", "11.2"}], ")"}]}]}], 
                    "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "28", 
                    "\[RightDoubleBracket]"}]}], ")"}], "*", "317.8"}], 
                    ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"yscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}], "*", "11.2"}], ")"}]}]}], 
                    "}"}]}], "}"}]}], ",", 
                    RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}], "*", "317.8"}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"yscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "32", 
                    "\[RightDoubleBracket]"}]}], ")"}], "*", "11.2"}], 
                    ")"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}], "*", "317.8"}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"yscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "31", 
                    "\[RightDoubleBracket]"}]}], ")"}], "*", "11.2"}], 
                    ")"}]}]}], "}"}]}], "}"}]}]}], "}"}]}], "]"}]}], "}"}], 
                   "&"}], "/@", 
                  RowBox[{"Select", "[", 
                   RowBox[{
                    RowBox[{"data0", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"mmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}], "*", "317.8"}], ")"}], 
                    "\[LessEqual]", "mmax"}], "&&", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "28", 
                    "\[RightDoubleBracket]"}], "]"}], "&&", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "29", 
                    "\[RightDoubleBracket]"}], "]"}], "&&", 
                    RowBox[{"rmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}], "*", "11.2"}], ")"}], 
                    "\[LessEqual]", "rmax"}], "&&", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "31", 
                    "\[RightDoubleBracket]"}], "]"}], "&&", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "32", 
                    "\[RightDoubleBracket]"}], "]"}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "31", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}]}], "\[LessEqual]", 
                    RowBox[{"\[Sigma]Rpercent", "/", "100."}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "32", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}]}], "\[LessEqual]", 
                    RowBox[{"\[Sigma]Rpercent", "/", "100."}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "28", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}]}], "\[LessEqual]", 
                    RowBox[{"\[Sigma]Mpercent", "/", "100."}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "29", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}]}], "\[LessEqual]", 
                    RowBox[{"\[Sigma]Mpercent", "/", "100."}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}], "^", "4"}], "/", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}]}], ">", "0.01"}], "&&", 
                    RowBox[{
                    RowBox[{
                    "Porb", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "20", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "Porb", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "Teq", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "39", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "Teq", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "Teff", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "Teff", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "eccentricity", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "21", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "eccentricity", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "mstar", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "mstar", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "rstar", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "rstar", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "aorb", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "24", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "aorb", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"First", "[", "FeHdex", "]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{"Last", "[", "FeHdex", "]"}]}]}], "&"}]}], 
                   "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "Interative", " ", "Rendering", " ", "of", " ", "Input", " ",
                   "Exoplanet", " ", "Data", " ", "from", " ", "the", " ", 
                  RowBox[{"InputField", ":"}]}], " ", "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{"Draw", " ", "the", " ", "new", " ", "exoplanet", 
                  RowBox[{"(", "s", ")"}], " ", "from", " ", "the", " ", 
                  "InputField", " ", "in", " ", 
                  RowBox[{"Bold", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "Draw", " ", "a", " ", "Black", " ", "Rim", " ", "around", 
                  " ", "the", " ", "new", " ", "exoplanet", 
                  RowBox[{"(", "s", ")"}], " ", "to", " ", 
                  RowBox[{"emphasize", ":"}]}], " ", "*)"}], 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"PointSize", "[", "0.052", "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Thickness", "[", "0.015", "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Dynamic", "@", 
                 RowBox[{"If", "[", 
                  RowBox[{"add1", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Black", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Point", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"yscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}]}], "}"}]}], ",", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"yscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"yscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}]}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"yscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"yscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], "}"}]}], 
                    "}"}]}]}], "}"}]}], "}"}], "&"}], "/@", 
                    RowBox[{"Select", "[", 
                    RowBox[{"np2", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"filter1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"mmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "mmax"}], "&&", 
                    RowBox[{"rmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "rmax"}], "&&", 
                    RowBox[{
                    RowBox[{
                    "Teq", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    RowBox[{
                    "Teq", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "&"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"mmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "mmax"}], "&&", 
                    RowBox[{"rmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "rmax"}]}], "&"}]}], "]"}]}], "]"}]}], ",", 
                   RowBox[{"{", "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                 "Draw", " ", "the", " ", "Colored", " ", "Interior", " ", 
                  "of", " ", "the", " ", "new", " ", "exoplanet", 
                  RowBox[{"(", "s", ")"}], " ", "according", " ", "to", " ", 
                  RowBox[{"Teq", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"PointSize", "[", "0.045", "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Thickness", "[", "0.008", "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Dynamic", "@", 
                 RowBox[{"If", "[", 
                  RowBox[{"add1", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Log", "[", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}], "/", "300"}], "]"}], ")"}], 
                    "/", 
                    RowBox[{"Log", "[", 
                    RowBox[{"2000", "/", "300"}], "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Tooltip", "[", 
                    RowBox[{
                    RowBox[{"Point", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"yscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}]}], "}"}]}], ",", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"TooltipStyle", "\[Rule]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{"Bold", ",", "20"}], "]"}]}]}], "]"}], ",", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"try", " ", "annotation", " ", "here"}], ",", " ", 
                    RowBox[{"but", " ", 
                    RowBox[{"unsuccessful", "!"}]}]}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"yscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"yscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}]}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"Line", "@", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"yscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "7", 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"yscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "6", 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], "}"}]}], 
                    "}"}]}]}], "}"}]}], "}"}], "&"}], "/@", 
                    RowBox[{"Select", "[", 
                    RowBox[{"np2", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"filter1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"mmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{"#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "mmax"}], "&&", 
                    RowBox[{"rmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "rmax"}], "&&", 
                    RowBox[{
                    RowBox[{
                    "Teq", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    RowBox[{
                    "Teq", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "&"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"mmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "mmax"}], "&&", 
                    RowBox[{"rmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "rmax"}]}], "&"}]}], "]"}]}], "]"}]}], ",", 
                   RowBox[{"{", "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", 
                 RowBox[{
                  RowBox[{
                  "Labels", " ", "the", " ", "Name", " ", "of", " ", "the", 
                   " ", "new", " ", "exoplanet", 
                   RowBox[{"(", "s", ")"}]}], ":"}], "*)"}], 
                "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"Dynamic", "@", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"add1", "&&", "add2"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Text", "[", 
                    RowBox[{
                    RowBox[{"Framed", "[", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Background", "\[Rule]", "White"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"Black", ",", "Bold", ",", "15"}], "}"}]}], ",", 
                    RowBox[{"FrameMargins", "\[Rule]", "0"}]}], "]"}], ",", 
                    RowBox[{"Offset", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"50", ",", "20"}], "}"}], "*", "add3"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"xscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{"yscale", ",", "Log", ",", "Identity"}], "]"}], 
                    "@", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}]}]}], "}"}]}], "]"}]}], "]"}], 
                    "}"}], "&"}], "/@", 
                    RowBox[{"Select", "[", 
                    RowBox[{"np2", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"filter1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"mmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "mmax"}], "&&", 
                    RowBox[{"rmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "rmax"}], "&&", 
                    RowBox[{
                    RowBox[{
                    "Teq", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    RowBox[{
                    "Teq", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "&"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"mmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "mmax"}], "&&", 
                    RowBox[{"rmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "rmax"}]}], "&"}]}], "]"}]}], "]"}]}], ",", 
                   RowBox[{"{", "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"add", " ", "in", " ", "some", " ", "commentary", " ", 
                 RowBox[{"marks", ":"}]}], "*)"}], "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"Black", ",", "Dotted", ",", 
                 RowBox[{"Line", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"7.4", ",", "2.36"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"10.4", ",", "4.14"}], "}"}]}], "}"}], "]"}], ",",
                  "\[IndentingNewLine]", "Black", ",", "Dotted", ",", 
                 RowBox[{"Line", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"10.5", ",", "0.1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"10.5", ",", "5."}], "}"}]}], "}"}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"HatchFilling", "[", 
                  RowBox[{"2", 
                   RowBox[{"\[Pi]", "/", "4"}]}], "]"}], ",", 
                 RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Triangle", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"4.", ",", "2."}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"10.5", ",", "2.4"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"8.5", ",", "3."}], "}"}]}], "}"}], "]"}], ",", 
                 "\[IndentingNewLine]", "\[IndentingNewLine]", 
                 RowBox[{"HatchFilling", "[", "]"}], ",", 
                 RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Rotate", "[", 
                  RowBox[{
                   RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"14.", ",", "4."}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"4", ",", 
                    RowBox[{"1", "/", "3"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], "Degree"}]}], "]"}], ","}], "*)"}], 
               "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], 
              "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"PlotRangePadding", "\[Rule]", "None"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"450", ",", "450"}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"ImagePadding", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   StyleBox["left", "TI"], ",", 
                   StyleBox["right", "TI"]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   StyleBox["bottom", "TI"], ",", 
                   StyleBox["top", "TI"]}], "}"}]}], "}"}]}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"ImagePadding", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"50", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"50", ",", "0"}], "}"}]}], "}"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"FrameLabel", "->", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   StyleBox["left", "TI"], ",", 
                   StyleBox["right", "TI"]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   StyleBox["bottom", "TI"], ",", 
                   StyleBox["top", "TI"]}], "}"}]}], "}"}]}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                 "\"\<Planet Radius (\!\(\*SubscriptBox[\(R\), \
\(p\)]\)/\!\(\*SubscriptBox[\(R\), \(\[Earth]\)]\))\>\"", ",", "\"\<\>\""}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<Planet Mass (\!\(\*SubscriptBox[\(M\), \
\(p\)]\)/\!\(\*SubscriptBox[\(M\), \(\[Earth]\)]\))\>\"", ",", "\"\<\>\""}], 
                 "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"FrameTicks", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Automatic", ",", "None"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ","}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"FrameStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{"14", ",", "Gray", ",", 
                RowBox[{"Thickness", "[", "0.007", "]"}]}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "\[IndentingNewLine]",
             "]"}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
            "plot", " ", "the", " ", "radius", " ", "histogram", " ", 
             "projected", " ", "onto", " ", "the", " ", "y"}], "-", "axis"}], 
           "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"plt2", "=", 
           RowBox[{"Dynamic", "@", 
            RowBox[{"Histogram", "[", 
             RowBox[{
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}], "*", "11.2"}], ")"}], "&"}], "/@",
                  "\[IndentingNewLine]", 
                 RowBox[{"Select", "[", 
                  RowBox[{
                   RowBox[{"data0", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"mmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}], "*", "317.8"}], ")"}], 
                    "\[LessEqual]", "mmax"}], "&&", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "28", 
                    "\[RightDoubleBracket]"}], "]"}], "&&", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "29", 
                    "\[RightDoubleBracket]"}], "]"}], "&&", 
                    RowBox[{"rmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}], "*", "11.2"}], ")"}], 
                    "\[LessEqual]", "rmax"}], "&&", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "31", 
                    "\[RightDoubleBracket]"}], "]"}], "&&", 
                    RowBox[{"NumberQ", "[", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "32", 
                    "\[RightDoubleBracket]"}], "]"}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "31", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}]}], "\[LessEqual]", 
                    RowBox[{"\[Sigma]Rpercent", "/", "100."}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "32", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}]}], "\[LessEqual]", 
                    RowBox[{"\[Sigma]Rpercent", "/", "100."}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "28", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}]}], "\[LessEqual]", 
                    RowBox[{"\[Sigma]Mpercent", "/", "100."}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "29", 
                    "\[RightDoubleBracket]"}], "/", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}]}], "\[LessEqual]", 
                    RowBox[{"\[Sigma]Mpercent", "/", "100."}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "30", 
                    "\[RightDoubleBracket]"}], "^", "4"}], "/", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "27", 
                    "\[RightDoubleBracket]"}]}], ">", "0.01"}], "&&", 
                    RowBox[{
                    RowBox[{
                    "Porb", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "20", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "Porb", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "Teq", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "39", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "Teq", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "Teff", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "Teff", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "eccentricity", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "21", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "eccentricity", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "mstar", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "mstar", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "rstar", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "11", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "rstar", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{
                    "aorb", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "24", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{
                    "aorb", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "&&", 
                    RowBox[{
                    RowBox[{"First", "[", "FeHdex", "]"}], "\[LessEqual]", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{"Last", "[", "FeHdex", "]"}]}]}], "&"}]}], 
                  "]"}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                
                RowBox[{"If", "[", 
                 RowBox[{"add1", ",", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], "&"}], "/@", 
                   RowBox[{"Select", "[", 
                    RowBox[{"np2", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{"filter1", ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"mmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "mmax"}], "&&", 
                    RowBox[{"rmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "rmax"}], "&&", 
                    RowBox[{
                    RowBox[{
                    "Teq", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "8", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    RowBox[{
                    "Teq", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "&"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"mmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "mmax"}], "&&", 
                    RowBox[{"rmin", "\[LessEqual]", 
                    RowBox[{"(", 
                    RowBox[{
                    "#", "\[LeftDoubleBracket]", "5", 
                    "\[RightDoubleBracket]"}], ")"}], "\[LessEqual]", 
                    "rmax"}]}], "&"}]}], "]"}]}], "]"}]}], ",", 
                  RowBox[{"{", "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}],
               ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{
                "histogram", " ", "changes", " ", "scale", " ", "with", " ", 
                 "respect", " ", "the", " ", "plot"}], ",", " ", 
                RowBox[{"whether", " ", "linear", " ", "or", " ", "log"}]}], 
               "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{"yscale", ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"\"\<Log\>\"", ",", 
                  RowBox[{"{", 
                   RowBox[{"10", "^", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"10", ",", "rmin"}], "]"}], ",", 
                    RowBox[{"Log", "[", 
                    RowBox[{"10", ",", "rmax"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Log", "[", 
                    RowBox[{"10", ",", "rmax"}], "]"}], "-", 
                    RowBox[{"Log", "[", 
                    RowBox[{"10", ",", "rmin"}], "]"}]}], ")"}], "/", 
                    "histradiusbin"}]}], "]"}]}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"rmin", ",", "rmax", ",", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"rmax", "-", "rmin"}], ")"}], "/", 
                   "histradiusbin"}]}], "}"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"log", " ", "count", " ", "in", " ", 
                 RowBox[{"radius", "?", " ", "\"\<LogCount\>\""}]}], ","}], 
               "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{"logcountinradius", ",", "\"\<LogCount\>\"", ",", 
                RowBox[{"{", "}"}]}], "]"}], ",", 
              InterpretationBox[
               DynamicModuleBox[{Typeset`open = False}, 
                TemplateBox[{"Expression", "SequenceIcon", 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Head: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["Sequence", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Length: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["10", "IconizedItem"]}]}, {
                    RowBox[{
                    TagBox["\"Byte count: \"", "IconizedLabel"], 
                    "\[InvisibleSpace]", 
                    TagBox["1672", "IconizedItem"]}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                   DefaultBaseStyle -> "Column", 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  Dynamic[Typeset`open]},
                 "IconizedObject"]],
               Sequence[
               AspectRatio -> 5, BarOrigin -> Left, ChartLayout -> "Stacked", 
                PlotRangePadding -> None, ImageSize -> {Automatic, 450}, 
                ImagePadding -> {{0, 50}, {50, 0}}, Frame -> True, FrameTicks -> 
                All, FrameLabel -> {{
                  "", "Histogram of (\!\(\*SubscriptBox[\(R\), \
\(p\)]\)/\!\(\*SubscriptBox[\(R\), \(\[Earth]\)]\))"}, {
                   If[$CellContext`logcountinradius, "LogCount", "Count"], 
                   ""}}, FrameStyle -> Directive[14, Gray, 
                  Thickness[0.027]]],
               SelectWithContents->True,
               Selectable->False]}], "]"}]}]}]}], "}"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Alignment", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Right", ",", "Left"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Bottom", ",", "Top"}], "}"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Spacings", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Localize", " ", "variables", " ", "and", " ", "functions"}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"data0", ":", " ", 
     RowBox[{
      RowBox[{"the", " ", "un"}], "-", 
      RowBox[{
      "modified", " ", "data", " ", "downloaded", " ", "from", " ", 
       "TepCat"}]}], ":"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"data0", ",", "None"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"plt", ":", " ", 
     RowBox[{"the", " ", "combined", " ", "plot"}], ":"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"plt", ",", "None"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"mass", "-", 
     RowBox[{"radius", " ", 
      RowBox[{"plot", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"plt1", ",", "None"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"plt2", ":", " ", 
     RowBox[{"histogram", " ", "of", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["R", "p"], "/", 
        SubscriptBox["R", "\[Earth]"]}], ")"}]}], ":"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"plt2", ",", "None"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"plt3", ":", " ", 
     RowBox[{"histogram", " ", "of", " ", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["M", "p"], "/", 
        SubscriptBox["M", "\[Earth]"]}], ")"}]}], ":"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"plt3", ",", "None"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"plt4", ":", " ", 
     RowBox[{"histogram", " ", "of", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["R", "p"], "/", 
          SubscriptBox["R", "\[Earth]"]}], ")"}], "/", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["M", "p"], "/", 
           SubscriptBox["M", "\[Earth]"]}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"1", "/", "4"}], ")"}]}]}], ")"}]}], ":"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"plt4", ",", "None"}], "}"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Control", " ", "Pane", " ", 
     RowBox[{"Region", ":", " ", 
      RowBox[{
      "Specift", " ", "Manipulating", " ", "variables", " ", "and", " ", 
       "their", " ", "range"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Host", "-", 
     RowBox[{"stellar", " ", "Effective", " ", 
      RowBox[{"Temperature", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"For", " ", "example"}], ",", " ", 
     RowBox[{
      SubscriptBox["T", 
       RowBox[{"\[Star]", "eff"}]], 
      RowBox[{"(", "K", ")"}], " ", "for", " ", "our", " ", "own", " ", "sun",
       " ", "is", " ", "about", " ", "5776", " ", "Kelvin"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Teff", ",", 
       RowBox[{"{", 
        RowBox[{"2500", ",", "10000"}], "}"}], ",", 
       "\"\<\!\(\*SubscriptBox[\(T\), \(\(\[Star]\)\(eff\)\)]\)(K)\>\""}], 
      "}"}], ",", "2500", ",", "10000", ",", 
     RowBox[{"ControlType", "\[Rule]", "IntervalSlider"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Push\>\""}], ",", 
     RowBox[{"Appearance", " ", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{"\"\<Labeled\>\"", ",", "\"\<Paired\>\""}], "}"}]}]}], "}"}], 
   ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Host", "-", 
      RowBox[{"stellar", " ", 
       RowBox[{"Metallicity", " ", "[", 
        RowBox[{"Fe", "/", "H"}], "]"}]}]}], ",", " ", 
     RowBox[{
     "which", " ", "can", " ", "be", " ", "measured", " ", "by", " ", 
      "spectroscopic", " ", "method"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"FeHdex", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "0.5"}], ",", "0.5"}], "}"}], ",", "\"\<[Fe/H]\>\""}], 
      "}"}], ",", 
     RowBox[{"-", "0.5"}], ",", "0.5", ",", 
     RowBox[{"ControlType", "\[Rule]", "IntervalSlider"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Push\>\""}], ",", 
     RowBox[{"Appearance", " ", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{"\"\<Labeled\>\"", ",", "\"\<Paired\>\""}], "}"}]}]}], "}"}], 
   ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Host", "-", 
     RowBox[{"stellar", " ", "mass", " ", "in", " ", "solar", " ", "unit"}]}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mstar", ",", 
       RowBox[{"{", 
        RowBox[{"0.", ",", "2."}], "}"}], ",", 
       "\"\<\!\(\*SubscriptBox[\(M\), \
\(\[Star]\)]\)(\!\(\*SubscriptBox[\(M\), \(\[Sun]\)]\))\>\""}], "}"}], ",", 
     "0.", ",", "2.", ",", 
     RowBox[{"ControlType", "\[Rule]", "IntervalSlider"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Push\>\""}], ",", 
     RowBox[{"Appearance", " ", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{"\"\<Labeled\>\"", ",", "\"\<Paired\>\""}], "}"}]}]}], "}"}], 
   ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Host", "-", 
     RowBox[{
     "stellar", " ", "radius", " ", "in", " ", "solar", " ", "unit"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rstar", ",", 
       RowBox[{"{", 
        RowBox[{"0.6", ",", "2."}], "}"}], ",", 
       "\"\<\!\(\*SubscriptBox[\(R\), \
\(\[Star]\)]\)(\!\(\*SubscriptBox[\(R\), \(\[Sun]\)]\))\>\""}], "}"}], ",", 
     "0.", ",", "2.", ",", 
     RowBox[{"ControlType", "\[Rule]", "IntervalSlider"}], ",", 
     RowBox[{"MinIntervalSize", "\[Rule]", "0.1"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Push\>\""}], ",", 
     RowBox[{"Appearance", " ", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{"\"\<Labeled\>\"", ",", "\"\<Paired\>\""}], "}"}]}]}], "}"}], 
   ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Orbital", " ", "Period", " ", "of", " ", "the", " ", "planet", " ", 
     RowBox[{"(", 
      RowBox[{"measured", " ", "in", " ", "Earth", " ", "days"}], ")"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Porb", ",", 
       RowBox[{"{", 
        RowBox[{"0.1", ",", "100."}], "}"}], ",", 
       "\"\<\!\(\*SubscriptBox[\(P\), \(orb\)]\)(days)\>\""}], "}"}], ",", 
     "0.1", ",", "100", ",", 
     RowBox[{"ControlType", "\[Rule]", "IntervalSlider"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Push\>\""}], ",", 
     RowBox[{"Appearance", " ", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{"\"\<Labeled\>\"", ",", "\"\<Paired\>\""}], "}"}]}]}], "}"}], 
   ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Orbital", " ", "Distance", " ", 
     RowBox[{"(", 
      RowBox[{"semi", "-", 
       RowBox[{"major", " ", "axis"}]}], ")"}], " ", "of", " ", "the", " ", 
     "planet", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"measured", " ", "in", " ", "Astronomical", " ", "Unit"}], ",",
        " ", 
       RowBox[{
        RowBox[{"that", " ", "is", " ", "the", " ", "Earth"}], "-", 
        RowBox[{"sun", " ", "distance"}]}]}], ")"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"aorb", ",", 
       RowBox[{"{", 
        RowBox[{"0.01", ",", "0.5"}], "}"}], ",", 
       "\"\<\!\(\*SubscriptBox[\(a\), \(orb\)]\)(AU)\>\""}], "}"}], ",", 
     "0.01", ",", "0.5", ",", 
     RowBox[{"ControlType", "\[Rule]", "IntervalSlider"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Push\>\""}], ",", 
     RowBox[{"Appearance", " ", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{"\"\<Labeled\>\"", ",", "\"\<Paired\>\""}], "}"}]}]}], "}"}], 
   ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Orbital", " ", "eccentricity", " ", "of", " ", "the", " ", "planet"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"eccentricity", ",", 
       RowBox[{"{", 
        RowBox[{"0.", ",", "1."}], "}"}], ",", "\"\<eccentricity\>\""}], 
      "}"}], ",", "0.", ",", "1.", ",", 
     RowBox[{"ControlType", "\[Rule]", "IntervalSlider"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Push\>\""}], ",", 
     RowBox[{"Appearance", " ", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{"\"\<Labeled\>\"", ",", "\"\<Paired\>\""}], "}"}]}]}], "}"}], 
   ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Planet", " ", "equilibrium", " ", "temperature"}], ",", " ", 
     RowBox[{
      RowBox[{
      "primarily", " ", "determined", " ", "by", " ", "the", " ", "host"}], 
      "-", 
      RowBox[{
      "stellar", " ", "radiation", " ", "flux", " ", "it", " ", 
       "receives"}]}], ",", " ", 
     RowBox[{
     "as", " ", "well", " ", "as", " ", "by", " ", "its", " ", "surface", " ",
       "albedo", " ", "which", " ", "is", " ", "determined", " ", "by", " ", 
      "its", " ", "surface", " ", "material", " ", "properties"}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Teq", ",", 
       RowBox[{"{", 
        RowBox[{"600", ",", "1500"}], "}"}], ",", 
       "\"\<\!\(\*SubscriptBox[\(T\), \(eq\)]\)(K)\>\""}], "}"}], ",", "200", 
     ",", "3000", ",", 
     RowBox[{"ControlType", "\[Rule]", "IntervalSlider"}], ",", 
     RowBox[{"MinIntervalSize", "\[Rule]", "50"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Push\>\""}], ",", 
     RowBox[{"Appearance", " ", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{"\"\<Labeled\>\"", ",", "\"\<Paired\>\""}], "}"}]}]}], "}"}], 
   ",", "\[IndentingNewLine]", "\[IndentingNewLine]", "Delimiter", ",", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Range", " ", "of", " ", "Percentages", " ", "of", " ", "Errors", " ", 
      "allowed", " ", "for", " ", "the", " ", "mass", " ", "and", " ", 
      "radius", " ", "measurements"}], ",", " ", 
     RowBox[{
     "in", " ", "order", " ", "for", " ", "the", " ", "planet", " ", "to", 
      " ", "be", " ", "included", " ", "in", " ", "the", " ", 
      RowBox[{"plot", ":"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Sigma]Mpercent", ",", "50", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[Sigma]M\), \(p\)]\)/\!\(\*SubscriptBox[\(M\
\), \(p\)]\)(%)\>\""}], "}"}], ",", "1", ",", "100", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}], ",", 
     RowBox[{"AnimationRate", "\[Rule]", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\[Sigma]Rpercent", ",", "20", ",", 
       "\"\<\!\(\*SubscriptBox[\(\[Sigma]R\), \(p\)]\)/\!\(\*SubscriptBox[\(R\
\), \(p\)]\)(%)\>\""}], "}"}], ",", "1", ",", "100", ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Open\>\""}], ",", 
     RowBox[{"AnimationRate", "\[Rule]", "1"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "Delimiter", ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Use", " ", "FormObject", " ", "to", " ", "specify", " ", "Control", " ", 
     "and", " ", "TrackingFunction", " ", "to", " ", "enforce", " ", 
     "restrictions", " ", "on", " ", "a", " ", 
     RowBox[{"Control", ":"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Choice", " ", "of", " ", "logarithmic"}], "-", "versus", "-", 
     RowBox[{"linear", " ", "scale", " ", "in", " ", 
      RowBox[{"mass", ":", " ", 
       RowBox[{"x", "-", "dimension"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "xscale", ",", "True", ",", 
             "\"\<\!\(\*SubscriptBox[\(m\), \(scale\)]\):\>\""}], "}"}], ",", 
           
           RowBox[{"{", 
            RowBox[{
             RowBox[{"False", "\[Rule]", "\"\<linear\>\""}], ",", 
             RowBox[{"True", "\[Rule]", "\"\<log\>\""}]}], "}"}], ",", 
           RowBox[{"TrackingFunction", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"xscale", "=", "#"}], ";", 
               RowBox[{"If", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"np1", "=", 
                  RowBox[{
                   RowBox[{"MapAt", "[", 
                    RowBox[{"Log", ",", 
                    RowBox[{"{", 
                    RowBox[{";;", ",", "1"}], "}"}]}], "]"}], "@", "np1"}]}], 
                 ",", 
                 RowBox[{"np1", "=", 
                  RowBox[{
                   RowBox[{"MapAt", "[", 
                    RowBox[{"Exp", ",", 
                    RowBox[{"{", 
                    RowBox[{";;", ",", "1"}], "}"}]}], "]"}], "@", 
                   "np1"}]}]}], "]"}], ";"}], "&"}], ")"}]}]}], "}"}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"min", "-", 
          RowBox[{"mass", " ", "of", " ", "the", " ", "plot"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "mmin", ",", "1.", ",", 
             "\"\<\!\(\*SubscriptBox[\(m\), \(min\)]\)(\!\(\*SubscriptBox[\(M\
\), \(\[Earth]\)]\))\>\""}], "}"}], ",", 
           RowBox[{"ControlType", "\[Rule]", "InputField"}], ",", 
           RowBox[{"FieldSize", "\[Rule]", "5"}], ",", 
           RowBox[{"TrackingFunction", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"NumberQ", "[", "#", "]"}], "&&", 
                 RowBox[{"#", ">", "0"}]}], ",", 
                RowBox[{"mmin", "=", "#"}]}], "]"}], "&"}], ")"}]}]}], "}"}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"max", "-", 
          RowBox[{"mass", " ", "of", " ", "the", " ", "plot"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "mmax", ",", "55.", ",", 
             "\"\<\!\(\*SubscriptBox[\(m\), \(max\)]\)(\!\(\*SubscriptBox[\(M\
\), \(\[Earth]\)]\))\>\""}], "}"}], ",", 
           RowBox[{"ControlType", "\[Rule]", "InputField"}], ",", 
           RowBox[{"FieldSize", "\[Rule]", "5"}], ",", 
           RowBox[{"TrackingFunction", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"NumberQ", "[", "#", "]"}], "&&", 
                 RowBox[{"#", ">", "0"}]}], ",", 
                RowBox[{"mmax", "=", "#"}]}], "]"}], "&"}], ")"}]}]}], "}"}], 
         "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Choice", " ", "of", " ", "logarithmic"}], "-", "versus", "-", 
        RowBox[{"linear", " ", "scale", " ", "in", " ", 
         RowBox[{"radius", ":", " ", 
          RowBox[{"y", "-", "dimension"}]}]}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "yscale", ",", "True", ",", 
             "\"\<\!\(\*SubscriptBox[\(r\), \(scale\)]\):\>\""}], "}"}], ",", 
           
           RowBox[{"{", 
            RowBox[{
             RowBox[{"False", "\[Rule]", "\"\<linear\>\""}], ",", 
             RowBox[{"True", "\[Rule]", "\"\<log\>\""}]}], "}"}], ",", 
           RowBox[{"TrackingFunction", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"yscale", "=", "#"}], ";", 
               RowBox[{"If", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"np1", "=", 
                  RowBox[{
                   RowBox[{"MapAt", "[", 
                    RowBox[{"Log", ",", 
                    RowBox[{"{", 
                    RowBox[{";;", ",", "2"}], "}"}]}], "]"}], "@", "np1"}]}], 
                 ",", 
                 RowBox[{"np1", "=", 
                  RowBox[{
                   RowBox[{"MapAt", "[", 
                    RowBox[{"Exp", ",", 
                    RowBox[{"{", 
                    RowBox[{";;", ",", "2"}], "}"}]}], "]"}], "@", 
                   "np1"}]}]}], "]"}], ";"}], "&"}], ")"}]}]}], "}"}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"min", "-", 
          RowBox[{"radius", " ", "of", " ", "the", " ", "plot"}]}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "rmin", ",", "1.", ",", 
             "\"\<\!\(\*SubscriptBox[\(r\), \(min\)]\)(\!\(\*SubscriptBox[\(R\
\), \(\[Earth]\)]\))\>\""}], "}"}], ",", 
           RowBox[{"ControlType", "\[Rule]", "InputField"}], ",", 
           RowBox[{"FieldSize", "\[Rule]", "5"}], ",", 
           RowBox[{"TrackingFunction", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"NumberQ", "[", "#", "]"}], "&&", 
                 RowBox[{"#", ">", "0"}]}], ",", 
                RowBox[{"rmin", "=", "#"}]}], "]"}], "&"}], ")"}]}]}], "}"}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"max", "-", 
          RowBox[{"radius", " ", "of", " ", "the", " ", "plot"}]}], "*)"}], 
        RowBox[{"Control", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "rmax", ",", "7.", ",", 
             "\"\<\!\(\*SubscriptBox[\(r\), \(max\)]\)(\!\(\*SubscriptBox[\(R\
\), \(\[Earth]\)]\))\>\""}], "}"}], ",", 
           RowBox[{"ControlType", "\[Rule]", "InputField"}], ",", 
           RowBox[{"FieldSize", "\[Rule]", "5"}], ",", 
           RowBox[{"TrackingFunction", "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"NumberQ", "[", "#", "]"}], "&&", 
                 RowBox[{"#", ">", "0"}]}], ",", 
                RowBox[{"rmax", "=", "#"}]}], "]"}], "&"}], ")"}]}]}], "}"}], 
         "]"}]}], "}"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "Delimiter", ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"manipulate", " ", "histogram", " ", 
     RowBox[{"binning", ":"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Here", " ", "one", " ", "can", " ", "choose", " ", "how", " ", "many", 
     " ", "total", " ", "number", " ", "of", " ", "bins", " ", "are", " ", 
     "for", " ", "each", " ", "histogram", " ", 
     RowBox[{"considered", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "The", " ", "number", " ", "of", " ", "bins", " ", "is", " ", "a", " ", 
      "free", " ", "parameter"}], ",", " ", "however", ",", " ", 
     RowBox[{"by", " ", "manipulating", " ", "it"}], ",", " ", 
     RowBox[{
     "one", " ", "can", " ", "see", " ", "how", " ", "a", " ", "distribution",
       " ", "changes", " ", "its", " ", "outlook", " ", "with", " ", 
      "coarser", " ", "binning", " ", "versus", " ", "finer", " ", 
      RowBox[{"binning", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Histogram:\>\"", ",", "\[IndentingNewLine]", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"histmassbin", ",", "13", ",", "\"\< mass bin\>\""}], "}"}],
          ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
           ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", 
           ",", "14", ",", "15", ",", "16", ",", "17", ",", "18", ",", "19", 
           ",", "20", ",", "21", ",", "22", ",", "23", ",", "24", ",", "25", 
           ",", "30", ",", "40", ",", "50", ",", "60", ",", "80", ",", 
           "100"}], "}"}], ",", 
         RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}], "]"}], ",", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"histradiusbin", ",", "24", ",", "\"\< radius bin\>\""}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
           ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", 
           ",", "14", ",", "15", ",", "16", ",", "17", ",", "18", ",", "19", 
           ",", "20", ",", "21", ",", "22", ",", "23", ",", "24", ",", "25", 
           ",", "30", ",", "40", ",", "50", ",", "60", ",", "80", ",", 
           "100"}], "}"}], ",", 
         RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}], "]"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"histzetabin", ",", "5", ",", "\"\< \[Zeta] bin\>\""}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
          "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", 
           ",", "8", ",", "9", ",", "10", ",", "11", ",", "12", ",", "13", 
           ",", "14", ",", "15", ",", "16", ",", "17", ",", "18", ",", "19", 
           ",", "20", ",", "21", ",", "22", ",", "23", ",", "24", ",", "25", 
           ",", "30", ",", "40", ",", "50", ",", "60", ",", "80", ",", 
           "100"}], "}"}], ",", 
         RowBox[{"ControlType", "\[Rule]", "PopupMenu"}]}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "option", " ", "to", " ", "choose", " ", "to", " ", "show", " ", "log", 
     " ", "count", " ", "in", " ", "mass", " ", "or", " ", "radius", " ", 
     "or", " ", "both"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "this", " ", "option", " ", "is", " ", "useful", " ", "when", " ", 
       "the", " ", "count", " ", "in", " ", "a", " ", "histogram", " ", 
       "spans", " ", "over", " ", "several", " ", "orders"}], "-", "of", "-", 
      "magnitude"}], ",", " ", 
     RowBox[{
     "in", " ", "which", " ", "case", " ", "the", " ", "log", " ", "count", 
      " ", "will", " ", "be", " ", "able", " ", "to", " ", "show", " ", 
      "other", " ", "smaller", " ", "peaks", " ", "in", " ", "a", " ", 
      "distribution"}], ",", " ", 
     RowBox[{
     "as", " ", "opposed", " ", "to", " ", "only", " ", "showing", " ", "the",
       " ", "dominating", " ", "primary", " ", "peak", " ", "in", " ", "the", 
      " ", "distribution"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "logcountinmass", ",", "False", ",", 
           "\"\<show log count in mass?\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "logcountinradius", ",", "False", ",", 
           "\"\<show log count in radius?\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", "Delimiter", 
   ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "option", " ", "to", " ", "add", " ", "a", " ", "gaseous", " ", 
     "envelope", " ", "or", " ", 
     RowBox[{"not", "?"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "on", " ", "top", " ", "of", " ", "either", " ", "a", " ", "pure"}], 
      "-", 
      RowBox[{
       SubscriptBox["H", "2"], "O", " ", "planet", " ", "core"}]}], ",", " ", 
     
     RowBox[{
      RowBox[{"or", " ", "a", " ", "pure"}], "-", 
      RowBox[{"Silicates", " ", "planet", " ", "core"}]}], ",", " ", 
     RowBox[{
      RowBox[{"or", " ", "a", " ", "pure"}], "-", 
      RowBox[{"iron", " ", "planet", " ", "core"}]}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"env1", ",", "True", ",", "\"\<add envelope?\>\""}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"env2", ",", "1", ",", "\"\< onto\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
           "1", "\[Rule]", "\"\<\!\(\*SubscriptBox[\(H\), \(2\)]\)O\>\""}], 
           ",", 
           RowBox[{"2", "\[Rule]", "\"\<Silicates\>\""}], ",", 
           RowBox[{"3", "\[Rule]", "\"\<Fe\>\""}]}], "}"}]}], "}"}], "]"}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{
   "Item", "[", 
    "\"\<\!\(\*UnderscriptBox[\(\[Integral]\), \(\(\[Element]\)\(env\)\)]\)\!\
\(\*FractionBox[\(dP\), \(\[Rho]\)]\)/(\!\(\*FractionBox[SubscriptBox[\(GM\), \
\(\[Earth]\)], SubscriptBox[\(R\), \
\(\[Earth]\)]]\))={0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1,1.5,2,2.5,3,4,5} \
contours\>\"", "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "Delimiter", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"option", " ", "to", " ", "add", " ", "the", " ", "pure"}], "-", 
      RowBox[{"Hydrogen", " ", "EOS", " ", "mass"}], "-", 
      RowBox[{
      "radius", " ", "calculatted", " ", "from", " ", "Becker", " ", "et", 
       " ", 
       RowBox[{"al", ".", " ", "ApJS"}], " ", "215"}]}], ",", 
     RowBox[{"21", " ", 
      RowBox[{
       RowBox[{"(", "2014", ")"}], "."}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "env3", ",", "False", ",", 
           "\"\<show pure-Hydrogen mass-radius?\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",", 
      RowBox[{"Control", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "env4", ",", "False", ",", 
           "\"\<show pure-Hydrogen central density?\>\""}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}]}], "}"}], 
    "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", "Delimiter", 
   ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"add", " ", "new", " ", "planet", 
     RowBox[{
      RowBox[{"(", "s", ")"}], "?", " ", "in"}], " ", "the", " ", 
     "InputField"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Step1", ":", " ", 
     RowBox[{"Ask", " ", "add", " ", "new", " ", "planet", 
      RowBox[{"(", "s", ")"}], " ", "or", " ", 
      RowBox[{"not", "?"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Step2", ":", " ", 
     RowBox[{
     "Specify", " ", "the", " ", "number", " ", "of", " ", "new", " ", 
      "planet", 
      RowBox[{"(", "s", ")"}], " ", "to", " ", "be", " ", "added", " ", "in", 
      " ", "the", " ", "InputField"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Column", "[", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"add1", ",", "True", ",", "\"\<add new planet(s)?\>\""}],
              "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Control", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "filter1", ",", "True", ",", 
              "\"\<filter new planet(s)\\n by \!\(\*SubscriptBox[\(T\), \
\(eq\)]\)?\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"False", ",", "True"}], "}"}]}], "}"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Dynamic", "@", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "add2", ",", "True", ",", 
            "\"\< add new planet(s) \\n name label(s)?\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"False", ",", "True"}], "}"}], ",", 
          RowBox[{"Enabled", "\[Rule]", 
           RowBox[{"Dynamic", "[", "add1", "]"}]}]}], "}"}], "]"}]}], ",", 
      RowBox[{"Dynamic", "@", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"add3", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "0.8"}], "}"}], ",", 
            "\"\< label\\nplacement\\nslider2D:\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", 
          RowBox[{"ControlType", "\[Rule]", "Slider2D"}], ",", 
          RowBox[{"Enabled", "\[Rule]", 
           RowBox[{"Dynamic", "[", 
            RowBox[{"add1", "&&", "add2"}], "]"}]}]}], "}"}], "]"}]}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Step3", ":", " ", 
      RowBox[{"Create", " ", "InputFields", " ", "for", " ", "mass"}]}], ",", 
     " ", "radius", ",", " ", 
     RowBox[{"their", " ", "errors"}], ",", " ", 
     RowBox[{
     "and", " ", "temperature", " ", "for", " ", "each", " ", "new", " ", 
      "planet"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
   "Item", "[", 
    "\"\<Input {{planetname, m(\!\(\*SubscriptBox[\(M\), \(\[Earth]\)]\)),\
\[Sigma]m+,\[Sigma]m-,r(\!\(\*SubscriptBox[\(R\), \
\(\[Earth]\)]\)),\[Sigma]r+,\[Sigma]r-,\!\(\*SubscriptBox[\(T\), \
\(eq\)]\)(K)},...} list:\>\"", "]"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "np2", " ", "stores", " ", "the", " ", "data", " ", "for", " ", "the", 
     " ", "new", " ", "planet", 
     RowBox[{"(", "s", ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"one", " ", "can", " ", "input", " ", "multiple", " ", 
     RowBox[{"planets", "'"}], " ", "data", " ", "following", " ", "the", " ",
      "same", " ", "format", " ", 
     RowBox[{"here", ":"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Control", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"np2", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<K2-79b\>\"", ",", "11.8", ",", "3.6", ",", "3.6", ",", "4.09",
             ",", "0.17", ",", "0.12", ",", "1021"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<K2-222b\>\"", ",", "8.0", ",", "1.8", ",", "1.8", ",", "2.35",
             ",", "0.08", ",", "0.07", ",", "878"}], "}"}]}], "}"}], ",", 
        "\"\<new\\nplanets'\\n{m,r,...} list:\>\""}], "}"}], ",", 
      RowBox[{"ControlType", "\[Rule]", "InputField"}], ",", 
      RowBox[{"FieldSize", "\[Rule]", "Large"}], ",", 
      RowBox[{"Enabled", "\[Rule]", 
       RowBox[{"Dynamic", "[", "add1", "]"}]}]}], "}"}], "]"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "Delimiter", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Export", " ", "various", " ", "plots", " ", "in", " ", "various", " ", 
      "formats", " ", 
      RowBox[{"(", 
       RowBox[{"PDF", ",", "EPS", ",", "JPG"}], ")"}]}], ",", " ", 
     RowBox[{
     "or", " ", "Export", " ", "the", " ", "Planet", " ", "Data", " ", "in", 
      " ", "TXT", " ", "in", " ", "the", " ", "Selected", " ", "Range"}]}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Column", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"Expression", "SequenceIcon", 
         GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["Sequence", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["6", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["14600", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      Sequence[
       Row[{"Export mass-radius plot:", 
         Button["pdf", 
          Export["planetplot.pdf", $CellContext`plt1], Method -> "Queued", 
          ImageSize -> Automatic], 
         Button["eps", 
          Export["planetplot.eps", $CellContext`plt1], Method -> "Queued", 
          ImageSize -> Automatic], 
         Button["jpg", 
          Export["planetplot.jpg", $CellContext`plt1], Method -> "Queued", 
          ImageSize -> Automatic]}], 
       Row[{"Export planet table:", 
         Button["selected planets", 
          Export["planettableselected.txt", 
           Prepend[
            Select[
             Part[$CellContext`data0, 
              Span[2, All]], 
             And[$CellContext`mmin <= Part[#, 27] 317.8 <= $CellContext`mmax, 
              
              NumberQ[
               Part[#, 28]], 
              NumberQ[
               Part[#, 29]], $CellContext`rmin <= 
              Part[#, 30] 11.2 <= $CellContext`rmax, 
              NumberQ[
               Part[#, 31]], 
              NumberQ[
               Part[#, 32]], 
              Part[#, 31]/Part[#, 30] <= $CellContext`\[Sigma]Rpercent/100., 
              Part[#, 32]/Part[#, 30] <= $CellContext`\[Sigma]Rpercent/100., 
              Part[#, 28]/Part[#, 27] <= $CellContext`\[Sigma]Mpercent/100., 
              Part[#, 29]/Part[#, 27] <= $CellContext`\[Sigma]Mpercent/100., 
              Part[#, 30]^4/Part[#, 27] > 0.01, Part[$CellContext`Porb, 1] <= 
              Part[#, 20] <= Part[$CellContext`Porb, 2], 
              Part[$CellContext`Teq, 1] <= Part[#, 39] <= 
              Part[$CellContext`Teq, 2], Part[$CellContext`Teff, 1] <= 
              Part[#, 2] <= Part[$CellContext`Teff, 2], 
              Part[$CellContext`eccentricity, 1] <= Part[#, 21] <= 
              Part[$CellContext`eccentricity, 2], Part[$CellContext`mstar, 1] <= 
              Part[#, 8] <= Part[$CellContext`mstar, 2], 
              Part[$CellContext`rstar, 1] <= Part[#, 11] <= 
              Part[$CellContext`rstar, 2], Part[$CellContext`aorb, 1] <= 
              Part[#, 24] <= Part[$CellContext`aorb, 2], 
              First[$CellContext`FeHdex] <= Part[#, 5] <= 
              Last[$CellContext`FeHdex]]& ], 
            Part[$CellContext`data0, 1]], "Table"], Method -> "Queued", 
          ImageSize -> Automatic], 
         Button["all planets", 
          Export["planettableall.txt", $CellContext`data0, "Table"], Method -> 
          "Queued", ImageSize -> Automatic]}], 
       Row[{"Export histogram of planet radius:", 
         Button["pdf", 
          Export["histogram.pdf", $CellContext`plt2], Method -> "Queued", 
          ImageSize -> Automatic], 
         Button["eps", 
          Export["histogram.eps", $CellContext`plt2], Method -> "Queued", 
          ImageSize -> Automatic], 
         Button["jpg", 
          Export["histogram.jpg", $CellContext`plt2], Method -> "Queued", 
          ImageSize -> Automatic]}], 
       Row[{"Export histogram of planet mass:", 
         Button["pdf", 
          Export["ternaryplot.pdf", $CellContext`plt3], Method -> "Queued", 
          ImageSize -> Automatic], 
         Button["eps", 
          Export["ternaryplot.eps", $CellContext`plt3], Method -> "Queued", 
          ImageSize -> Automatic], 
         Button["jpg", 
          Export["ternaryplot.jpg", $CellContext`plt3], Method -> "Queued", 
          ImageSize -> Automatic]}], 
       Row[{"Export histogram of \[Zeta]:", 
         Button["pdf", 
          Export["histogram.pdf", $CellContext`plt4], Method -> "Queued", 
          ImageSize -> Automatic], 
         Button["eps", 
          Export["histogram.eps", $CellContext`plt4], Method -> "Queued", 
          ImageSize -> Automatic], 
         Button["jpg", 
          Export["histogram.jpg", $CellContext`plt4], Method -> "Queued", 
          ImageSize -> Automatic]}], 
       Row[{"Export combined plot:", 
         Button["pdf", 
          Export["combinedplot.pdf", $CellContext`plt], Method -> "Queued", 
          ImageSize -> Automatic], 
         Button["eps", 
          Export["combinedplot.eps", $CellContext`plt], Method -> "Queued", 
          ImageSize -> Automatic], 
         Button["jpg", 
          Export["combinedplot.jpg", $CellContext`plt], Method -> "Queued", 
          ImageSize -> Automatic]}]],
      SelectWithContents->True,
      Selectable->False], "\[IndentingNewLine]", "}"}], "]"}], 
   "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ControlPlacement", " ", "\[Rule]", " ", "Left"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SynchronousUpdating", "\[Rule]", "False"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Deployed", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Load", " ", "external", " ", "exoplanet", " ", "data", " ", "from", " ", 
     "TepCat", " ", "compiled", " ", "by", " ", "John", " ", "Southworth", 
     " ", "from", " ", 
     RowBox[{"UK", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"https", ":"}], "//", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"www", ".", "astro", ".", "keele", ".", "ac", ".", "uk"}],
             "/", "jkt"}], "/", "tepcat"}], "/"}]}], ")"}], " ", "well"}], 
      "-", 
      RowBox[{"studied", " ", "exoplanets"}]}], ",", " ", 
     RowBox[{
     "constantly", " ", "being", " ", "updated", " ", "by", " ", "the", " ", 
      "author"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Journal", " ", 
      RowBox[{"Reference", ":", " ", 
       RowBox[{"Southworth", " ", 
        RowBox[{"J", "."}]}]}]}], ",", "2011", ",", "MNRAS", ",", "417", ",", 
     "2166"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Initialization", "\[RuleDelayed]", 
    RowBox[{"(", 
     RowBox[{"{", 
      RowBox[{"data0", "=", 
       RowBox[{"Import", "[", 
        RowBox[{
        "\"\<https://www.astro.keele.ac.uk/jkt/tepcat/allplanets-ascii.txt\>\"\
", ",", "\"\<Table\>\""}], "]"}]}], "}"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.808498937053774*^9, 3.808499095447165*^9}, {
   3.8084991581960077`*^9, 3.8084991795250072`*^9}, {3.808499240115862*^9, 
   3.808499276382185*^9}, {3.8084993691536016`*^9, 3.808499386151558*^9}, {
   3.808499476555603*^9, 3.808499490701742*^9}, {3.808499848441725*^9, 
   3.808499985329391*^9}, {3.808500036522696*^9, 3.808500062688403*^9}, {
   3.808500242628228*^9, 3.808500276858206*^9}, {3.808500730981846*^9, 
   3.8085008629344788`*^9}, 3.8085018821657476`*^9, {3.8085020667217903`*^9, 
   3.8085020733366003`*^9}, {3.808502119909719*^9, 3.8085021364481497`*^9}, {
   3.808502340627613*^9, 3.8085024309415693`*^9}, {3.808502463175578*^9, 
   3.808502476881817*^9}, {3.8089045377877913`*^9, 3.80890456899183*^9}, {
   3.808905525243229*^9, 3.808905578332384*^9}, {3.808908287213879*^9, 
   3.808908292734215*^9}, 3.808908324547186*^9, {3.8089083583531027`*^9, 
   3.808908448660211*^9}, {3.808941996864004*^9, 3.808942005032806*^9}, {
   3.8089420431843987`*^9, 3.8089421226877213`*^9}, {3.8089428190633574`*^9, 
   3.808942869652742*^9}, {3.8089429232953672`*^9, 3.808942930127865*^9}, {
   3.808943873914454*^9, 3.8089439117258387`*^9}, {3.808943979008459*^9, 
   3.808944007328822*^9}, {3.808944062251089*^9, 3.808944062533024*^9}, {
   3.808944127477091*^9, 3.8089441312221527`*^9}, {3.808992219027473*^9, 
   3.808992241064706*^9}, {3.808996726992343*^9, 3.808996783498056*^9}, {
   3.808997015027883*^9, 3.808997050715876*^9}, {3.8089972299347963`*^9, 
   3.8089972814662857`*^9}, {3.808997379292139*^9, 3.808997400019928*^9}, {
   3.808998120211981*^9, 3.80899813793962*^9}, {3.808998352923367*^9, 
   3.808998367381647*^9}, {3.808998424981366*^9, 3.808998486316299*^9}, {
   3.8089986175361834`*^9, 3.808998627432276*^9}, {3.8089986845788717`*^9, 
   3.808998689729331*^9}, {3.808999240059379*^9, 3.808999361094314*^9}, {
   3.808999413202867*^9, 3.808999457083527*^9}, {3.8089995203224487`*^9, 
   3.808999614837129*^9}, {3.8089998056537457`*^9, 3.8089998130054493`*^9}, {
   3.809271425974964*^9, 3.8092714696250553`*^9}, {3.8092716419912157`*^9, 
   3.809271651991597*^9}, {3.8092719283689413`*^9, 3.8092719502468147`*^9}, {
   3.809272174627531*^9, 3.809272177064476*^9}, 3.8092722914452057`*^9, 
   3.809272406416582*^9, {3.809272475767959*^9, 3.809272478427945*^9}, {
   3.809275262523961*^9, 3.8092752656825323`*^9}, {3.809276412173133*^9, 
   3.809276423672172*^9}, {3.809276468051425*^9, 3.809276472131452*^9}, {
   3.809276508231028*^9, 3.809276526046879*^9}, {3.809276858924555*^9, 
   3.809276859057768*^9}, {3.809276926970004*^9, 3.809276938403137*^9}, {
   3.8092769824737587`*^9, 3.8092769826984663`*^9}, {3.809277329899433*^9, 
   3.8092773698377647`*^9}, {3.809277464288313*^9, 3.809277495195866*^9}, 
   3.809278337715535*^9, {3.809278468742639*^9, 3.80927851908208*^9}, {
   3.809278829882024*^9, 3.8092788354468527`*^9}, {3.809278877591071*^9, 
   3.809278879398044*^9}, {3.809278912554825*^9, 3.809278924704348*^9}, {
   3.809279954688466*^9, 3.80927995594936*^9}, {3.809290138111548*^9, 
   3.809290160143076*^9}, {3.8092901926488533`*^9, 3.8092901928384933`*^9}, {
   3.8092903008921213`*^9, 3.8092903057769403`*^9}, {3.809290377064761*^9, 
   3.809290380340109*^9}, {3.8092906105696363`*^9, 3.8092906478962393`*^9}, {
   3.8092908562194633`*^9, 3.809290877809161*^9}, {3.809290910151113*^9, 
   3.809290925099234*^9}, {3.809291087321066*^9, 3.809291105419381*^9}, {
   3.809291151153203*^9, 3.8092911612588663`*^9}, {3.8092912232278843`*^9, 
   3.809291261113452*^9}, {3.809291363145022*^9, 3.809291364356292*^9}, {
   3.809291395481982*^9, 3.80929142495945*^9}, {3.80929159888594*^9, 
   3.809291608171247*^9}, {3.809291677618819*^9, 3.809291745780209*^9}, {
   3.809291801272492*^9, 3.809291806827527*^9}, {3.809291918141776*^9, 
   3.809291920339666*^9}, 3.809292322954698*^9, {3.809293308682177*^9, 
   3.809293431322043*^9}, {3.809294032032007*^9, 3.809294032138693*^9}, {
   3.8092948061778584`*^9, 3.8092948067744102`*^9}, {3.809294840657546*^9, 
   3.809294841229105*^9}, {3.8092950916819077`*^9, 3.8092951028177643`*^9}, {
   3.809295359957608*^9, 3.809295462948284*^9}, {3.8092955977510653`*^9, 
   3.8092956282771053`*^9}, {3.809438537545401*^9, 3.809438561334214*^9}, {
   3.8094387771865396`*^9, 3.809438810471078*^9}, {3.8094388932012587`*^9, 
   3.809438911917758*^9}, 3.809438984382044*^9, {3.809439023005818*^9, 
   3.809439041156309*^9}, 3.809439153606526*^9, {3.809439573369257*^9, 
   3.809439579877408*^9}, {3.8094396295740557`*^9, 3.80943963784857*^9}, {
   3.809439844045735*^9, 3.80943998528172*^9}, {3.809440051928677*^9, 
   3.809440130393178*^9}, {3.8094402193255253`*^9, 3.809440249914822*^9}, {
   3.809440342129168*^9, 3.809440354073151*^9}, {3.80944072288803*^9, 
   3.809440746029978*^9}, {3.809440778344051*^9, 3.8094407818347263`*^9}, {
   3.809441006207582*^9, 3.809441017490718*^9}, 3.8099763173584003`*^9, {
   3.809976919590951*^9, 3.80997692125906*^9}, {3.809977382070088*^9, 
   3.809977473315469*^9}, {3.809977592737022*^9, 3.80997759402969*^9}, {
   3.809977687246336*^9, 3.8099777480484877`*^9}, 3.8099778715879803`*^9, {
   3.809978267458989*^9, 3.809978364416741*^9}, {3.809979473673628*^9, 
   3.809979557267778*^9}, {3.809979596022184*^9, 3.8099795999063473`*^9}, {
   3.809980131305016*^9, 3.8099802240044127`*^9}, {3.809981292517218*^9, 
   3.809981293344021*^9}, {3.809981339155306*^9, 3.809981342083929*^9}, {
   3.8099818097206163`*^9, 3.809981812075698*^9}, {3.810124797865588*^9, 
   3.81012479830448*^9}, {3.81039870904883*^9, 3.81039872715941*^9}, {
   3.810399020871207*^9, 3.810399092204979*^9}, {3.810399136473695*^9, 
   3.810399170529479*^9}, {3.810399252644784*^9, 3.810399354052113*^9}, {
   3.810399402988796*^9, 3.810399435910718*^9}, {3.8103994710269938`*^9, 
   3.810399479759796*^9}, {3.8103996368483458`*^9, 3.8103996858474293`*^9}, {
   3.810399718528192*^9, 3.810399722708226*^9}, {3.8103997558777933`*^9, 
   3.8103997731614037`*^9}, {3.810399825148889*^9, 3.810399846382739*^9}, {
   3.81039999676443*^9, 3.810400034558248*^9}, {3.810400139923357*^9, 
   3.810400267090966*^9}, 3.8104004196982317`*^9, {3.810400507498261*^9, 
   3.8104005156175823`*^9}, {3.810466469511159*^9, 3.810466472565488*^9}, {
   3.810466516515709*^9, 3.810466540253837*^9}, {3.810466876530923*^9, 
   3.810466896247033*^9}, {3.810467628309513*^9, 3.810467671037978*^9}, {
   3.810467890276559*^9, 3.810467995325508*^9}, {3.810479184230647*^9, 
   3.810479188386684*^9}, {3.8106613209223547`*^9, 3.810661327469366*^9}, {
   3.8106619135977707`*^9, 3.8106619668332767`*^9}, {3.810806529971755*^9, 
   3.810806612632574*^9}, {3.810806711731777*^9, 3.810806787519084*^9}, {
   3.8108068290348787`*^9, 3.81080683509198*^9}, {3.810806888029386*^9, 
   3.8108068913903008`*^9}, 3.810806990945602*^9, 3.810807124467461*^9, {
   3.81080749942869*^9, 3.8108075475111017`*^9}, 3.810807586457343*^9, {
   3.810808172596506*^9, 3.8108082618545837`*^9}, {3.8108083003445377`*^9, 
   3.810808351595756*^9}, {3.8108084592540092`*^9, 3.810808463466052*^9}, {
   3.810808574206747*^9, 3.8108085744583883`*^9}, {3.810808633429549*^9, 
   3.8108086965073023`*^9}, {3.810809885161846*^9, 3.810809894366639*^9}, {
   3.8108099946577787`*^9, 3.8108100007919693`*^9}, {3.810810747863943*^9, 
   3.810810812975946*^9}, {3.810810888400978*^9, 3.810810891221423*^9}, {
   3.810811145057642*^9, 3.8108112455705147`*^9}, {3.810811296487768*^9, 
   3.81081149631494*^9}, {3.810811546942778*^9, 3.810811675112626*^9}, {
   3.8108117827775784`*^9, 3.810811818779372*^9}, {3.810811904567931*^9, 
   3.810811905490302*^9}, {3.810812251603428*^9, 3.810812310574741*^9}, {
   3.810812374552855*^9, 3.810812375310775*^9}, {3.810812430466735*^9, 
   3.810812484489129*^9}, {3.810812524238861*^9, 3.81081263360258*^9}, {
   3.810812757466042*^9, 3.810812818584642*^9}, {3.810812996052391*^9, 
   3.8108130353443108`*^9}, {3.810813213386463*^9, 3.810813321578248*^9}, {
   3.81081354836553*^9, 3.8108136194557657`*^9}, {3.810813774271864*^9, 
   3.810813797554472*^9}, {3.810813844894445*^9, 3.810813848589082*^9}, {
   3.810813891107501*^9, 3.810813901618381*^9}, {3.810894359996222*^9, 
   3.810894368516403*^9}, {3.810894416083412*^9, 3.810894469797144*^9}, {
   3.810894512138954*^9, 3.810894626165636*^9}, {3.8108946740225687`*^9, 
   3.810894676760816*^9}, {3.81089472738619*^9, 3.810894802605426*^9}, 
   3.8108948703915358`*^9, 3.8108950798492813`*^9, {3.8108951895800734`*^9, 
   3.81089522690921*^9}, {3.810895351959353*^9, 3.810895381792429*^9}, {
   3.810895530566681*^9, 3.810895531393372*^9}, {3.810902001865119*^9, 
   3.810902025847389*^9}, {3.8109020706830072`*^9, 3.810902074857698*^9}, 
   3.8109025208421917`*^9, {3.8109027864833727`*^9, 3.8109027885337887`*^9}, {
   3.810903095199902*^9, 3.810903095935588*^9}, {3.81090339261103*^9, 
   3.810903395072693*^9}, 3.8109035147209682`*^9, {3.810903896976985*^9, 
   3.81090396211452*^9}, {3.8109039971915703`*^9, 3.810904103599073*^9}, 
   3.810904146324321*^9, {3.810904183954822*^9, 3.8109041842917843`*^9}, {
   3.8109042421574306`*^9, 3.810904287925622*^9}, {3.810904366021214*^9, 
   3.8109044331678762`*^9}, 3.810904505259914*^9, {3.810905459151567*^9, 
   3.810905470763947*^9}, {3.81093230549198*^9, 3.810932324940868*^9}, {
   3.81093236707025*^9, 3.810932453888075*^9}, {3.810932532876519*^9, 
   3.810932585030233*^9}, {3.810932640690284*^9, 3.810932661909679*^9}, {
   3.810932842133046*^9, 3.8109328523155127`*^9}, {3.810932973738793*^9, 
   3.8109329747737417`*^9}, 3.810933074462009*^9, 3.810933125609825*^9, 
   3.810933169941822*^9, {3.8109332875316267`*^9, 3.810933299418683*^9}, {
   3.810933426895396*^9, 3.8109334522367487`*^9}, 3.8109335007459707`*^9, {
   3.810933579587129*^9, 3.810933579873069*^9}, {3.810933694614279*^9, 
   3.810933697363689*^9}, {3.810933741896043*^9, 3.8109337455989723`*^9}, {
   3.8109339244879827`*^9, 3.8109339283780727`*^9}, {3.810933982177959*^9, 
   3.810933984573412*^9}, {3.810934049099272*^9, 3.81093405426655*^9}, {
   3.810934268624846*^9, 3.8109342823709993`*^9}, {3.810934403819551*^9, 
   3.810934404499958*^9}, {3.810934567114821*^9, 3.810934662974009*^9}, {
   3.810934834352065*^9, 3.81093484131345*^9}, {3.810934882341446*^9, 
   3.810934930364422*^9}, {3.810935116816633*^9, 3.810935122436797*^9}, {
   3.810935375694613*^9, 3.810935394264262*^9}, 3.810935460644196*^9, {
   3.810935502372004*^9, 3.810935520513556*^9}, {3.810935715086327*^9, 
   3.810935789165369*^9}, {3.8109358232132597`*^9, 3.8109359192847157`*^9}, 
   3.810935952509089*^9, {3.810936006344487*^9, 3.810936026978881*^9}, {
   3.8109362198075533`*^9, 3.8109362772966137`*^9}, {3.8109363341591463`*^9, 
   3.810936385133642*^9}, {3.810936425542417*^9, 3.8109364741817617`*^9}, {
   3.8109366265350237`*^9, 3.810936693531345*^9}, {3.810936798958521*^9, 
   3.810936847209333*^9}, {3.810937034866042*^9, 3.810937095136442*^9}, {
   3.8109371338124447`*^9, 3.810937157670043*^9}, {3.8109372881483383`*^9, 
   3.810937427229044*^9}, {3.8109375316731377`*^9, 3.8109375324178553`*^9}, {
   3.810937693899835*^9, 3.81093778760474*^9}, {3.810937864720834*^9, 
   3.810937904031015*^9}, {3.810979447686593*^9, 3.810979448043995*^9}, {
   3.8109795639423428`*^9, 3.810979577323545*^9}, {3.810979608837203*^9, 
   3.8109796644578753`*^9}, {3.810979732568812*^9, 3.81097973506065*^9}, {
   3.8109797688030252`*^9, 3.810979821166815*^9}, {3.810979854239833*^9, 
   3.810979866804537*^9}, {3.8109801513921003`*^9, 3.8109801671053762`*^9}, {
   3.8109802036153708`*^9, 3.8109802138394527`*^9}, {3.810980259966893*^9, 
   3.8109803567955933`*^9}, {3.8109816495103416`*^9, 
   3.8109816525800877`*^9}, {3.810981813340598*^9, 3.810981832075766*^9}, {
   3.810997699767789*^9, 3.810997711227375*^9}, {3.810997808052829*^9, 
   3.810997826619122*^9}, {3.810998528053542*^9, 3.810998555021063*^9}, {
   3.810999081015003*^9, 3.810999081849278*^9}, {3.8110167229103823`*^9, 
   3.811016819905278*^9}, {3.811016910592557*^9, 3.811016937217951*^9}, {
   3.8110170630529413`*^9, 3.811017064255793*^9}, {3.811017310118191*^9, 
   3.8110173243070793`*^9}, {3.811017364701872*^9, 3.811017396819221*^9}, {
   3.811017932293537*^9, 3.81101793710775*^9}, 3.811017978354658*^9, {
   3.8110183774753523`*^9, 3.811018382425*^9}, {3.811018617196025*^9, 
   3.811018642535329*^9}, {3.811018743767889*^9, 3.8110187441446247`*^9}, {
   3.8110187944636106`*^9, 3.811018794858759*^9}, {3.811018829691512*^9, 
   3.8110188571819277`*^9}, {3.811018890551845*^9, 3.811018909124578*^9}, {
   3.811018956980385*^9, 3.811018985291696*^9}, 3.8110194033224163`*^9, {
   3.811071059514977*^9, 3.811071081435635*^9}, 3.811071177870947*^9, {
   3.81107120801363*^9, 3.8110712468468227`*^9}, {3.811071339660294*^9, 
   3.811071367027315*^9}, {3.811071443052353*^9, 3.8110714842201557`*^9}, {
   3.811071556967025*^9, 3.811071590754343*^9}, {3.811086984077108*^9, 
   3.811087040585856*^9}, {3.8110870765825977`*^9, 3.811087106287388*^9}, {
   3.811087239863866*^9, 3.8110872594594173`*^9}, {3.811092344761203*^9, 
   3.81109239550206*^9}, {3.8110924938100777`*^9, 3.811092524387599*^9}, {
   3.811092577521261*^9, 3.811092579340169*^9}, {3.8110926452065983`*^9, 
   3.8110926514388247`*^9}, {3.811092925924076*^9, 3.811092929021482*^9}, {
   3.811092960495764*^9, 3.811092963818453*^9}, {3.8110930013512897`*^9, 
   3.811093044815527*^9}, 3.811093303650165*^9, {3.811104551928033*^9, 
   3.811104554171937*^9}, 3.811105282715205*^9, {3.8111055455256166`*^9, 
   3.811105589166741*^9}, 3.811105620108142*^9, {3.811105680532956*^9, 
   3.8111056837389107`*^9}, {3.8111058065155163`*^9, 3.811105814982421*^9}, {
   3.811105924504023*^9, 3.81110598987227*^9}, {3.811106036669985*^9, 
   3.81110604497221*^9}, {3.811106077611148*^9, 3.811106127945249*^9}, {
   3.811190767434918*^9, 3.811190768406076*^9}, {3.81119112595821*^9, 
   3.811191132938064*^9}, {3.811191183412478*^9, 3.811191210782357*^9}, {
   3.8111912741643257`*^9, 3.811191298805544*^9}, {3.811191343294771*^9, 
   3.811191410117358*^9}, {3.811191440384046*^9, 3.811191460516532*^9}, {
   3.811191524772008*^9, 3.811191538937023*^9}, {3.811191596347377*^9, 
   3.8111916377841587`*^9}, {3.811191668157926*^9, 3.8111916976600027`*^9}, {
   3.811191752780285*^9, 3.811191778344562*^9}, {3.811191865889819*^9, 
   3.811191869266124*^9}, {3.811191976825035*^9, 3.811192073458685*^9}, {
   3.811192178602571*^9, 3.8111921981238956`*^9}, 3.811192663613387*^9, {
   3.81119270494013*^9, 3.811192747738085*^9}, {3.8111928921066723`*^9, 
   3.8111928974063683`*^9}, 3.811192928576695*^9, 3.8111931014138517`*^9, {
   3.811196494144169*^9, 3.811196510413843*^9}, {3.811229000596985*^9, 
   3.811229055267829*^9}, {3.8112291928737288`*^9, 3.811229197106577*^9}, {
   3.811229229337007*^9, 3.81122924947226*^9}, 3.8112292802531643`*^9, 
   3.811229365997733*^9, {3.81122943005196*^9, 3.811229432720722*^9}, {
   3.8112300692847233`*^9, 3.811230080076046*^9}, {3.81123030170681*^9, 
   3.81123030704125*^9}, {3.8112303661833344`*^9, 3.811230479183556*^9}, {
   3.8112305946538258`*^9, 3.8112306231492043`*^9}, {3.81123068301754*^9, 
   3.811230715754306*^9}, {3.811230957652893*^9, 3.811230959130954*^9}, {
   3.811231007011228*^9, 3.811231059105077*^9}, {3.811232128945656*^9, 
   3.811232131425404*^9}, {3.8112322148213463`*^9, 3.811232215381279*^9}, {
   3.811232644380722*^9, 3.8112326513578167`*^9}, {3.811232707437244*^9, 
   3.8112328228310137`*^9}, {3.8112330493570023`*^9, 3.811233055354405*^9}, {
   3.811233117551586*^9, 3.8112331280510283`*^9}, {3.81123319111843*^9, 
   3.811233195544949*^9}, {3.8112401658932447`*^9, 3.811240167582649*^9}, 
   3.8112402111964893`*^9, {3.811240275020528*^9, 3.811240299652931*^9}, {
   3.811240332607085*^9, 3.811240368780003*^9}, {3.811240425039721*^9, 
   3.811240435348617*^9}, {3.8112407731266603`*^9, 3.8112408679392*^9}, {
   3.8112409018244457`*^9, 3.81124090196994*^9}, {3.8112409613617983`*^9, 
   3.811241022531369*^9}, {3.811241165756858*^9, 3.811241167545796*^9}, {
   3.811241238111175*^9, 3.811241257527265*^9}, {3.811241758640082*^9, 
   3.8112417611660013`*^9}, {3.811242999624152*^9, 3.8112430055628557`*^9}, {
   3.811243060932043*^9, 3.8112430784227247`*^9}, {3.811243191125265*^9, 
   3.8112431996819143`*^9}, {3.811243429270597*^9, 3.8112434399045467`*^9}, {
   3.811243835926162*^9, 3.811243845758211*^9}, 3.811243880785812*^9, {
   3.811244242008315*^9, 3.811244271489657*^9}, {3.811244356430221*^9, 
   3.8112443672427692`*^9}, {3.8112444027451487`*^9, 3.811244442480912*^9}, {
   3.8112445324743156`*^9, 3.811244605910524*^9}, {3.8112447980987062`*^9, 
   3.8112448000291357`*^9}, {3.811244852065463*^9, 3.811244854936537*^9}, {
   3.811244900891941*^9, 3.811244913315534*^9}, {3.8112449590056343`*^9, 
   3.811244966606724*^9}, {3.811245002942923*^9, 3.8112450074554377`*^9}, {
   3.811245051321767*^9, 3.811245063457621*^9}, {3.811245190072802*^9, 
   3.811245194916793*^9}, {3.811245366794685*^9, 3.8112454272175703`*^9}, {
   3.811245524630534*^9, 3.811245533631104*^9}, {3.8112456238879347`*^9, 
   3.8112456962663193`*^9}, {3.8112457537060337`*^9, 
   3.8112457552664547`*^9}, {3.8112459130327578`*^9, 3.811245936793531*^9}, 
   3.811246129044487*^9, {3.8112461667544203`*^9, 3.8112461794669313`*^9}, {
   3.811246290350781*^9, 3.811246299823845*^9}, {3.8112463347547417`*^9, 
   3.8112463444336243`*^9}, {3.811246571825974*^9, 3.8112465781245203`*^9}, 
   3.811246649754821*^9, {3.811262914273633*^9, 3.811263076058432*^9}, {
   3.811263886182519*^9, 3.8112638986069803`*^9}, {3.811263971958467*^9, 
   3.811263972365903*^9}, {3.811264340452859*^9, 3.811264367344276*^9}, {
   3.811264793717868*^9, 3.811264802674774*^9}, {3.8112648348895807`*^9, 
   3.811264842646006*^9}, {3.811264949845595*^9, 3.8112649905305033`*^9}, {
   3.811265054109741*^9, 3.811265054479226*^9}, {3.811265606030012*^9, 
   3.811265630778068*^9}, {3.8112657617191133`*^9, 3.811265769952703*^9}, {
   3.811265800850951*^9, 3.8112658246609077`*^9}, {3.8112659120375433`*^9, 
   3.8112659322121563`*^9}, {3.811265965080489*^9, 3.811265969411298*^9}, {
   3.811266010542021*^9, 3.8112660142345257`*^9}, {3.811266149692548*^9, 
   3.81126615425495*^9}, {3.8112662187130203`*^9, 3.811266240227648*^9}, {
   3.811266686518283*^9, 3.811266689891033*^9}, {3.81126714810157*^9, 
   3.811267160419413*^9}, {3.81126779365145*^9, 3.811267805676487*^9}, {
   3.8112735288325787`*^9, 3.8112735349760036`*^9}, {3.81127362981889*^9, 
   3.811273653324151*^9}, {3.811273713629518*^9, 3.811273780303583*^9}, {
   3.811273891192252*^9, 3.811273892492771*^9}, {3.811333031267076*^9, 
   3.811333032276888*^9}, 3.811333614909898*^9, {3.811343476535122*^9, 
   3.811343597248002*^9}, {3.811343700362708*^9, 3.811343717596376*^9}, {
   3.811343753861145*^9, 3.811343803685087*^9}, 3.811343888761072*^9, 
   3.8113440373401546`*^9, {3.811344067600575*^9, 3.811344096759173*^9}, {
   3.811344186391659*^9, 3.811344220960744*^9}, {3.811344302391931*^9, 
   3.81134434076589*^9}, {3.811344413818478*^9, 3.81134447395863*^9}, {
   3.811344564123966*^9, 3.8113445802875338`*^9}, {3.811344635884591*^9, 
   3.811344643726276*^9}, {3.811344806017747*^9, 3.811344826670844*^9}, {
   3.811344944569998*^9, 3.8113449497425623`*^9}, {3.811345040519731*^9, 
   3.811345042927744*^9}, {3.8113453221003838`*^9, 3.8113453921540823`*^9}, {
   3.811345457469529*^9, 3.811345463597505*^9}, {3.811345642573086*^9, 
   3.811345647446095*^9}, {3.811345708789468*^9, 3.811345730605793*^9}, {
   3.811345828950705*^9, 3.811345965755004*^9}, {3.811346036908187*^9, 
   3.811346055879693*^9}, {3.811346172588517*^9, 3.81134617977417*^9}, 
   3.811346376140136*^9, {3.811352975222786*^9, 3.8113529858587713`*^9}, {
   3.811369889386038*^9, 3.8113699111800213`*^9}, {3.8113699645786*^9, 
   3.811369976796114*^9}, 3.811370133251605*^9, {3.8113705775489197`*^9, 
   3.811370588952215*^9}, 3.811370657095656*^9, 3.811370704362653*^9, {
   3.811370736885984*^9, 3.811370874757669*^9}, {3.8113709068264093`*^9, 
   3.8113709211731663`*^9}, {3.811370962507895*^9, 3.81137134997831*^9}, {
   3.811371422807564*^9, 3.811371460610381*^9}, 3.811372036831087*^9, {
   3.811372107941841*^9, 3.811372127211347*^9}, {3.811372184684161*^9, 
   3.8113722165472727`*^9}, 3.811372376208582*^9, {3.811396130438902*^9, 
   3.811396156862977*^9}, {3.811396314283573*^9, 3.81139633527975*^9}, {
   3.811396415355516*^9, 3.811396417308641*^9}, {3.811397115428546*^9, 
   3.811397127552417*^9}, {3.8115110353947763`*^9, 3.811511083120736*^9}, {
   3.811511297631659*^9, 3.8115113019056683`*^9}, {3.811511442576209*^9, 
   3.811511444302491*^9}, {3.819972404764887*^9, 3.819972425129369*^9}, {
   3.8199727469968357`*^9, 3.819972800322806*^9}, {3.821383619573398*^9, 
   3.821383653908502*^9}, {3.821383894438102*^9, 3.821383920866461*^9}, {
   3.821383998934729*^9, 3.821384011074986*^9}, {3.821527497539547*^9, 
   3.8215275622390223`*^9}, {3.82152760311217*^9, 3.8215277864581747`*^9}, {
   3.821545960343237*^9, 3.821545966397317*^9}, {3.8215520833922033`*^9, 
   3.821552184176848*^9}, {3.8215528181436167`*^9, 3.821552904560958*^9}, {
   3.8215533264762278`*^9, 3.821553333544608*^9}, {3.821553368595373*^9, 
   3.8215533909005613`*^9}, 3.821553456672409*^9, {3.821553543274877*^9, 
   3.8215536659071083`*^9}, {3.821553911080058*^9, 3.821553949417842*^9}, {
   3.821554034422511*^9, 3.821554039468196*^9}, {3.8215540807827272`*^9, 
   3.821554085030884*^9}, {3.8215543984301157`*^9, 3.82155449005525*^9}, {
   3.821554546021667*^9, 3.821554598093732*^9}, {3.8215546582386703`*^9, 
   3.82155466409656*^9}, {3.821554739945734*^9, 3.8215547643780737`*^9}, 
   3.8215548108945017`*^9, {3.821554846917315*^9, 3.8215548569417048`*^9}, {
   3.821554907280796*^9, 3.821555009580038*^9}, {3.821555046001013*^9, 
   3.821555052689122*^9}, {3.8215551056007423`*^9, 3.821555106923905*^9}, {
   3.821555166678748*^9, 3.821555218294297*^9}, {3.821555253806837*^9, 
   3.821555460479651*^9}, {3.821555547418087*^9, 3.8215556084540462`*^9}, {
   3.821555772102035*^9, 3.821555772636647*^9}, 3.821555822831011*^9, {
   3.821555858682582*^9, 3.821555890639995*^9}, {3.8215559404480658`*^9, 
   3.821555940985145*^9}, {3.821556021809824*^9, 3.821556122975507*^9}, {
   3.8215568949595213`*^9, 3.8215569420376043`*^9}, {3.821557004623836*^9, 
   3.821557006640044*^9}, {3.821557451309537*^9, 3.8215574572197647`*^9}, {
   3.821557493774048*^9, 3.821557519200095*^9}, {3.821557587578684*^9, 
   3.821557620559826*^9}, {3.821559559980604*^9, 3.821559578261718*^9}, {
   3.821560256729252*^9, 3.821560261867882*^9}, {3.8215604060236397`*^9, 
   3.821560415626102*^9}, 3.8216971789863787`*^9, {3.821697210524262*^9, 
   3.821697295350274*^9}, {3.8216973295736628`*^9, 3.821697365959618*^9}, {
   3.821697424032236*^9, 3.821697442622551*^9}, {3.8216975132796173`*^9, 
   3.821697557337269*^9}, {3.82169766189275*^9, 3.821697674992796*^9}, {
   3.82169775026655*^9, 3.821697752499094*^9}, {3.821697833395197*^9, 
   3.821697840968608*^9}, {3.821697872670569*^9, 3.8216979060294113`*^9}, {
   3.821698062598176*^9, 3.821698068316346*^9}, {3.8216988911898613`*^9, 
   3.821698913161006*^9}, {3.8216990915233393`*^9, 3.821699129528756*^9}, {
   3.821699485793252*^9, 3.821699509374078*^9}, {3.821699547846013*^9, 
   3.821699592907062*^9}, {3.821699647266687*^9, 3.821699662557581*^9}, {
   3.821699711300713*^9, 3.821699830741921*^9}, {3.821699925520686*^9, 
   3.821699935223259*^9}, {3.821700035334193*^9, 3.8217000546932077`*^9}, 
   3.821700105462514*^9, {3.821700405426812*^9, 3.8217004082456617`*^9}, {
   3.82170045579848*^9, 3.821700472284075*^9}, {3.82170053527645*^9, 
   3.821700540956986*^9}, {3.821700618699944*^9, 3.821700629580792*^9}, {
   3.821700705842573*^9, 3.8217007221169367`*^9}, {3.821700787019331*^9, 
   3.821700791504169*^9}, {3.821700839549963*^9, 3.8217008397114573`*^9}, {
   3.821700887925356*^9, 3.821700910237979*^9}, {3.8217009438437147`*^9, 
   3.8217009441465673`*^9}, {3.821701079108657*^9, 3.821701123905602*^9}, {
   3.821701334085968*^9, 3.821701336498571*^9}, {3.821701676319189*^9, 
   3.821701706068982*^9}, {3.821701746565051*^9, 3.821701827156595*^9}, {
   3.821701897810204*^9, 3.82170189824105*^9}, {3.821702039848078*^9, 
   3.8217020642008133`*^9}, {3.821702246480979*^9, 3.82170226745653*^9}, {
   3.821703499345848*^9, 3.821703520477355*^9}, {3.821703594483774*^9, 
   3.821703600993409*^9}, {3.821871908114887*^9, 3.821871932393404*^9}, {
   3.822134394711423*^9, 3.8221343966989717`*^9}, {3.822134476654635*^9, 
   3.822134479352993*^9}, {3.822134838699724*^9, 3.8221348773114233`*^9}, {
   3.822134915574871*^9, 3.822134916258856*^9}, {3.822659316224759*^9, 
   3.822659633769617*^9}, {3.8226596653978863`*^9, 3.822659668081723*^9}, {
   3.8226597160236263`*^9, 3.822659718471943*^9}, {3.822660092846031*^9, 
   3.8226601076853228`*^9}, {3.822661209215665*^9, 3.822661214441032*^9}, {
   3.8226636610260553`*^9, 3.822663822974513*^9}, {3.8226638545780907`*^9, 
   3.82266415580435*^9}, {3.8283659365941467`*^9, 3.828365967093285*^9}, {
   3.82836606609379*^9, 3.828366068175572*^9}, {3.828366136131261*^9, 
   3.828366231130533*^9}, {3.82836627474079*^9, 3.828366350921998*^9}, {
   3.828366484790246*^9, 3.828366489439749*^9}, {3.828366701757749*^9, 
   3.828366702086719*^9}, {3.828366773110509*^9, 3.8283667925707493`*^9}, {
   3.828366833408633*^9, 3.828366849001809*^9}, {3.828366885296224*^9, 
   3.828366890552311*^9}, {3.828366933189554*^9, 3.828366934728437*^9}, {
   3.828367000075939*^9, 3.828367054313861*^9}, {3.828367085149598*^9, 
   3.8283670867650833`*^9}, 3.8284447902491703`*^9, {3.828445852735166*^9, 
   3.828445916053649*^9}, {3.828445950491843*^9, 3.8284459523798523`*^9}, {
   3.828446001422131*^9, 3.828446059174447*^9}, {3.828446120167498*^9, 
   3.828446157195815*^9}, {3.828446208107833*^9, 3.828446212508924*^9}, 
   3.82844978682195*^9, 3.828450299347279*^9, {3.828623309812107*^9, 
   3.828623327013835*^9}, {3.828623377790348*^9, 3.828623431120603*^9}, {
   3.8286234652295847`*^9, 3.8286234717214317`*^9}, {3.828623504900797*^9, 
   3.828623508613202*^9}, {3.828623540776959*^9, 3.828623602482654*^9}, {
   3.828623689295101*^9, 3.828623781051309*^9}, {3.828623867557798*^9, 
   3.828623869521328*^9}, {3.828623921587038*^9, 3.828623923916294*^9}, {
   3.828624000969604*^9, 3.828624003241021*^9}, 3.82862413337606*^9, {
   3.8286241871615953`*^9, 3.8286242192582693`*^9}, {3.828624382809392*^9, 
   3.8286243847895937`*^9}, {3.828625070181508*^9, 3.8286252796363153`*^9}, {
   3.8286253238923483`*^9, 3.828625354189242*^9}, {3.828625468578784*^9, 
   3.82862550976023*^9}, {3.828625552683189*^9, 3.828625555321953*^9}, {
   3.82862562657944*^9, 3.8286256272250338`*^9}, {3.828625798560597*^9, 
   3.828625807434437*^9}, {3.828625876319819*^9, 3.828625932026083*^9}, {
   3.828626083062701*^9, 3.828626083646165*^9}, {3.828626115957239*^9, 
   3.8286261624016953`*^9}, {3.828626568117029*^9, 3.82862662102365*^9}, 
   3.828626684595173*^9, {3.828627332792556*^9, 3.828627333470051*^9}, {
   3.828627632888001*^9, 3.828627655700663*^9}, {3.828627798239904*^9, 
   3.828627798981629*^9}, {3.828627846106022*^9, 3.82862784686147*^9}, {
   3.8286278823878117`*^9, 3.828627882646585*^9}, {3.8286315196878443`*^9, 
   3.828631632675915*^9}, 3.828631665667115*^9, {3.828631701747294*^9, 
   3.8286317146754513`*^9}, {3.828631753004345*^9, 3.828631857527323*^9}, {
   3.8286319054186573`*^9, 3.828631909184875*^9}, {3.828631942610798*^9, 
   3.828631991123185*^9}, {3.828632111517281*^9, 3.8286321118227673`*^9}, {
   3.828632205676639*^9, 3.828632265377141*^9}, {3.828632298435219*^9, 
   3.8286323279779167`*^9}, {3.828632916171034*^9, 3.828632961503092*^9}, {
   3.828633034375785*^9, 3.828633122665577*^9}, {3.828633222570014*^9, 
   3.828633252201777*^9}, {3.82863329963484*^9, 3.828633383817505*^9}, {
   3.828633459793364*^9, 3.828633568535701*^9}, {3.828633603224308*^9, 
   3.828633671965501*^9}, {3.828633799336039*^9, 3.8286338037475567`*^9}, {
   3.8286912150404673`*^9, 3.828691304097246*^9}, {3.828691442680833*^9, 
   3.828691447887298*^9}, {3.828691516888988*^9, 3.8286916331397533`*^9}, 
   3.828691665212617*^9, {3.828691696834241*^9, 3.8286917042069073`*^9}, {
   3.828691812443635*^9, 3.828691925067841*^9}, {3.8286922462351847`*^9, 
   3.828692247421382*^9}, {3.828692988731762*^9, 3.828692988934184*^9}, {
   3.828693209551301*^9, 3.8286932362678003`*^9}, {3.828693462869606*^9, 
   3.828693475155657*^9}, {3.828693556401862*^9, 3.828693606220245*^9}, 
   3.828958771403515*^9, {3.8289589971238403`*^9, 3.828958999789653*^9}, 
   3.828968571378173*^9, {3.82896877337962*^9, 3.8289688405502663`*^9}, {
   3.828968879148712*^9, 3.828968949744637*^9}, 3.828969032305771*^9, {
   3.828969064383651*^9, 3.828969077800723*^9}, {3.828969111486328*^9, 
   3.82896911785251*^9}, {3.828969150344068*^9, 3.828969220495357*^9}, {
   3.8289692699789248`*^9, 3.8289692845944977`*^9}, {3.82896972086712*^9, 
   3.828969799118822*^9}, {3.828969859021935*^9, 3.82896990221987*^9}, {
   3.828969999620495*^9, 3.828970055941536*^9}, {3.828970381768157*^9, 
   3.828970454622592*^9}, {3.828970489212139*^9, 3.828970492717561*^9}, {
   3.8289705814732437`*^9, 3.82897062221708*^9}, {3.828970665159409*^9, 
   3.8289707207663803`*^9}, {3.828970759866469*^9, 3.828970819565427*^9}, {
   3.828970905591723*^9, 3.8289709817601643`*^9}, {3.8289710184793463`*^9, 
   3.828971085662178*^9}, {3.828971135941955*^9, 3.8289711903166513`*^9}, {
   3.82897128533743*^9, 3.8289713531403093`*^9}, {3.828971401333365*^9, 
   3.828971430220323*^9}, {3.828971465085593*^9, 3.828971493537714*^9}, {
   3.828972133467676*^9, 3.8289721653107367`*^9}, {3.828975284308922*^9, 
   3.82897530631208*^9}, {3.8289753893290653`*^9, 3.828975389579472*^9}, {
   3.828975490519841*^9, 3.828975492061522*^9}, {3.82897556853022*^9, 
   3.828975606131207*^9}, {3.828975653531551*^9, 3.828975672113163*^9}, {
   3.82897570643537*^9, 3.828975756205093*^9}, {3.8289759787088013`*^9, 
   3.828975987577792*^9}, {3.828976027712019*^9, 3.8289760332092333`*^9}, {
   3.8289763040997543`*^9, 3.828976337162262*^9}, {3.828976586081197*^9, 
   3.82897659598627*^9}, {3.828976761483396*^9, 3.8289767842008333`*^9}, {
   3.828977212733067*^9, 3.828977250536336*^9}, 3.828977282375534*^9, {
   3.82897732456698*^9, 3.828977327161128*^9}, {3.8289778529362593`*^9, 
   3.8289780997237473`*^9}, {3.8289781360542717`*^9, 3.828978211680458*^9}, {
   3.8289782491670847`*^9, 3.828978333069727*^9}, {3.828979045318119*^9, 
   3.828979048747479*^9}, {3.828979080112998*^9, 3.828979140008308*^9}, {
   3.8289839093150873`*^9, 3.828983957329616*^9}, {3.82898466806603*^9, 
   3.828984736496853*^9}, {3.828984817040049*^9, 3.8289848181124763`*^9}, {
   3.828984994591078*^9, 3.8289850178386517`*^9}, {3.8289850540427628`*^9, 
   3.828985075046143*^9}, {3.828985113584878*^9, 3.828985113820435*^9}, {
   3.828985180851419*^9, 3.828985209753847*^9}, {3.82898525515128*^9, 
   3.82898529884932*^9}, {3.828985331776268*^9, 3.828985332251186*^9}, {
   3.828985437057311*^9, 3.828985562696899*^9}, {3.82898572137693*^9, 
   3.828985723292872*^9}, {3.828986376437615*^9, 3.828986413883851*^9}, {
   3.828997313283072*^9, 3.8289973349112577`*^9}, {3.8289974167148867`*^9, 
   3.82899741702107*^9}, {3.82905992612628*^9, 3.829059944278088*^9}, {
   3.829059976042292*^9, 3.829060023233698*^9}, {3.829060167974934*^9, 
   3.829060205025858*^9}, {3.829060252308668*^9, 3.8290602542046824`*^9}, {
   3.82906029391087*^9, 3.8290603159993067`*^9}, {3.829060449561636*^9, 
   3.829060485553246*^9}, {3.829060524010488*^9, 3.829060549838829*^9}, {
   3.8290606440014877`*^9, 3.829060660977562*^9}, {3.829060695179389*^9, 
   3.8290607207029057`*^9}, {3.8290609417412863`*^9, 
   3.8290609484175863`*^9}, {3.8290610083181963`*^9, 
   3.8290610232461853`*^9}, {3.82906108189086*^9, 3.8290612208437443`*^9}, {
   3.829061264042342*^9, 3.8290612868961143`*^9}, {3.829061331071512*^9, 
   3.829061333132333*^9}, {3.82906146430514*^9, 3.829061503005909*^9}, {
   3.829061537632847*^9, 3.829061547188356*^9}, {3.829062710331834*^9, 
   3.829062710924631*^9}, {3.829062794358156*^9, 3.829062795334996*^9}, 
   3.8290666185452833`*^9, {3.8291294085119257`*^9, 3.829129429600832*^9}, {
   3.829131791247933*^9, 3.829131919101158*^9}, {3.8291320216105413`*^9, 
   3.829132030252046*^9}, {3.829132152666135*^9, 3.8291321841337147`*^9}, {
   3.829135082625277*^9, 3.8291350863328323`*^9}, {3.8291351895438623`*^9, 
   3.829135201814972*^9}, {3.829135333955228*^9, 3.8291354607255573`*^9}, {
   3.8291355217040997`*^9, 3.829135537785857*^9}, 3.829135569495803*^9, {
   3.8291356029926777`*^9, 3.8291356057894583`*^9}, {3.829135637985877*^9, 
   3.8291356388049517`*^9}, {3.829135742286317*^9, 3.82913574580101*^9}, {
   3.829135840395068*^9, 3.829135874323613*^9}, {3.829135922998567*^9, 
   3.829135933229301*^9}, {3.829135968708824*^9, 3.829135974965856*^9}, {
   3.829136157325781*^9, 3.829136181736047*^9}, {3.829136217438463*^9, 
   3.829136239692443*^9}, {3.829136320751346*^9, 3.829136333319344*^9}, {
   3.829136439665554*^9, 3.829136455256198*^9}, {3.8291364892394953`*^9, 
   3.829136490380376*^9}, {3.82913656374612*^9, 3.8291365752281218`*^9}, {
   3.829136615080393*^9, 3.829136615955408*^9}, 3.829136688177074*^9, {
   3.829136761151394*^9, 3.829136809132042*^9}, {3.829136865693371*^9, 
   3.82913688347119*^9}, {3.829136956752308*^9, 3.8291370052705173`*^9}, {
   3.829137059710188*^9, 3.829137060026402*^9}, {3.8291371285930862`*^9, 
   3.8291372236689*^9}, {3.829137417933422*^9, 3.8291374582404213`*^9}, 
   3.8291375100162277`*^9, {3.82913760862479*^9, 3.829137640595727*^9}, {
   3.829138240668919*^9, 3.829138259137096*^9}, {3.829138335279778*^9, 
   3.829138346607201*^9}, {3.829138432171776*^9, 3.8291385032807283`*^9}, {
   3.829138556978429*^9, 3.829138573486547*^9}, {3.829138644414242*^9, 
   3.8291386870330267`*^9}, {3.8291388613707743`*^9, 3.829138861610224*^9}, {
   3.829138990337151*^9, 3.829138994410646*^9}, 3.82913905429524*^9, {
   3.829139219132772*^9, 3.8291392201389914`*^9}, {3.829139290053072*^9, 
   3.829139291303027*^9}, {3.82913932652962*^9, 3.829139327952462*^9}, {
   3.829139366795146*^9, 3.8291394175757437`*^9}, {3.829139537833705*^9, 
   3.829139585002554*^9}, {3.8291403091439962`*^9, 3.829140317036455*^9}, {
   3.829140348885623*^9, 3.829140349529142*^9}, {3.829140436289318*^9, 
   3.829140454641777*^9}, {3.829140517359579*^9, 3.829140566709488*^9}, {
   3.829140635131865*^9, 3.82914063688673*^9}, {3.829140685676643*^9, 
   3.829140690238096*^9}, {3.82914163382308*^9, 3.829141660015243*^9}, {
   3.829141736123292*^9, 3.82914175290832*^9}, {3.829142518740699*^9, 
   3.8291425190566883`*^9}, {3.8291425614670677`*^9, 3.829142571781281*^9}, {
   3.829143022302446*^9, 3.829143074820953*^9}, {3.8291432044921913`*^9, 
   3.829143215632415*^9}, {3.829143286598062*^9, 3.829143288056827*^9}, {
   3.829143322461734*^9, 3.8291433525778103`*^9}, {3.82914340541365*^9, 
   3.829143456062649*^9}, {3.829143516791788*^9, 3.829143540590625*^9}, {
   3.8291435714312363`*^9, 3.829143575551816*^9}, {3.8291436691908493`*^9, 
   3.82914371161342*^9}, {3.829143746765212*^9, 3.829143763847926*^9}, {
   3.829144255753015*^9, 3.829144280861189*^9}, 3.8291443210891447`*^9, {
   3.8291443831925573`*^9, 3.829144583325595*^9}, {3.829144614676371*^9, 
   3.8291446214367867`*^9}, {3.829144660730427*^9, 3.829144701824273*^9}, {
   3.829144748872891*^9, 3.829144778546053*^9}, {3.829144874517744*^9, 
   3.829144920742373*^9}, {3.829144994384192*^9, 3.829145114219282*^9}, {
   3.829145149413851*^9, 3.829145184225089*^9}, {3.829145221653695*^9, 
   3.829145239548831*^9}, {3.8291452928670673`*^9, 3.829145294700471*^9}, {
   3.829145338881007*^9, 3.829145365646327*^9}, {3.829145425146912*^9, 
   3.8291454368305073`*^9}, {3.82914552630408*^9, 3.829145528170261*^9}, {
   3.8291458091950397`*^9, 3.829145829439763*^9}, {3.829145875444038*^9, 
   3.829145901814087*^9}, {3.829145966175956*^9, 3.8291459738877687`*^9}, {
   3.829147829528571*^9, 3.829147831980936*^9}, {3.829167214562613*^9, 
   3.829167216387924*^9}, {3.8291673948089237`*^9, 3.8291674566443863`*^9}, {
   3.829167498823934*^9, 3.829167582360977*^9}, {3.829167631231867*^9, 
   3.82916763555795*^9}, {3.8291676953774014`*^9, 3.829167697177766*^9}, {
   3.829167779521348*^9, 3.829167783280033*^9}, {3.829167822022242*^9, 
   3.8291678275244017`*^9}, {3.829167942189599*^9, 3.829167954585256*^9}, {
   3.829167988742477*^9, 3.829167999541745*^9}, {3.8292229477636633`*^9, 
   3.829222951077491*^9}, {3.829223235508634*^9, 3.829223277978649*^9}, {
   3.82922424956886*^9, 3.829224251494677*^9}, {3.829224335368545*^9, 
   3.829224336070661*^9}, {3.8292243897688828`*^9, 3.8292243902829437`*^9}, {
   3.829996801216456*^9, 3.8299968512717667`*^9}, {3.829996963438251*^9, 
   3.82999696419501*^9}, {3.829997017910828*^9, 3.829997018108526*^9}, {
   3.830779467635528*^9, 3.830779468179008*^9}, {3.8307795036471*^9, 
   3.830779505829089*^9}, {3.8352651189572277`*^9, 3.8352651199616137`*^9}, {
   3.8366527928784657`*^9, 3.836652850248983*^9}, {3.83665288997806*^9, 
   3.836653084057473*^9}, {3.836653228863523*^9, 3.8366532291494904`*^9}, {
   3.836653550943749*^9, 3.836653554290069*^9}, {3.836653817052318*^9, 
   3.836653817468316*^9}, {3.842007541514635*^9, 3.842007544758737*^9}, {
   3.8420077559525948`*^9, 3.842007773537715*^9}, {3.8420078484069357`*^9, 
   3.8420078496942987`*^9}, {3.842009045536179*^9, 3.842009046332206*^9}, {
   3.843214831078837*^9, 3.8432148535521193`*^9}, {3.8432148858582487`*^9, 
   3.8432149110506372`*^9}, {3.843214945332017*^9, 3.843214945703945*^9}, {
   3.843214991746457*^9, 3.8432149943736*^9}, {3.8432150720451117`*^9, 
   3.8432150739454193`*^9}, {3.8432151132087107`*^9, 3.843215118954956*^9}, 
   3.843215164189558*^9, {3.843851417816324*^9, 3.8438514320684223`*^9}, {
   3.8438515185080557`*^9, 3.84385151946459*^9}, {3.843905554266337*^9, 
   3.8439055994391003`*^9}, {3.843905646363144*^9, 3.843905706176034*^9}, {
   3.843906834854266*^9, 3.843906903764484*^9}, {3.8439071089807167`*^9, 
   3.843907167786203*^9}, 3.843907206130343*^9, {3.843907238428941*^9, 
   3.8439072765938787`*^9}, {3.8439073345970087`*^9, 3.843907391674399*^9}, {
   3.843907454002359*^9, 3.843907480380535*^9}, {3.843928906494567*^9, 
   3.843928921921358*^9}, {3.843928976342657*^9, 3.843928979596341*^9}, {
   3.843929030509818*^9, 3.84392909096159*^9}, {3.843929225060083*^9, 
   3.8439293243436203`*^9}, {3.843929364454129*^9, 3.843929382496037*^9}, {
   3.84392948329109*^9, 3.8439295305173817`*^9}, {3.843929864869102*^9, 
   3.84392987552073*^9}, {3.8439299170408382`*^9, 3.843929927124514*^9}, {
   3.843931072819108*^9, 3.843931077236264*^9}, {3.843990383708579*^9, 
   3.8439904084635057`*^9}, {3.8440187850537453`*^9, 3.844019000218051*^9}, {
   3.844019058966909*^9, 3.844019065352799*^9}, {3.8440191081171103`*^9, 
   3.844019190521571*^9}, {3.844019268173436*^9, 3.844019297873851*^9}, {
   3.844019346780654*^9, 3.84401935247464*^9}, {3.844019418652297*^9, 
   3.844019428663088*^9}, {3.844019472674691*^9, 3.844019474177472*^9}, {
   3.84401950656597*^9, 3.8440195910694437`*^9}, {3.844019627833989*^9, 
   3.844019629674324*^9}, {3.8450532662917356`*^9, 3.84505329420986*^9}, {
   3.845053393965589*^9, 3.845053395733391*^9}, {3.850842180820305*^9, 
   3.8508422181265078`*^9}, {3.850842299717308*^9, 3.850842300135851*^9}, {
   3.850842444661104*^9, 3.850842551830474*^9}, {3.850842597807783*^9, 
   3.850842625607367*^9}, {3.850842753965517*^9, 3.850842757175748*^9}, {
   3.850842787190398*^9, 3.850842826624424*^9}, {3.850842870090788*^9, 
   3.850842976451613*^9}, {3.850843057865901*^9, 3.8508432336651382`*^9}, {
   3.850843285606079*^9, 3.850843465370225*^9}, {3.85084349937329*^9, 
   3.850843546564254*^9}, {3.8508436541331053`*^9, 3.85084457257546*^9}, {
   3.850844653782028*^9, 3.850844878593102*^9}, {3.850845004829015*^9, 
   3.850845006428925*^9}, {3.850845077925411*^9, 3.850845170220195*^9}, 
   3.8509126738419333`*^9, {3.850915369053811*^9, 3.850915443194605*^9}, {
   3.8509154887119865`*^9, 3.850915519809098*^9}, {3.850915567428464*^9, 
   3.8509158114549456`*^9}, {3.8510809376231713`*^9, 3.851080971056976*^9}, {
   3.8510810117107697`*^9, 3.85108102710192*^9}, 3.851081195761283*^9, {
   3.8510818259919434`*^9, 3.8510818964754276`*^9}, 3.851082304448047*^9, {
   3.851082397288247*^9, 3.851082402647868*^9}, {3.8510824660434866`*^9, 
   3.8510824913061547`*^9}, {3.851082541226771*^9, 3.851082576577979*^9}, {
   3.85108262009871*^9, 3.851082621807715*^9}, {3.8510826793919287`*^9, 
   3.851082694247633*^9}, {3.851082759220312*^9, 
   3.851082765926175*^9}},ExpressionUUID->"08cfd9e0-233a-4f11-9580-\
b699b3e8e9f9"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3QuMHdd953lik93JIF5jYiySYPIwNoQNxwhmA2yyk6wxCBaJwSwmSLI2
kl3B8GBjj2IQCCPTelgPWmyyZUotdpMyKblJRbRESnKLMtWy/JDYIim11HqS
lG3Z1stSW6b1sphxYkt+JCat2n/uP/3fw3Oq6tat9636flBo3K5bt+rc6lt9
61fnUf/zB855z1//d6tWrTr35+THe/7qo//HRz7yVxe999/JL3/xt+eu/dDf
nv1f/8+/Pe/sD539kd/7wM/IzJ0/u2rVW//7Vav+5XEEAAAAAAAAAAAAAAAA
AAAAABhnXwAAAAAAAHn94MenNVzLAyYmJiYmJiYmJiYmJiYmplEnL1w3XX8O
AAAAAMD4IVwDAAAAAFAQ4RoAAAAAgIII1wAAAAAAFES4BgAAAACgIMI1AAAA
AAAFEa4BAAAAACiIcA0AAAAAQEGEawAAAAAACiJcAwAAAABQEOEaAAAAAICC
CNcAAAAAABREuAYAAAAAoCDCNQAAAAAABRGuAQAAAAA998bACy+8cPz48UMr
5PELA/LU0DUQrgEAAAAAfSbZ+ZmBLySQp4bma8I1AAAAAKDPCNcAAAAAABT0
wgsvuFH6eyvcmbJM+koI1wAAAACAPjt+/PjQcC3LpK+EcA0AAAAA6LNDhw55
sdojT8ky6SshXAMAAAAA+oxwDQAAAABAQYRrAAAAAAAKos81AAAAAAAFMVo4
AAAAAAAFEa4BAAAAACjojTfeeGbgCwnkKVkmfSWEawAAAABAz70x8MILLxw/
fvzQCnn8wsDQZB0RrgEAAAAAKIxwDQAAAABAQYRrAAAAAAAKIlwDAAAAAFAQ
4RpAT5w6deqfAAAAgLzkfDLlbJNwDaAnvvnNbx4HAAAA8vrWt76VcrZJuAbQ
E88///zTTz/9QwAAAGB0Tz755IkTJ1LONgnXAHrim9/85nPPPdd0KQAAADCW
vvGNb1BzDQAR4RoAAAAFEK4BQBGuAQAAkBvhGgAU4RoAAAC5Ea4BQBGuAQAA
kBvhGgAU4RoAAAC5Ea4BQBGuAQAAkBvhGgAU4RoAAAC5Ea4XUjVdOqByHAKG
cA0AAIDcCNfr16+/9NJLJ+Ocf/75TZcOqJwk6PPOOy/2EJiYmGi6dLUiXAMA
ACA3wrWE68XFxefibNu2renSAZWTcC05OvYQOHbsWNOlqxXhGgAAALkRrgnX
6DnCtSFcAwAAILf2hOulpaVVZyq4wqmpKVmnPl69erX8GrsY4Ro9lztc2zEr
x5fOkaPMjt/l5WWZMzc3p7/aAbh27VqdY4dnaM2aNfasrEeXl5nuMrJR9x9F
uFi46aEI1wAAAMitPeFayRmynajnJmfvsh4L13qiLnNkfrgw4Ro9lyNcazR2
87I+1kPPXdIOZ32J0MNQg3m4Zk3EbriWx7pOeWBblAeypD7QNB0u5m76mmuu
yXK9jnANAACA3LoXru2cX8O1nMnrSXh0Zl22IVyj50YN13MD3hwL10lLTg24
6dtN0B47VN1rYjLHaqXdWmytJfcWCzcdFjtEuAYAAEBu3QvXdvauVVpui9DY
yuuUcD09PS0vvxzotA0bNmzatKlIuLaYLA+0JbYeaO7lLA3gbiiWZYaGa7d+
XI7f2HAt/zHCxcJNE64BAABQqbEO19qyVE+zrfelnXXL6bSsyuun6f0aDQvX
c1+459aD9zMxdXjads21ExMTI4VrNxRrtvWWkZkaadsTruVXwjUAAACqM9bh
2iqp3Topd2wlPeV2a6vDlaeE65mZbY+dfIOJqdvTDfMHN2duFm6dpqOVMcS8
TtZ29HmVxfqr1yw89rVRcrNwe+yF63CxcNNRapxXhGsAAADkNl7h2sYH1nNp
ffzud7/bHbLYrbnWE2kbbSlKqLnetWsX4Zqpt1NKuN63b194GLpDBSalY61N
dg9nPWw1X0eDCJxypHtD/dtIZZaXbSwFu3rmLRZu2q3dTkK4BgAAQG5jFK7t
TN7GNYqtuXb7XLvn5/rysM/1Qw89JPn65ptvJlwz9XNKCtcHDhyQQyM8Eu1w
s4tddmnL5liMtfthuUeoe6+u2ITuHrx2jy3v4NVt2b+LcDFv0/S5BgAAQKXa
Fq497om3ewtsPaOODdcp9VNeX1GTlK+np6fXrVt34NCDTEwdnrbPXhf2udZk
ffjw4djjaGhKzS5sTFIRwjUAAAAq1dpwbfVQVgsW3qY2NlxHCXVh7mhIoQcf
fDDM1xKut2zZchnQaZdccok3WnhKsrZjM73zckZZmmqXQgc/TGrEbgjXAAAA
yK214ToaZGRtQRr2uFRJ4TqfMF9zn2v0gXef69tuuy0lWXcb4RoAAAC5tTlc
h7y67HLDdbSSr2+66SbCNfrDDdd9TtYR4RoAAAAFjFe4roH2v9Z8TbhGH1i4
7nmyjgjXAAAAKIBwHbJ8TbhGH2i4JllHhGsAAAAUQLiOpfn60ksvbbogQOUk
XF9yySUk64hwDQAAgAII10k0XzddCqByEq5J1opwDQAAgNwI1wCgCNcAAADI
jXANAIpwDQAAgNwI1wCgCNcAAADIjXANAIpwDQAAgNwI1wCgCNcAAADIjXAN
AIpwDQAAgNwI1wCgCNcAAADIjXANAIpwDQAAgNwI1wCgCNcAAADIjXANAIpw
DQAAgNwI1wCgCNcAAADIjXANAIpwDQAAgNwI1wCgCNcAAADIjXANAIpwDQAA
gNwI1wCgCNcAAADIjXD92VRNlw6o3MLCAoeAIlwDAAAgN8L1+vXrJycnr4xz
4YUXNl06oHISri+44ILYQ2DLli1Nl65WhGsAAADkRriWcL24uPhcnG3btjVd
OqByEq4nJydjD4Fjx441XbpaEa4BAACQG+GacI2eI1wbwjUAAAByG7twPTU1
tWqFPE5ZbGlpyX5du3at+6uLcI2eKzdcr169Wg9Pd+by8nL6YZvvVaUjXAMA
ACC3cQnXqweiIDXHWrNmTWy4npubk7N0+ekuTLhGz+UI13IcxR6Gctzp8SUP
5DC0+bJw+qWwLK+SX730XTrCNQAAAHIbl3Btp9xhuJbgrHVblpplTlLN9dyA
+3LCNXpu1HAdHkTGjcZuENZLW0kFyP6qlE2XgnANAACA3MYxXFtLUa3YspNt
PS3XE3J3MVs4GjFcT09Pb9y48WNAp330ox+dmJgoPVxrUxN7iR2JRV5FuAYA
AEBrjWO4dqukZb6boJeXl2UB/Vm85lrC9fyRR+5YPM7E1OFpx+7rRw3XSV0z
kmKy8Rp+j/qq9Brw4gjXAAAAyK0D4TpsJR4uli9cz8xse+zkG0xM3Z5umD+4
OXOzcDmO9BCLBm1FvJYhQ2Py8vJyOH+kV6UMTlgc4RoAAAC5jXu4ll/tVF/l
CNc33HAD4Zqpt1NKuP70pz8dHowpgwrKgWZDk+mR6LUDDw/YkV6VPjBacYRr
AAAA5Dbu4TpyWobrIOF2lp4xXD/22GNJ+ZpwzdSHKSlcS7KWQyM8GNM7PutN
tayiWWOyjYGg8+VQXV5eHvVVQzddHOEaAAAAuY1duC4o9uQ8KV9vnZ5et27d
zXfczcTU4Wnrjk9uDPpca7KOraEunnBzH86EawAAALTWuIRru891EbH3uVax
+Xp6enr79u3bgE6bmJjYtGlTxmQdDXpAJ93nOovcTbv1PtdelXe5CNcAAADI
bVzCdQ3CfL2N+1yjB7z7XKcn624jXAMAACA3wrXLy9eEa/SBG677nKwjwjUA
AAAKIFx73HxNuEYfWLjuebKOCNcAAAAogHAdsnxNuEYfaLgmWUeEawAAABRA
uI6l+frSSy9tuiBA5SRcX3zxxSTriHANAACAAgjXAKAI1wAAAMiNcA0AinAN
AACA3AjXAKAI1wAAAMiNcA0AinANAACA3AjXAKAI1wAAAMiNcA0AinANAACA
3AjXAKAI1wAAAMiNcA0AinANAACA3AjXAKAI1wAAAMiNcA0AinANAACA3AjX
AKAI1wAAAMiNcA0AinANAACA3AjXAKAI1wAAAMiNcA0AinANAACA3AjXAKAI
1wAAAMiNcA0AinANAACA3AjXc6maLh1QuYWFBQ4BRbgGAABAboTr9evXX3HF
FZ+Ic9FFFzVdOqByEq4vuOCC2ENgenq66dLVinANAACA3AjXEq4XFxefi7Nt
27amSwdUTsL15ORk7CFw7NixpktXK8I1AAAAciNcE67Rc4RrQ7gGAABAbm0I
11NTU2vWrPFmrlq1amlpqfRXhQjX6Lki4Xr16tWrBlKWkUNSl5GFSy14+QjX
AAAAyK0l4VrOut1QPDc3581xrV27dnl5edRXyUvkheF8wjV6Lke41qtYcgzq
iGexV7qMPKsP5AC0x5q4y34rRRGuAQAAkFtLwrVwk69kZJkTG5P1lH7UV9mG
wmcJ1+i5UcO1jSLuBuosSVleZeHaXU97EK4BAACQW0vCtWReOVFfXl6OBvFZ
a7hiY7JWW4/6KhVbeZ0Srqenp88///xzgU77yEc+MjExUTBcZ2nyLct7TU0I
1wAAAOiM9oRrq9XSvJwUk+18Pv1V8li7eXpn72Hj1fRw/YWHvnrnI08wMXV4
unrPTRMTm0YK13qUjRSuwy4bevymv6pmhGsAAADk1p5wHa2cfusZe1K4tnP4
lFdp52tdbO1A+HKTEq5nZrY9dvINJqZuTzfMH9ycuVm4NhHRxxnDtV7p0hYm
HlnVqCMQVopwDQAAgNxaFa7lgQ33nbHmOvZVXvW0tSSPEmqur732WsI1U2+n
lHC9d+/elANWjiwb0EwTd2zPa+u7YXQxGz+hPQjXAAAAyK1V4TqKq5j2zsy9
Ptfhq/bv36/n+fJT51sr1tg+11//+teT8vXMzEzjwYeJqeopKVxLspZDIzxg
3b7SeisuOwA1NXvHrN2uy5bUxehzDQAAgC5pQ7hOYv2mhXsHn6G1XV71tMVw
S9mepHy9devWdevW7bnldiamDk+Xz3xi48aNscn60UcfDY+XoaE45bZcI62n
foRrAAAA5NbmcB0NztLXrl3rddgMW5l6rLVqNEjoeqpvD2LF5uvp6endu3fP
Ap122WWXbdq0KWOyjlaueiX1lc7Y2Fvvc51+INePcA0AAIDcWh6uc9NI7jZY
HSrM19znGn3g3ec6PVl3G+EaAAAAuXU1XOfj5WvCNfrADdd9TtYR4RoAAAAF
EK49br4mXKMPLFz3PFlHhGsAAAAUQLgOWb4mXKMPNFyTrCPCNQAAAAogXMfS
fL1hw4amCwJUTsL1RRddRLKOCNcAAAAogHANAIpwDQAAgNwI1wCgCNcAAADI
jXANAIpwDQAAgNwI1wCgCNcAAADIjXANAIpwDQAAgNwI1wCgCNcAAADIjXAN
AIpwDQAAgNwI1wCgCNcAAADIjXANAIpwDQAAgNwI1wCgCNcAAADIjXANAIpw
DQAAgNwI1wCgCNcAAADIjXANAIpwDQAAgNwI1wCgCNcAAADIjXANAIpwDQAA
gNwI1wCgCNcAAADIjXDdbXtSNV06tMLCwgIfEkW4BgAAQG6E625bv3791q1b
d8W59NJLmy4dWkHC9YUXXhj7IdmxY0fTpasV4RoAAAC5Ea67TcK1RKfn4lx9
9dVNlw6tIJ+QycnJ2A/JsWPHmi5drQjXAAAAyI1w3W2EawxFuDaEawAAAOTW
znA9NTW1asXc3FyJC/cN4RpDFQnXq1ev1kPPm7+0tKTz5fAMX2XPystLextl
IFwDAAAgt9aGazn9lgfLy8vhebtZu3atLJBxYXlWlq+itG1GuMZQOcK1HGhy
0Mmhp5ez5MGaNWvs2fQjUZfXB3JI2mNN3OW8pbwI1wAAAMit5eE6GlSNybl6
uIye22dcOFxtRj/96U9Pj7P0cN106dAKd91110jhem5AHriB2s3FFrqHksXc
qm1bc1MI1wAAAMit5eFafiY1HNVq64wLq5Eqr5988klZ87oxlx6umy4dWuGc
c86ZmJgoGK7dQ2/NgDb8Tr+cJYu5CxCuAQAAML5aG671zNw9e/fYU7ELa8PU
sBd2ygpdJ06ckNDxsY99bMeOHTvHWXq4Pnjs6cNfXmbq+TS795aJTZtGCtea
iFPCtV3FSrneJU950Vt+JVwDAABgTLU2XNvZe9LJtp20hwvLT3t27UD4qnT7
9+8/77zzbhp/6eH6sZNvMDHdMH9wc+Zm4XKs2QGVFK5lAUvNsZez9NpXbA8O
97X1I1wDAAAgt5aH6+jMvpwut+baW9g7n7cG5OFTSWZnZzdt2tR0Mi7BBRdc
cNVVVxGumVKmlHC9Z8+elMNTjiwb0EwTtx6AMlN/leMu9oiTmV6y1hfaQApN
IVwDAAAgt/aHa7ca2j0nD/tc68K//uu/rif28lNfaK1Ys/e5lje7bt266667
rulwXNTu3buT8jXhmkmnpHAtyXr9+vXh0eH2jNZbcdkRapfCrM+1HqRemrYb
eNlrLZXTLBwAAABjqp3hOmR9qO3OuSmVXF5lmaVvS9lZbN26VYd7unTMXXLJ
Jeeee26YryVcy7OfvP5mpp5Pl12xdePGjbHJ+itf+Up4aOSIwBlbjBCuAQAA
ML7GJVxHK6MkuV01w8alylqrRk7D1KQWqikWFxdvuummveNvdnY2rL+WcN10
udAKU1NTm84c0CwlWUcrV7qyX6fK2Nhb73Odciu9GhCuAQAAkNsYheuRaAx3
G6z23IkTJzZs2ODmawnXTRcKrbCwsODe5zo9WXcb4RoAAAC5dTVcI+Tla8I1
lBuu+5ysI8I1AAAACiBc94qbrwnXUBaue56sI8I1AAAACiBc943la8I1lIZr
knVEuAYAAEABhOse0nx9ySWXNF0QtIKE6wsvvJBkHRGuAQAAUADhGgAU4RoA
AAC5Ea4BQBGuAQAAkBvhGgAU4RoAAAC5Ea4BQBGuAQAAkBvhGgAU4RoAAAC5
Ea4BQBGuAQAAkBvhGgAU4RoAAAC5Ea4BQBGuAQAAkBvhGgAU4RoAAAC5Ea4B
QBGuAQAAkBvhGgAU4RoAAAC5Ea4BQBGuAQAAkBvhGgAU4RoAAAC5Ea4BQBGu
AQAAkBvhGgAU4RoAAAC5Ea4BQBGuAQAAkBvh+upUTZcOqNzCwgKHgCJcAwAA
IDfC9fr163fu3Hl9nEsvvbTp0gGVk3B90UUXxR4Cs7OzTZeuVoRrAAAA5Ea4
lnC9uLj4XJxt27Y1XTqgchKuJycnYw+BY8eONV26WhGuAQAAkBvhmnCNniNc
G8I1AAAAcqs6XE9NTa1aMTc3l7+ggTVr1pSyHsI1eq5IuF69erUe3eFTa9eu
TT/k5RBeWlrSx8vLy7oeO67ltTpH/ofkelt5EK4BAACQWw3h2s6f5TxZTqHz
lVNO1L3Xjhqu5eWyknA+4Ro9lyNcy7Esx7Uc3Rqf5YF7PMpTGpOTwrUGZzdc
y2M9wOWBpmmJ7e62bLWlve04hGsAAADkVme4ds+lR6Kn8frYqrf0ZF7Pt63u
TOKzLakVZ1Z1ro/DAqSH69dff/01oNM+97nPjRSu5waiMy9whbHXFktix6N7
4UvmaCq3104NZFxnQYRrAAAA5FZbuNZmn/kKadXWVhcW1mFpdpbF7IRfa76s
/itKqLxOCdfT09PrgK4755xzJiYmCoZr90DzFkti/xzcq2d6CLvXwfTQzrjO
ggjXAAAAyK3OPtdZ2oSHzb8j5xzeDdQ2Ux64fTO1famcmWuOlnN+N1CHjcnT
w/W9X//2fU++xMTU4enamw5s2rRppHCtybf+cC0zCdcAAABopzqbhWcRG67t
vN09gdcTexs0yc7PtR+ozHdPzm04tTACpITrmZltj518g4mp29MN8wc3Z24W
bpetovLCtdcsXA9qt1m4ux730C4d4RoAAAC5NRKubYRhPWe2ntHyU8+r9dnw
HD5sFm79uK23tdZ8eTXUGrejuJrrDRs2fOITnyBcM/V2SgnXu3btSjmo7dKW
HrnRmW1Lsodr/Z/gdv2Qx+6AZvKr9rx267irQLgGAABAbvWHa3cMYT1tll/t
RFpO0d1O03YOryfe7v16vAHN3KHMbMBhW17P+WP7XJ84ceKSSy6JzdczMzON
Bx8mpqqnpHAtyfrcc88ND2o3NeuFMjcIxy5mg4En/XOwQ9WOULvIZvldq7Bp
Fg4AAIB2qjpch9zTbztbthNmt1m4jRI8anWV1YJ5rK+oJylfb926dd26dduu
2c3E1OFpYvLjGzdujE3WTz31VOxxNGrCLeuu9IRrAAAAtFbLw3V6zVfImpeH
T7kDiYdi8/XMzMwBoOu2b9++efPmjMk6Wqllzt7xuay23NpMJcv/gdwI1wAA
AMit/nAd2yzcDdfuLa0rPZH2hPl627ZttW0daMrCwoJ7n+v0ZN1thGsAAADk
Vn+4jpwBzbTyywvXwu1rWScvXxOu0QduuO5zso4I1wAAACigkXDdZm6+Jlyj
Dyxc9zxZR4RrAAAAFEC4Dlm+JlyjDzRck6wjwjUAAAAKIFzH0nx98cUXN10Q
oHISri+88EKSdUS4BgAAQAGEawBQhGsAAADkRrgGAEW4BgAAQG6EawBQhGsA
AADkRrgGAEW4BgAAQG6EawBQhGsAAADkRrgGAEW4BgAAQG6EawBQhGsAAADk
RrgGAEW4BgAAQG6EawBQhGsAAADkRrgGAEW4BgAAQG6EawBQhGsAAADkRrgG
AEW4BgAAQG6EawBQhGsAAADkRrgGAEW4BgAAQG6EawBQhGsAAADkRrgGAEW4
BgAADZqdnZ2fny+yBjmZmZiYOHToUI7Xbt26Nd8LYQjXV1555VSypksHVG5h
YYFDQBGuAQBAU44ePSrx1n6dCGRZiaRjd8mRViKvdQuAHAjX69ev37Vr16fj
bNy4senSAZWTcH3xxRfHHgJ79uxpunS1IlwDAICmzM7O7tu3Tx9rBXTSr+kr
EblXkrvWG4pwLeF6cXHxuTjbtm1runRA5SRcT05Oxh4Cx44da7p0tSJcAwCA
RmjyPXr0qP6qFdBuzs0Yrt1X5ViJPGvZHDkQrgnX6DnCtSFcAwCARszPz7tt
tiXkyq9yZuL+OrQ7tmTz8FUjrcRrVY5RdSZcr127ds2aNfarPF5aWrJfV69e
nfRCwjV6rki4liNr1YA3Xw5Anb+8vOwu7P6aZVWy/KoVNXQAJ1wDAIBGSPJ1
+zvPzs56faWz9IaW4FxwJRrPrQIdoxrrcC2B2s7VVw/Yr2G4lqdk+XAlhGv0
XI5wLVFXji9Ju3Nzc/KrPHAvbclMDcLyQK9rya/yElkmKVwnrUq3Yo/DFF8u
wjUAAGiE21c6GrTf1l/D0b+1AtpYxXQ0GO7bbfWdshJ3De78IoONI2ouXOvJ
tp5v51uDe9atJ/Pu4MaxNdfyrDtTpYfrkydPfgfotNtuu22kcD03oEeZzXRj
rzvfveTlXg3zJK1KDljdlrfpihCuAQBAI9xwrdXH1n5b07S7pGZqDcLe8GVW
6Zy0El1MYrhWc2tzdFuMcF1Q4zXXcr4dBt6ML/TqqeVXa/4dG65jK69TwrV8
3tYBXXfOOeds3LixYLh2e154HTRGDdfuqmRD1iw8IlwDAICOcpuFewOReTHZ
DdRbB9xX2QqTVmJDllkbcre7N83CC2owXNs589BwHXtObmfjsZk6qc91WFGe
Eq6np6eXvnHygef+GxNTh6e/m7t906bNI4VrO8rCQywqNVwbbS7uVWSXjnAN
AAAa4SZcbyCyaBCi9VkvaLvh2hvoO2kl+jOkgVojufsqjKSpcG2NRWObanti
z8ntDNxamCutm/YqxK2haXjeLuH68OHDscliZmbbYyffYGLq9nTD/MHNmZuF
y2FlzT+yhGt3fpFwbdfQcrd1yYJwDQAAGpGxytitj/buW52xOXdssrbXeuOq
YVRNhWs37eqpso0VrDVT2o1ahwiW02lrHRqe2HtDEFvzUVvAfRzWXG/evHl6
evqpp54iXDP1c0oJ1zt37gwPXrsgpgemztEDU48+G/3APfSi1HCdtCp3oxqr
Kx0znHANAACaoj2g05fR+mhr1221zN5NuFLIazWPW7Nwt7Y6SxmQovEBzfSE
Wc7ArbWn3r7HxhmOzrzNloVxPVGXx149l52lywO3t2aU0Of6O9/5TlK+npmZ
aTz4MDFVPf1LuN4cE64lWV944YXhwet2fNZrYnYM2rFmt+Lyjk13nAQvaMeu
yv5R6Hz6XAMA0H5e02X3Vx2MK+W1skAL2yRrjK16pC9Z+dBaY9k/sozdY8tq
ur2bcKWwP4e+xK3+1qcKvouea3xAM+WehOtNedyzaPec3CrFctRhWV9RT1K+
1gHNtmzdzsTU4WnDpRPhgGaarGO/3UpJuPluE0C4BhqhFSWxjRVt0NooGDxn
6DpbeP5cCj07DW+R4/Gqh3TvpbxEnx1ao+TVXpWyWrcrKJBFSrhOF3YTbgmN
tLFPuV2YizeoHlpx7LYDzzI/lvtvyn0h1dbFjWO4tvkpt80NyZIp5/Ox+Xpm
Zkae+iLQaVdffbV8+DMmaz2UsoxDmCJf6269z3X2Qz4HwjUQq/Rw3drz51Jo
pVL6MnL66i1j9WKx+zn9WW9J9/S+rNVaO1Igi4w111b96o5Z7X4m7YbO4Thd
OnPizDtS2apszbYtXcCCsF13Cj/Y4fUxd23hPy6ZoyWv4fZV2S9ToCktCdex
zcLdcG2n4tWdXYf5etu2bVVsCGiVhYUF9z7X6cm62wjXQKyM4XrUFXby/4w3
vlDKMt7+tLP38Pzc1pml+thLwWWtlrvzYCRZwrXG26MD9qz7z8F9bPnavYhn
aVc/zPZJtktMOl/XbAvr5nSB8H9RUmHcQbk9GQ8i9ERLwnXkDGimNWJeuLYO
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
3UG4blZLPgbN6l64lpNtPavXcC3n4VqnFp1Zl53Fa6+99uSTT369JB//+MdT
wnVZWxkXV1xxRUq4brp0vfO9730v+3ExNxANgrB7QLnXr2S+RGZbUo++pMpr
98D0roCFa3DTt6Zyd5mCCNeEa3Qb4RqoSEu+OwjXzWrJx6BZ3QvXdu4t5+FW
fWZry155feedd64r1bnnnpsSrsvdVvt95CMfSQnXTZeuj+bn5zMeGhZm5diU
Q8yacNt1LT3W9Oiz1CwvyRKubYV6qIZrsAbn0Uq6J1yXhT7X6DzCNVCF9nx3
EK4b1JLPQOO6F67t3FvOw/XkP/bZdMeOHZO4sXXr1uuvv35fSTZs2JASrh9c
/u6xV37Sn2nL1u0p4bqsfY6MZmZm5AO/uLiY5eiQJKuB14Yy0ChdSrg2snJ9
ydBwrfk6S8mHIly35wQJqALhGqhCe744CNfNasnHoFljF67l16TBjrSqy5bX
03Kbby/Psl2JGxdffPFNpZJwvXPnzqRw/djJN3o1XT7ziaRwfd1115W755HF
xo0bs9xv3bo8R04Pa3vsNgvXHhluo+6kCBwbrrUReLgGr1m4PvYaqOdGuG7P
CRJQBcI1UJGWfHcQrpvVko9Bs8YrXNu5tPbo1KGJ9am1A9GZNdd6vi3zrcos
Y8319ddf/7GPfazc8LJly5b169cvLCwQrlPC9b333nveeeeVu+eRxaZNmz7x
iU9kOTrsyLJu1Ja45Wi1Ac0kCLvHr10QS1mhS16o4xB6a9B8rRvVp9wa84II
14RrdBvhGqhIS747CNfNasnHoFnjFa7dO3Npq1GrKbNaM7fPtXsrLq9mLd0D
Dzywbt267du3l5tfkvK1hOujL/yw8cBb57Rl+qowXGuy1pHfUCeJ1fKBP3jw
YJajw61NtpYkdhi6Paaj4F5dbmW38Q5V78Zb3hoi51Zc1nyFZuGeffv2bd26
NZw5ETh69KgtQLhG5xGugYq05LuDcN2slnwMmtXycO3x7rnj9uK04JxSjWV9
RbP4zGc+owM9nVOqD3/4w2G+lnAtT5173vn9mcIBzSRZnztQ7g5HFvI5v/HG
GzMeGkXCbMamIyMhXHs0RIfhenZ2NmO45ssRXUW4BqrQni8OwnWzWvIxaNZ4
hWtta2q/xjYLjxJqx3SEpZE29/LLL8vPR8p2zTXXePlawnXpW2m5LVu2uOFa
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
CdfVhOuxQ7hGUwjXYycpXKumS1eCBsO1pl1T8LaPseE6WsnXKhwMpGDXOaD9
CNf1b/qshrz1rW9tatOi6U963XJ/dxCuu4TzB1V1uJ6amlqzZo03c9WqVUtL
SxW9EOOCcD12CNcVkSAcNnkKB/euGuEanXcW4ZpNVz/1sL4+9xcH4bpjqjt/
cGsHClZAVK2GcL169Wo3Ec/NzXlzQhKr871w7dq1y8vLsqTEcPkpc2R5mSkP
ZL4+QEsQrseO5eg777yTcF0WCdFhPXLszKqRrNF5hGs2XcPUw3Ad0Sx8MBGu
KzqFCOsg+nwrrqkBN9VKQJY5QzNyjhfKU7JANMjmuhL7aYWh4rs9CNdjR0P0
9wOE6yLCvs8q9y0qipSEcI1uI1yz6RomwnV2hOuOqeIUIry5SXh30VYpPVxL
gF21wuKwpN3l5eVopR55aEaem5vL8UKtto5WArW8VldlC1B53SqE67FDs/Aq
tpjUwEkSd2y/6eoQrtF5hGs2XcNEuM6OcN0xhOuo7HCtoVgfS7KOViqLbb6G
5fSMLM/aMiO90PpoyzLaO1ujtBXJXcY8iYakh+umS4d/5f03IFyXvsWk1k37
9u1rKlyTr9FVhGs2XcPUw3BNn2udCNc0C4/KDtdW0Sw/NcZaHNbu0t5MCb/a
P1pYnbIl4lFfqHHeaDbX7tuWqb1lokG4fuXkSab6p/Rw3XjxmGQiXNcgdmRv
Dd01j2lGuO6VBgdSPqu5sZQJ12y6hqm34TrHdwfhuksqPX9Iv91Jq1QUriXP
antsi8PaXNweW0Z2Y6/NzPdCr1baGoe7T1Fz3R7UXI8F778B4bp0dhMu63lt
3yBSnjpLQrjulQZjZoPRg3DNpmuYehuuc7yQcN0xVZw/yEmRnSBpE/Gaz45G
VXqzcK1NtpbYbkNuqzV2M7KG8Whl6LMwlWd8oTdTq7b1gdVu0+e6VehzjbZp
6lZc3k2uG0nWEX2ue4ZwXfPUz5jZz033MFxH9LkeTITr0k8htLrBGvJJym7q
HCm7qkcLT+dlZHfwsRwvtNHCk8hijBbeHoRrtE1T4bolCNe9QriueepnzOzn
pgnX2RGuO6bcUwjtIueNXab1ETX3mxtJ4+Ha4vCqVassL+d+obVLD1k3cLQE
4RptU3+4Doe7lDlNfWUQrnuFcF3z1M+Y2c9NE66zI1x3TLmnENoIPLyjSv33
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
7qR1ao1zeK3A9rB8nm0PTwwafutWYsO17nZv53j0MsWdd97p7lt9a7HXJfSN
DA3XKXtVCiwv9+5NZhcldP0pe1XflFsYDdSyTMYLKaVoVeNwpbu0PVXqpSBc
l4Jw3TEtCddwEa6BRhCuw3Bdw5hmR44c8cY000C3Z88eL1xnaRl+9913l9Lt
Wt5jwW7XWufY9N/2X5vmSjiSwjw8oBHbjULanNirAr5lQBfIEq51eft1aWlJ
1yyr9RK09nTWXJ9SQawNuTWryktiI60GSQ22srC7Ia0yDjsLW9zTl2vNtUZg
eSyfkMnJyaThWWIvNcjatJC2hzVi6x5Oqbn2mlsnkc15Vfx23SNcWHNu+l7V
v3XSXjXaaz5a+f+gBUjZq7oqXUD3ql5v0YOrtmpr5baobw/tLtGqKvWCCNel
IFx3DOG6hQjXQCMI11qNdfTo0aQxzbxwXXxMM9lc2O06DNfZu13L+fzevXtl
findrmUrubtdy1Ya73atuU87HdtMN0dbuHbbSEcrbcJ1jK+M4VoCoJvptGJa
DihJmm4w1PAla45ti+7STctqkwKgfW51E9oEXR671w28ktv7tV2hlx00GkeD
cKpzYm8lpv2a3TLLHHmtbdR97264lg192aEBPKn22SMfoS1btrj34NYDRHtJ
G1tnerW1XtNI2atG8+nx48f1A2PdqMPwrjMtO+8acPeqFKnOamulI4fLYV7z
dtMNvRn3OGJAs+II111CuAYARbi2cG35Wsc0u+OOO+rsdu2G61G7XctfUMK1
bCt3uB6123VSy3Dtdt1sK9Cw03F0Zj9ly0pajWuVoVrjLDskY7jWj5CbOmW7
k5OTGiXcOnErktv9OZasTVOqhtDY+zrpEGr2Bq2/cJQaA923I2FTa5xlJVrB
Kp9D+cMtLS3JzKHVyho8vT0chuuQvHeviXsS3bdyDNocG2jOZe3809c5dK+6
5GjVSxbWdj1lr7ozda/qfnarrfUWXZXejcvVziR730DTpSgT4bo4wnWXEK4B
QBGuw3CtY5rt27cvPVx7LcOzh+vFxUU5MZOnsoRryeD333//nXfeeeTIEVks
zNdSgIWFBSmwxIfYluFS4MMD8gZfeumlod2uc9/tWvO13pGq2T9r2Hg4HNRL
w44buq2Nd8Zw7d0oSqP6Nddco/2F7YzRqjhHGndLm7JbIE1fWBu9Ryttp9Nr
rj1WwSonPJOTk1obnjLAdWwH5Giw92y0MW+0cNm0RuOhnc2NvOWdO3eGPaBt
kHCtjB71DlzuXo39+8rfSIt64MABmxm7A9Nb+Nte1VbiQ/dqieTAbPYYjCWl
ks/DQw891HRBSkO4Lo5w3SWEawBQhOvYcH3rrbcWHNNsaLdribFut+swXMuS
Ugzv3rty0m7hWha7/vrr3WdlYSmthWtZbO/evV5ln+S+oXe7Pnny5Jh2u46N
PF6qdbOStQzXNuHuzKHh2rtRlCbKzw9ouNbVWt9hTb5Dk7LL7jOVkuMip9bY
2p+H+yS2utatYJVy7t692y4CJFXvxiZN3XvWCjq2z/VI+VoW1lpgtwe0F6Wz
jI0Wy92r7tuUrehlCtmo27sh9g+nezW2nbm+fXlKd4u+ZR2QLalHwI9+/J1n
l29+4NF1hxb/UqbHHp988eVDo74v8+qrr+rt1XKvoQo6uFnbuoTnRrgujnDd
JYRrAFCEazE7O6sVuxau77jjjnLHNPMqr6+77jo5gXdbhofh+vbbb5c5O3bs
kALIMvfff//09LTMWVpaktQsy0gUkl9vvvlm2fShQ4euueYaTeKyaQ3X8/Pz
8usXv/hF2fqLL74ob/Dyyy+XObLd6u52/fLLLzfY61PHtvJihe5b757F+qu1
DNcaxtiey1pV6jXuDW8UZblePz8a3PT2W1oeL/jLs7LndZmUXthaAMmVGu4s
b7o0t7pvx31Wo3fsJqyCVaPfjTfeqHWL4YBs3tv0ordXYx4brvU6Q5hnY/et
XujQHtDyaU+63KFZ2H1renEg+151/8o64pkWQ/4hWDPm2L2q+zy2OboONBed
OXJ4NNirsZcCnv/2ZyVQ33X4P3uTZG0J3SlvIYX8X5L937abzsu/hVFT/6lT
r3/31Qe++tCHjh3584cX/uhL97/vW09/8p9+1OR1A/2A6YdZ/e5v/k9FJknQ
KVOD77RqhOsuIVwDgCJcq6mpKQvXnz344L7bjkxs/btP7V+49YsPyvSZOx/S
6cBdD69Mj8h028F/neYXHh1MR3W6/e5/mT576NhgOh6Gazn39sY088K1LLll
QJaxbtcS1WWZ66+/XuLGPffco491TDNJ+nv37pUALjN37typ4XpmZkbStNvt
Wt7j1Vdf/cADD6R0u5azX0lYubtdC71u0MifVcO1m8I0qbktcr26Vx3H2x33
24ty2oFaB+i2F2oHbTdb2WBl8texW27Z8FZREMfk1127dsky7gUBbfAcSxcI
36DWPlvhrYm4vf2kjt4agd1RxJeWlrTGVrt1x+5h3QluSJTXereBThotXDO4
e69q3UU65rkFW3ff6sUE3Z9h3b3+pdwN6ZuVtbmXFDS8x9IFdC+5g3t7MTB2
r8aOV6bj6dlf073UE3vJQpJ1GKttktD9k1M/iP1DDNXObs56P275/5NlYQnR
Txw7VzJ1OH372b1VFzVJOFp4kbrp97znPU29kcYRrruEcA0AinDthmvN15fv
OfJfNn2xxCl2TDOJe7HhWv4cEq7vvvtu+XX//v3emGaPPvqorErimzYIl5is
Y5rJUxKuH3nkEQnUMl9+lXAtKVsez8/PywpHutt19m7XsS3DY2tX6/yz6rjQ
VsFkYUd54Vp/tWQXBeFaMpTbpFyDqncTrsjp1q31rVu2bNGaUIucXsh16zE1
udumY+nCmoK1tPoG9R5Ylgo1wMqnSxulJ8XS8C1oeQ4fPry4uOjtH1mbrd8K
YHXE2m/d3UTKrbj0CoN7wcG9pqG52x1nW3fmNddcE1tNbIVxf7U/nBRb96rW
tsfShfWShS5vPvWpT918883uXpWC6V7VdxHbcl5WYp8WLY/+4eyu4u7CEpxj
66zd6atPbAu3koUcto2PLhhL/z8MvTnXqVOvf/WhD8Uma51OvtjkP5my8nVv
w7W795ouC0pAuAYARbiuOVxrvpZQLJno8ccfTwrX8u0jvx46dMgN1+6Y4dpE
XOLz7hUyR5K1tgx/7LHHJFx/6Utfsjd4+eWX33777V/5yldixwwv2O3aaxku
xZOz+qbGK9Y9aSTseM1QvXBtAc2ymxeu3Wyug3VHg6Ts1d5OODeZktfqVQ6r
qfTGAdNGyLZFrZy1VSWx17pNUr3bgXl7ILEpslPB6r5KPoFXXnmle5ut8D7X
mjTdPewVICVc646aWKnPlcJbRNUrITrTreGVTU9OTiaNsq5XD7R4tgZ7ysqQ
vlfd/emSXWFtMLy9GtslX+vc3b1qzR5iBzR7dvnm9GStU+7G4XoktvAe0zqk
eXrBvv3s3pRkrVMj7cMJ16UgXHcM4Tqjz9z2+V5NKbvitsLauZ72v9PSi5e+
/h4iXE8M+lzPz89buN53+9LErsPnz9yx7uP75cGm3TodcafN19p0jztN/p1O
97pT0phmR44csTHNvHC9f//+iUF36aQbclm4NhIEJFnrYw3X4oknnpC3pkFP
XX311VKAoXe79rpdx7YM98K1d0MuG+e5EbKfZacl9e50s6rNiV1APyc2X/5M
kqDlKYkGXpdeL//KHpB9667WXUACrxu1tF30qG9QaAV90gJauZz0bBi6ZY7E
wN27d8vH1Z0vxQvrvkfdw+Gz3r7VfRLuW/mMSam8IsVuK/deTcrdx48fd3su
y5zcezX2fmGPPT6ZJVw//+3RBkV3PfTQQw0OMJhCCnb48OGkZ0+del07WadP
z339yjrLrOTvaMPOF0zWfQ7XEc3Cu4VwnVF63uyYoeH6RAG3OZGzVetp/zst
t3hD199DhGutenv00Ue9AcMXFha2b9/+wAMPZBnTzLshV5YxzWSjbrdrL1zb
WGReuJa1nRiE6x07dsgCsqQ2C7du1zIn9m7XMl9OZTVl/3/svQmUFdd578vK
Ws5aTvxsvTwniuS3bmzLSa5z34sVJ46zopeERLb1cnMTDS9Orq+fYzmy85Zy
40g3jqfrWG5A0BNNN2roA03TEzQ9j6QnemJqEKglISQkEEISSKABIUQjgSSU
nPf3+dyfNzWdfap2nRr6+69avU7XsGvvXVX71O983/4+/PX2DA8+7Rrnyhtt
OxGiQGf0+XJucrFmuzjlsaNAW2yKpUnT8YntbPHqp1Z7BwfzfSJ+r6azuIX+
phD0ecNzqU7mZJoPWO2w01rt3Pu1sOGacmDFLTNXNlexXbt2uSXnunDuUF6y
xgIAL3K1WaaihQtcC1ynQwLXmhK4ZsUNOQWuA0rgmiVw7QbXDz74IOAaeOud
7doRrnWyXeP7paGhwRGuIZr3in8tcL169epVq1YBrtva2rDD9PQ0Zbvmadeb
Nm0CGuMzGoj7HGdhvoawGwUM94Zr9EbAadfRJuQyKKJg/MWFo7nAHgZZVd49
UJMTLjr5mceqr2iuLjseoIYh/U5CfUtmce++JcjNWw1LrxbqDOAockII6aeP
vQe+qQPXQdJyZReCs0XrSeIoutMcL+urL44JXKdeAtdpksC1pgSuWXFDzqjg
Gu/80dZQ4Nq4BK4tcM18PTc3V1tbi1vFG64tCbn04doy7ZrgGrhNcH3ixAly
/EY1GK4pe3JjYyPuYZy3JJfYWjVeg6zJV5yM12SnxtkZrmm27Lp167ynXR8/
flyddp24hFwGRTOa9+/fD/Rz9Ox1E6eRsm+iecfocy7WaJUNyNtl15Tw3OE5
0uzbvNOHOZE0ue4b/EGAJgibKk3Vk8fqdeD63OuHA56Iei+Gz6Mb+J97Za8O
XD+y+8uRVDsrcG1CAtdpksC1pgSuWWFDMV7FjZRDuummm7785S/rlFNQS++5
555PfvKTAwMDwWuYVwLXRZPAtRtcQ8DY1tZWC1wHyXbtMe2aUmupcA3Aoep1
dnb29/dv3bqVknOxZzgZr6Genh68/G/btg1bly9fDh4nuOYgyX19fWCl4eFh
Mlvv2bPHO2Y4TbtGKwIm5EIbo77OgcQU7O9wNVeyKkvcrRiKpgaE7aleqNs2
+tPNizibs7C7BT0LKPqdJAzz/YX5E3nJeu+Bbxo5F3n7xy3zddaFr69cuagD
18ce/VFEtRa4NiCB6zRJ4FpTAtessOH6i1/8It6fg5dDMg7X4I4/+ZM/WbJk
ya/+6q/i74oVKwqq4Xe/+921a9e6HYI3ottvvx3kolNDgWvjErguyYUKB7ra
4Rr3SW1tLVjVFFx7TLsG8FZWVoLlGa4hnDqTyVAlAc54nUOBdA+fyglvy5Rv
i3bAg7Zp0yYU+NKCduzYwTuArLEVDXQMGG4xXhMYJjQhlynRvF3fh5O50I4z
ZKsNVrXQFXaWZIqXXtAhltzTFoXaq+QcHoblN29Ms+BmaxYuaBEcEnzIka8B
znnh+twre4tfWwyVFARe4DqgBK7TJIFrTQlcs8KG61tuuQXQet999wUsh2QW
rhsaGn7xF3/x13/91/v6+vDvN7/5TVT1r/7qr/Dmr1nDr371qzjk61//un3/
7u7uT3ziE7/8y7/c1NSkU8OCLgQAZ/Xq1YX2wGKTwDXztVtMM7yROsJ1QdOu
HeHaMu36eE7PLIj4+tmcUBp2swQMJ72QE8rEbicXsl2fOXPGEtYMBWI3Nds1
8bUbXKOZXV1d2OQ7IRd5hsfQUlaQglhvyeJpN99ToOxg9Qpdoc415lMUegge
upGREcdNYfdqeK7yBx7+niNWT+z8q4CzrS2iqese1v8IZefrty+9FE+ztaTi
MiK196Kui8iABK41xbzZ3t6+JKc9e/bgX/xV/02H4gDXED4EKYdkEK7vuece
1Oov//Iv8c7PK+vr6z/84Q87uoi71RCQ+773ve+zn/3s9PQ0r7zvvvtQ+Oc/
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
RN03ZhR5N6a+hzUlcO0I18ETXruFNWttbdUPa+YvJxcZr9Ecb+O1o2d48Wde
z8/Pj46OmkrLhU7GC3PUN5cZecC1G1nTUTTVWnXSZhduTc9wVYzSfCJGafWt
2MLvDNc09Rukj01Lly5VZ3+HB9cA6kee7Rk4+L3G6S/RMnm46uLlVy27US7s
qHJ1FU2WSdkYH7DGkv77wuWzbmSdl69nDlfqwDUYPPy2/thH3RKx3L6gwtgT
PYBBBgMU27tpQjdGTpo7oKK3qvHxceywZs0ageuAErhOkwSuBa5FIhFJ4FqF
67A9w4sW1qynp6e5udnNeK2Tk6uYxmuDabkoslk6wmu7wTXWs6e3hawdhd6m
/S3ztTWFB4SomcGc4Vrld57lTbVluOYfAVjM1yHB9bmLz3ft+0fGanUBcVt2
xo1E4InHM00T9h2Fh5F+feKJyXj8ibL7Hi73IGtaJo5sxnLgxIBlOrZHnPDi
W65PnT2oUxn7Ly1usjA4egzjKkbg2tpageuAErhOkwSuNeHa4BJ1z4lEImcJ
XOeFa+NhzQYHB8POyTU3N+dovNYJa6ZpvEaZpozX/tJyufE16gxwSMF0Wke4
BquqwcrYDdtDAHC7oVm/DkTH6rG4fFQgT+Jmfl+yMO1ahWt8RhPYtxyiidth
wDWgyY2saTnywoj9KNzDNEl5MSB2dmFeNkc/m9gzlJes7aDNpWnybMCA4ZrS
NKM/+cJwwBOJW3hwCVynSQLXxVfUPScSiZwlcA2VlZU1Nzf78wwPGNaM+Tqv
Z3ihxuutW7eGZ7wGCKvGaw++fm1BRUvLBZFjZ9S3WFA5wrVdHEPMUWR3JrO1
D59wu9matHTpUjZeo3r2mGYM16ptnStDJu8w4Hr3kxkPsqbFzWqJW50QO/Kc
0UUTHiI8/gM7GwuFayztB37E5fTt+wdvmB1/ZFlxWoQT6cC1v9TbJDwLY2Nj
+NYQuA4oges0KblwLRKJRGYlcM18reMZHuewZo7Ga9QzuPHawtccNhwlexiv
86bl4l9fOS0XmD1gWi7iaxwLREp6uiUPuAaxqqZhtxLYZo19GGApQJmbVIi2
z7a2b2Lxvxa4VgOacRxyMnkbh+t3rry1dfddeeEaAO5RiIrYRmoVfx06tcMH
XKv265fPH/Eg2Y7dX8MOxWmLJlwH8VG3fHfEnK9jC9dq70VdF5EBCVyLRCIR
SeDaA66DJ7y28zWYN5PJ1NfXGwxrpmm81snJpWm8Bl93dnYODQ2ZNV6DaKan
pxmug6S9Rn2S7hzuBtcgU0Jg75nXbE1WyVot1lHqnuBiOyCzUAecd2lOQGk+
Hbl8M1yrhnU+dUhwffLsQ3nJGkvXvn/MWxTFOhsYGFgMiH3i1Uf8wTUWnn/t
xtcg6+I4hJM0J4AHqZLAtREJXKdMAtcikUhEEri2w3XkYc1MGa9xCjJee+fk
0sl5bTdeo3otLS3462i89ohs9vqC7HyNunV1deGkRpzDkx453C2gmT2wmJ1P
VW9wol0WGZ3dpJZDMcbtPuGOIkdx3pnhWg16xpZr+jXAOFwff2mXKbjO5iYm
c5DtdDuKv33lLd9wve/oIPfMO1fePPRsNwXrBlPjA/7FymK25eLlV/OSNeoW
pFYC10YkcJ0yCVyLRCIRSeC6JBfQDBS2c+fOUMOaAUVrF3T//fdXVlbyv6Ck
gozX9fX1OIT5urm5ubu7W4XrwcHBuro6/MVJS0tLQzJej4yMgIV1jNf6kc1w
FUxFNsNWXFYgdtT3mk9557kmcY4tdT2HDgPqWsi6IJFlHNRs34Tz3njjjRxO
jatqz3OtHs7ITwHDo7JcDxz8nn6ZNCuZEZseT/XXBtyQtBIfjLQiEg0/VusP
rpvGSzj2OGWItqSEfu/Kxbfmn5k/d+jtS0VKQJ83plnwaGa4AWpqauJP1nGG
66zMuU6XBK5FIpGIJHBNcL0zJ9+e4Tp8DQ5tySmTyeCkq1at2rx5c2tOKFw/
J1d/fz/gmo3X2AeltbW1sfF627ZtWIO/2Bm1LS8vp+Dexmde43CUPDc3V6jx
2ts5vL29Hd1lgWt/fI2K4bUfFYv6dvMjHbjmwN1LFgJ6q4G7aX9V+jHNuGRv
n3NsBSlbQoVnFbgmJ3DctNiT5mWzdTuMOdc6cD15uMpH4Xg6JicnV6xYgX7G
EMHr0RYaRhJ6m5F8G693H2tHw8HUFFBCzQc9PTX8+IHShydvPTh2My2P7fpv
Lz/fW4TmeMy8NpURTKKFB5fAdZokcC0SiUQkgWtHuA41rBkoGyetqqrykZML
e65cuXJ8fJzhGpVBaTt27ABWY7fm5mbsgJLZOXzLli3YASWHYbzGecH13sbr
vJHNLHyNZqKLjEQ2Y+dwSuabLOnAdVYxB9OePFHaUfpwzS7cql+3vW6qVAxn
uGbbOglkHWqe65FHlueF65cCBNeiGNGUXABPRDYtcA2dnT9Vv/MfCoXrQ6d2
WMrBo4qumHtw6MDYf2asVpcnZv+ObNwQ+tBi6TalJ18YtnuDB7dZswSug0vg
Ok0SuBaJRCKSwLUK12Y9w934GqcrLy/3l5Orr68P2KJOuwZMoQkoGXtu2rQJ
ZD0yMmKZeb1ixYq8xmt/M6+xCSXPzMxYjNdBIpvNz89v3759amrKlHP45OQk
LlDUd1zBsrDnnTk5Bu7GStqKOwHX4k536cM1zk6HuKX6ogxcZBAHQVt242rg
jLhjly5dit3w1zG0mim4prN8+Jd/3rJUbPsLJusHn24NcgqCa4wPPB0bT3c6
4Dqbs1/vPtZeEGJzQLOryrn0kmqwti97R786Pj6+/WrRc0pRH2lwY/r2DeCn
zh4EUGN5/eJzZmd/C1wHl8B1miRwLRKJRCSBawivSR5wbTysGcg6k8mgEM2c
XKrxur6+fuvWrWpYM6ypqKhAyZWVlSDriYkJe9jwdevWrVq1ym3mtcU5XMd4
rfI12gu+xiZ/abkc+Rrn7erqQsU84Dr1mbnCMOzGSsYbeOONNzra60vq/292
CH/nSiAjKcE1VRg3Kj709vbSMJK4G8xDQGYseSdig8QdD3/28XIPsqbl9Vf2
ZnNT2jEgYNDAAIIORH9iIKU89Xb6ZgZnYU/icRowyRqOQezY1cIaGr7YwQaf
n1V06mpRCTzFXhV5H+Gka9as4W+Qz3zyw76X//V/+dnrf+lDHsvtn/9UkEXg
WlQcCVyLRCIRSeCapj/b4dqsZzjzNXbDGUGjeENrbGwEZbPxWicnF/AZr5cc
2QyvfxU5gaxRLLaiWDtcj42NkXU7DOO1PS2Xh/FaP+01RTbDViPO4ZSZC+eN
+r4rQALX+pqZmQFZ05zu/oHPTUz+KS2/f9O1WPPhX/75W7/6fxx5YSR4nVW4
JrFbOJ4CPGh4JJN1m3no7StvtR/4kRtZY9PbTr9UvHflorfZmpbjj9ynWQ08
9SqAszDQ0ThJwy8h+diCiL7psyOkQ26b6CgUOD09TfxuEYZZFa6DWJb/94//
Rt/OY27L7/3hF4xe0nhJ4DpNErgWiUQiksA1tGLFCnCcb+N1QWHNRkdHcUZ8
ueD1bGpqqrq6enx8XNN4jWrgWLz1MVxjT2pCTU0NCqfZoPac19gfmzZv3uzP
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
fN999/0oJ4HrgBK4TpMErqOSoJMPLapOW1SNjYkih2ugChiTmBqvLnjtwdsR
xePCB2A14Jq+f7GbwfNa4BrvV45wrfL1T+H6gVvPlH1Gc6kq+fYeRSpf19fX
452NEBsfLJHNUCUQN25FvM6hEwiuyWzNKXUgQC7WAMPxQogPOJDhmt4ew4gc
DuF9FbUqaPK1D74+nVNw/3A3vlZDnO3cuRPdi2rb+VrTRdzbhE2zsHG5xYSd
CM0dvl8HrsHgUdc0VSKgxmBIc6hHR0fJQo1BA48znk0MC5Zp1BgwsQNGAxyI
IRFfIm1tbRgx8AFDB0Y/CluBEZKZmhy/MWyy4zc+YAeUib/M1MBtlAPcXrZs
2Q9/+EMAdWlpKfbHX7FcB5fAdZokcB2VBJ18aFF12qJqbEwULVzjfakmJ7wC
AZc89sTrE3bD2w74zsipPeA6r/H62bpbz1T9rs7y/OqbVpd8mwpHG92cw4HP
TU1NauRwnAVk3dHRgUNQw76+Ppp/nclJjWyGf3E43vfwNohXRzWyWUVFxZb/
n703fa7rOPM0/R/0l47+4OiuCY8nYqJ7PlTM1FS3J2Zqa1ePq7vddrlcVa7V
kq2FkiiJOygSFEgCoECCGygSXECRhMB9B0CCG0CAIiVKtEhLJdmSbG22S3bJ
dlm25a2qHBOYh/dnvk7mOSdv3g24pPIXJxD3njVP5jl53wfvm2/u3t2gmbnY
B76uNLlZ/ORc8eOvDbEj+bpoii6kFOLhFGdFIeKeC9vja0NsubD5m1zYTa6v
fr0vBq7ZbbpLestLId/uPNQANZ2bxlDzimkYtVKQWdQ3/RU9CV0KfRGds5vu
m+6CDvC5555zA781mJre2GVq1h85coTd6IFXr15tTK2j6FrF1GvXrt28eTNM
/cgjj8yfP7+1tdUNr/rwv/lXtSyf+S+/Wcsy3a1XvRJc305KcD1dOtpMmu7K
iNV019NNSjd7+2l64Vp+ajglcn+QBJqry6WzcB3D17+C674//s7j/ylmObry
TrtKb29vbnA49iRbqQqDa/bBlsPYwzg8deoUWzE1BdcrVqzo7+93Z+bC/MOk
5Bbcwdfia3bGbmzczFzsg43azHxd6RTYiJJjvdMoLl/XGCKeHYWdXNjNr7//
zlgMXL/7vWenu6S3nnhHeCXpN8xDrWmz6PHoGXgf5aFWXjJ3Nmq6R3oMegb6
H5s/y0ZSs1XpJsxJPTAwwJnpUS9evAhTs9Jl6mPHjvX19YmpWc9KTuUydXd3
N0zNX5ep29raFi5cuGTJkrp4rmtcElwnNYkSXCclJSVJ0x4WPl1y4bqrqwuj
K955/dbOz3x7y8dilqsb/tvK5Y/sLQlDLjezGfYhZeDMljkccw6ylgsbdO3s
7FTmcOUos7ThiKNYw08VZqcc3AbXoChrYPPwzNc1Dr6+evWqgvnrOzlXePx1
bn6zqvk6dwi24lFzh2AXhYgXZTkLJxKH4hNiN6f+5Zc/LUvW5576HLs1qAC/
+OXPn/vmU0Nf2X/wxZ38ffHbX2rQhaZGBtQ88xbyTQeoiG428e7wViovGb2i
zUZNN0gfko363r9/P10ffSNdFj1eNuM3fSndNV3otm3bPKamj4Wp29vbLWsZ
m1w/Neth6kWLFsHUCxYsgL5XrFgBUz9UUktLC4id4LpGJbi+nZTgOikpKUlK
cG18Hem8Rm88+Zm/7/tY5LKmo+ViSbkjrxEmIvhs03JhOqpInTekz2AyReKz
5rB2M4fL+8OmDRs2YLgKrjUE28ZfVxccHsPXGLcYtFx3KvkaqG8EXxtis4+G
YFPJMSHiVY/CVpQ4tRceFpE0LSqbMPwb35m49s61J65s3/T0RpYjLx3ha10u
DVZ3j7e2n5vrLqx57bsv1+X8U6MioKY/Yb1CvuWkpkfyhlHTJ/BG817QydDF
eVHfdFP0Mwr8hrWNqemr5aR+4oknlKAMshZrG1PTMQq0+/v7xdTKUSY/NWTN
5wUldXR0sFJMPXPmTIH24sWLl2WU4LpSubVX95PzE5NtowTyDVWC66SkpCSp
yeEay0rpzhCGUB3nC64Frl/f8yff2vl/RS4G10V8rWxmNjMX58d6HLohsJod
+KBDBNeWORzTERvy+eeflwtbKW0BT2xObEJMyixc1z74umhyLko1NXxNVWBm
8zfA13UZgk2FaIIeTtI4F7YSncEItCPnrNcTnlQXff2tvUU+68tf3br6wurW
04u9Bcr+xb/EDnXJ1YU3znhY7S7NzNdeim8XqOk3DKjff/99Xnwl9DYntYZR
844bULvpvuWkps+5du0afaCc1Gj37t0cDm5zuJegDE7n0sPDw/SKHlNzIF/l
p2YT642pW1paWE//yd/Zs2eLqefOnTtv3ryZ85bdOW/D3Uv3JbiuXQ0CXv0L
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
0Q9+/KP5J0PO6wcGd3/93W+XRWbXAY2oFuUnVwJtnkyecM8Z7XE0T6w7UNpD
ac8x7fmmXcrjuRVNc3433ltATXN48cleiHIuUFNIyp91UucmKMtlah5Xtq5e
vbq7u9vNUWZMnU1TRi/Epd3w7yVLlriu6hUrVshVPXfuXPorgFrYvnDhwnvv
vfeee+65474Fd7XuikxWZi0b76qmtukulPlNlUwtBVzVReHfXqYyL/ybXpfn
xGqY2qY+aUruN8F1jaovXA8MDOhstHhdTphUkeoL17yVLyQlJSXdCspydDPD
NZCycuVKbDkNT+7v76/j+OsiuI4JDl9+au38kY6YZcFwx+KOJSMlcWAuX2O2
6e4sefimTZswaN384RA0a/jQW5I7/pqvbK06f3jR/Nfia0xuypzL11WnOKso
RLyiUdhVD8SuDrG52eHhYQEUj4qSnhUhdrwvO96dnQXtsFMbcUJqjHbkOXFd
2xJ4osTRL5R83Jq76viL/UVkreWlb32pyOsdo2/94/ceGBwoIOuBZ9/6mkvN
AmdjZ8PnF0qx3Jr3yiPoAEQbu+VydICmrR1pVmpJQG3pyFyaduO9i4BaTmpF
fbupyXgl5aTOBn5zLSUN8xKUuUztzqUlpqaToX7YU5OXWZqy1tbWjo4Od0i1
wr8t+zdnoJPhcLmqOcQm1Vq7dq0m86IT+5Wr+q57756z4guP7q9oXi01bqSr
mgo0V/XBgwcjXdWVhn9TRcbUGg9CxdKmPEXUMzee4LpG1d1z7Q2yTqnCp1L1
hWt18klJSUnNL+wWrwdrZrjG9sOesa98hrXrdXIXrjGTuFaM81p83TbSM/tk
V8yyaEuHXUWgmuVrzGmMVcpgcM1tYmC783P19PRg3GJDdnZ27tixw52fi513
7txZy/xcRXx99epVwATbElKoiK+rDhEPZzlDVA41Q1V4c2HH5BJvEGLLkW2U
XXZEdtWUXdajHenXzoaRqwJpKRqUh8f1ce88vDVM1ixrxxdYhavqdCMGwobD
rlxGfvNb33zs5GGPrOcd7j9z+ZIeS0VuF4FzFp95fmhZGovK/34Gol2ODnil
JY+maXQeMC5h7mnePgNqUZ6cp7kh3y5Q89jQmXAgz3M2NVk2OJm7E1ObkxoK
pg8R67njqWFkby4tMXVumjJ2oAxiaoV/y1VtM2cpU5lc1ZpUa/bs2VlXNVh9
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
b7mq3QTgnqvaTVY2a86CeW3rykaA/1NJFSUrU4tT7Q1yVbuZyujVLVOZG/6d
66rODf/OZWo1BD8KCa5r19R7rpc5U3Hxgf5kCi79AVGC61tLPc/9vKFLRXlN
m1zT3VZJt56aAa7dNQdKUqz4ypUrsXMaERM+WSFce3w9Y/fQn+0ajFxalrbn
wnUz8HWNQ7BtFmyM9qlxYQcQu2hSbKU7KzsvdtlY8XC4eKXu7BiPtuvUpkEx
74G1Jx0pjoJNV69eVYWEobssd4dh/PxXhjdf7Fp+dh4LWD1nuCvrs9ayevxk
4IRekTw3NK+JeaLdm5U/mjeR51w5x2gv4+iyjmmjtmuvfumpl8dGXxy5/JWL
r77+SsA9rWdG02axKQDULlMr25XrpFbgt8fU5i218dSdnZ3K+33o0CGPqblr
DakGgTWkGr5WhWhGLQ5xJ6pesmQJvEzvYZnKenp62traLAG4uar54Lqq5y9c
PHv59ruWH4+MAC+arrooWRkvqWY3a5CruuxE1bnZv3OHVFv499mSrCEQvw4a
uZPgukZNseda0nwc03Lp21sJrm8twb8X3vhJ45Zp5uG6arrbKunW0/TCNfaM
9+um6bfAamyhes26lassXMfz9b1Pjnz2iZORywIHrrN8fdaR/CMuX7M/xjYW
Nbjh8TUWIGArh90U8HXYhY0Bj0FLea7drEpd2A1CbEQNYGwrhzPPWDhWPH5E
dtlx2VnKzgXtSNaWKJK5ti0DuSvRmdLIXy3J6orShuk7rLf//lsxSfzOf+VF
uwuBMw8Dz4mxs/CZchYRtEhHEE07ehztVV1RjLfnm776ypVtl9a0n5vjLrsv
bxu7MOrGe8s9zbvAE+jSXG6ubxvVCzO6TmqRnQV+e0ytGbTd2G8O5Lo8mQZ0
ojnO4w6p5uRUkRf+3dvb601UTU2aq5o1clXPnTtXZ7BkZS0tLXJVz5s3r2Xp
mtmdT9YxArwoWZk3r1YdXdUxmcpys3/nhn+7TC2sVooMqtcysdsvyG//+389
jcuflFPjfkZrVDMQrgqQ4sNrV4LrW0sJruM13W2VdOup2eBaa2Iyh9eoXLiO
5Ou7d535zLbYZUFbB6ZaEV9jDbr/RcdsM7jevXs3hrEmfGlvb3f5WvNzaRNE
UAVfR6Y4q8KFHZnlrPYo8SrGYoOZg4ODNhw7GyseDhevKGI8N2i8FtYOEzel
pUKo8EulCdDF3R66egAuyD2dEY8oZ+A8egB0QolNyw8PhMn6/kM7dgzkXFEh
3GJn4TPS4yeCpnK4kewt53J0rlc6G+ZtbtALfze6cuwRj6y1dJyZ13/oOpHx
GF954emRL+0/fHnb4HO7Tl7Z98JL14zmvDRZclK7rlI3O1ku1omp2Q1L3sZT
Hz9+PMvU7OYyNXtC/S5TZyeqtkxlu3bt4kNPT8+iRYuyrmp2o+tQsjKwmmNb
O2vKAS7bIzcC/N133+WxdOfVog49rK7UVe1itTup1ubNm91MZdW5qnPDvxGv
yb59+7jK8uXL1RzUc5N4rssuHyi45qfczsnjUa/TJsUowfWtpQTX8Zrutkq6
9dSccD0Fly6C6xi+/uITo5/aPBa5CK5z+Rr7DUN3YGDgmCORNfYzpjV/RTR8
7ujoUH4zkbXm58IspPwwSyRf13cIdm6WMwx+yhnpwm4oYhdRNheilS30t+yI
7EojxiPjxnNBu4i1w8QdgG7EhXQLVJ0FmSvO3Hu2zacsMJcOluQ+ooGp6O4/
/uTwM0/xOOnxoH1dcM5l51xntMfRRV7pXJq2ZtJdX/dsXj7fVUDWWtacb3vx
5S/D1D3n56wefcBdDj2zxZvOSUAtJ7VNSy0ndS7TKe+3MTXYq7HGrpPUmJq3
m5fdIE5OcDf8W5QnV3VLS4sylXFCMbU7qnr27Nnt7e2UUK5q+Brcvu+++ywC
fF77tlysrjQHeDYCnIbm7YtJVlbWVe1GgLtJ111XNdUY46oOZ/8uCv+2Ee5U
NdXLuzA4OAjU0zoJrmtUEVy7jMzvY+TZ3KMkN32ZKTmpG6QE17eWElzHa7rb
KunWUxPCNbZlvc6PCYexdODAAU5radMkF64xn07erHBysy9sO/8/Hp+IXBa0
dWbhWnyNnQYmczlv/DU7g6gY8BYfDgliJ2OZY69ySH9/v8WHbyopPP56ykLE
r169KuM/PAo7ECU+ZYitWHGjbP7yqHDFcLh4OPtZLaAdwO2qibsiBq9Ij184
nSXrRSMHn3/tlXh8DkN0IMA765g2mlYuMp5kd/R099FlAbK+7rw+N2fV6EwP
q2154kIH2Au9ukDtDunNTZPl+amNqV2aM6bev38/p/XSlImpLfybDoEdLFMZ
r5jnqmar66pWsjL+uhHgEHfr0sfCEeDZgdVlI8At2TvNxO1rPvGYZGWVuqrd
BOBlm6DIVZ2bqawo/JsfCKqRbk1Mrf8v0S4KHEpwXYty4dpbEx+z7R7Io+Kd
x9YkuG6QElzfWkpwHa/pbqukW0/NANdYv9gtmEbYXXWEa2VFw/gErvWr+rYz
iXbVcI3u2Dzx39c9FbnMf/RXcJ3la66LlQgCyE42uMY0pVSnStPyStjP4DZ/
Ozo62IQpaCHi1J7guuopumoPEc+6sLkjJRIPRInXBbHj58UOU7aFi2OxU70U
9esZhSk7ErRzWbsK3C4L3TVieFnB0U9enlh+9ijLqrHh4WvPff3tt8qycwxE
x6O0aJoHSZm99+zZYwEJGj0Nt1585qmOM/PCcL1y9MEistbSc7hNUd82krrI
SUpJuG5vb6/GUweYWmnKzDHKq+2mKQuEf9MP5Lqq58yZs8wZVe1GgD/wwAMg
eWvnhlkd/blYPbdn/NTlN370/s+rjgCnIbgvRTtwj3JVf6tcBHilrurcBOCV
uqrjw7+5Fm1xvCS1izVNguvalYVrKtmL6Ka9inzQrt4qJQN33dw6lQ503dns
We/7SLquBNcV6bfi1LgCJLiOV+NaIel21fTCNRYX8OuFcmG0YPBgUNWSJxxr
TRCqr9iKWLkutntwjREez9d/+/hT/7X76Zjlk6suzFty3e2FONDj666uLhnD
SP9RlwWIDanPBtcKt8ZKXLt2bXt7OyaEwTVkDUrUOAV2dSHiZUdhyxiOT3RW
L8SumrKpT3jH6CxmXHY8aBexdhFuB4g7hrtrJPFcxV+rqMxhiC7iaENp0TQP
W5am+Qz1KBeZknuL15558WKYrDvPzQ6TtZannj3veUhdmrOJtHipYWqe/KLY
b/oBzH4bUg0vs3OWqaE8zmaZytjZMpXluqrpMcxVnY0AX9zREzO11i9KqjQC
nDda08YdPHjQc1V/o1wEeNhVrTj8ilzVZSfVys1URuXLVf3oo4/SgvwiWPi3
x9RqHbYmuK5duZ5rT/I4l50zKwvXOtByg9sMXEkNUoLrihQDzgmum0SNa4Wk
21XTC9cmLDdMKQyeLGsDOxhRlZ5QWcfdfOPykhuwZ+E6nq//dv3Tf/TYszHL
jI5ddhWMQ9d/zfmx4jDSZPhhh8sSwBTEbMOedOfnwrbENuAWOjs7MZ6x3tlB
cM3O8MVTN6v2Idh1cWFblDglrHog9pQhdtaXbeCGXU1bxLizc0G7iLWrwO1I
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
uTGwuigHeHyyMuBXgfpUF4+Z4vPr4qq2TGW0ArWXzVRWdqLqQPi3NZbH1LqX
jo6OuXPnarLyBNe1KAvXkzfius1P7X1Nalo1CK4/5Iwpri4s3KPdLFwLqI3Q
7WxSOCzcjsoWz71iNp9YdfNc2/hxnbAIrj+USWjm3pFU6Zjrtp5dBtd8dp3X
kQnNXP6VfzkXrvnqRncbQbOPjbO2sPBcP7WdPx6u7eQJrpPqoiaE67oIC1Px
5BrsiV0nJ7jRei5cI+zbsnz9p/de+d0//XLkMntex5mb5cI1RYKjMQU1ybXy
m2HasVITdblwrQ9sMn8l9qeIQ6Ato5TCw9eY6Jx/ClzYdUdsis1t2nBsbjOM
2HWk7CLQrpS1w7gdD91hDM8VpbJbViGru1BRsbN3qqtc+lJfFqttAbqvvXDR
q/9cmhZQ8yK4Gcn4y88oiHQ9U9mF02GyZpkz3JN1UtvM1Ai25RnbfPSAS9ZF
yyNbN7h+augsy9RepjJwWGM6sq7q7u5uN1kZ6G2uai8CnH24bmdX96LOwnxl
6/c/HzOw+r2SsgOrYyLAs1j9arlkZeaqVgQ4XRmdRu2uajf8m/Nb+rhKJ6qO
Cf/eWZKYWq5qmNoabtGiRcL5BNe1KBeuJ2+4mCuN4o4clF3jIUlFahBcW34w
81kLHj/kJDRzM2Zn2dYAU4ychetJB5wnnfRoYtjchGbG8m52Ne1ja9zh2PWC
6zqqUrj2vNVVTMUFMntx10UJzdw48BdvJDS7q6Qf3fBNmxdbW3WqorjusnD9
IycyPAvmjWuFpNtVtytcT5b4GqbGilY0uJczzYXr3t7eYUeYuLx3GGNFfP1n
X3j29z51NWb59F+dbW1dDiNgnmHCeXyNXdfV1UXXjbmIUc1XSySOUepOgS0z
VXNhW3y4TdTFmvEbEl9TyLVr12JzYltWzdcNReyyGcW5OuaxYsWxnDH+OaQu
lB0P2pWydhi3I6G7vjBexYWKSp57v6qNL794Kddn7S6jTy8L0LT4V2NaLSOZ
gNoykkmbRveXhWuW0xdGeTtALV497HOAmteBxwm84tXT/6w2nTwaA9cP9fd6
fupA+PfSpUuB5ayrmlc4O6+WYTXdlEWAz5gxgx34WjZf2Xe+/+P4gdXu1FqA
c40R4Nb6L+UlK1Pzqe3q7qpWCIGbPi5+omrPVR3D1HSkNIeGw7e0tCi1hfJg
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
GBCS7D/UW5asT11Y4MV7owtPP7V+dLOL1VpmDvZ4WO0ua473B8h6wfDjw6dP
bhzZFSZrlnknruci2HX00IzDT+SS9UOrrnsn5aLNdVXnJisTlwnH6DpaWlog
OJtai54ErJ5TnAb81OU3fvT+zyvFam/G6qKB1RVNrfViVRHg8cnKcl3VMaOq
q85UpvBvN/t32fBvc1WLqdeuXbumJBeuf/vf/+umXT784Q//ybQq8Cuc4Pp2
UoLrW0vAdUOXaebhumq62yrp1lPzwDXGEvYV1hqfscr4wcWow4bERsK2qfvl
PLjGlivL16tXrxZcf/4Phv/b/xq7zH1o6akbOp1RYApsBBWeu1mjN2ssoxgX
NhfSKGxMx/BcXTGIXUW6s6od2ZER40j/tcCudjEQw5uWzQXtsrhdlrjjuXsq
FS5t9h6pBCpZKM2Tz+Ph5h9TQm8NmsZA4oGxcdNnLrYF57n+3IWnD2THUO84
P5Al64eHVwfImuX+o9sHzhzNJetFw71HR4Z4cR45sa4sXLPsOLZbyNZ9aPeD
+/uE1fc+uenhjatXPd5j4d8eVmsmJjdZGTXjuqo1sBp804zVjzzyCF/p3zoe
W1WUr6x168VsvjJj6rL5ymg4m7Gaui0aWP16SZEDq2uPAPeSlXmuampermo6
4Ua7qr3wb5pMTF02/FtYvbYkmHp1Sd3d3beK53p6l8/8l98M/AonuL6dlOD6
1tJ0A+utpOluq6RbT80D11gymGT6LEeGpqXG/OPH152iui7KwnVZvmZPxYff
8TvHP/k/H4tc5j74a7iugq9RmK+ziB3pwuYHTlHiWJVcZVoQO5Ky48dl54I2
5xRrW7JxgTb2OSupEMpWHW7HQ3e84tE4RoFii6MV2p3rknZRmueKB8Oram/o
9KkLC3LJ+vj458Yv9huIWeTw+MUJLxpcy71HN4fhmmXTicPHz5zYcHIAmp49
1MPSNryl98Tuo0O/mth6/mB3DFxvOrrDnVRL4d/gVXZSLWEa1bJ48eKiZGXZ
qbU0sLqrq2vpivUVpQGvcWB1YGqt3IHVNoLgxRpygEcmK7ME4MLqgKu6ikm1
stm/qf958+blhn9nmdoL/zamFlZ3l7Rq1SorfILrBNdJUoLrpKSkJKl54NrC
vzEvl5XSZWs99uGUwXWM/xqz6o7/dOCP/6dDkcvcmY+eysjIGrsRa62jo4Mz
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
DCHcNNDXHq5LFq7pLqo+j3NhXNFjfPrwoU781NesPFx7Ja5Pu6nYl+nVCVTg
sVQ6cI35DKZV6vOYPtXX1yd+OhNckzAZJsSmQDY4KFXKjgDa8VnbrrRh2SSX
N25qQ20XmEzJQDSc8m3J+k6cqbVFtUBV2lC1Fqspr3jOjLEucH269WYJrqdM
qpKw+ge167B1m7tEhOvbhvamldfT194bgazHL/8mrbYun/JlkPXeU6stWE2Q
dXjfJAtZv7ftnu+I1YxIgCNMp0WsFm3ATVjNo0LFapMNeFJ+ZQ0T+5kWVl9p
ujmRhdVqBjiFqh3LVTNWl2aoOnGmxtjAdxBZ3lH0E4MEfefhujThmtLCtVnf
GNtcikt87BVfHq69EpcL7Hi49nJRgcdSceH6V4Iwe8Hc5leKMN1N45dtO1yT
AF+YDBNlA83wWF2R7UjZoUA7GmsXBroTUai3Y28obVOjmzABFstmSaZkKlBb
gtQxmVoMVYvp34MHD+aiWvYMcAmrGdbEItfa7dmVck74ruY7Vaym7YEJLSJc
Y/s/n70hk7cfj+BjRo7fX733+h0nlj/7/NMqVgO4JBvwA1u/HQjX+7b2d8Fq
RiQRq9XqWias5vFgwerKykpHG/BQfmUHZ92Y7MJqxwxw93LVUgZ4hFC1xNSh
QtUFcCpb167W1lb0NRU9x/hBr2GE4CJb8vJw7eHaS5SHa6/E5eHaKyldU3AN
Yf5ZEyRMbhM/rwtcs8jqigLZpnTxlCg7EdwuDH3HvCqXRjA1qUjTnHKgAvVS
RZYgdbT11KZQNabinP5NRbXq6+tDhap5uS7xGqaF48eMPD7/FhNZn2+68cST
/ybBdePc7gNrGySsxtZrwqapjYcb9u+Q+JqczUDK45d/05Gsq+d87U//8gN4
1U23X9e8tVKL1VeXVwtYDbw6cujJ4LA1ts1fD8RqCjuCmi1YzRkXTzhjNVfX
GjRoEPoR/7rYgLv4lU0cO8rkVxZqYTWHqgOx2t2szCUD3B6qtteqBj6jH9Hg
0ULVaaR/05JqdB+lf1PmEjM1G995uC5ZuM7lU75NaeGcCm5KHfeKJg/XXonL
w7VXUrrW4BpzNprkYMKJqexGRZgpYYqY+HkluMaM2s7XnC7O5legbEybI2eM
x2TtZHG7kHJ/g/Z2U+3ION+bFlC7RKjtQB3I1Pb0bw5Va4tqaUPVjliNd9qr
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
yWkptxQQjwbXnUuOKG2n6VBAjQktJjBVVVXM1BUVFUAhMUhtZ+rIoerADHAQ
gbSwWltdq3bqpECyxtZjxez+tfOpdPXpWV8JhOs3z+/Rlq4mrD569CgABJQB
tJGwmj6nWqwmHGval3WB63W714QKWAN/0Be1tbVJYTW6Q8RqcizXYjXTjYjV
7NCeOFa7V9dS/criYHWgXxllgKMvIiysdskAt3iA28tVcwZ4cUPVEZzKpPuG
Pf1bYmq+S1A7eLiOI21auCo0vofr0peHay8vLy9S6cA1hHkavvtocTTnctd0
TOd2FK22Fp8huMYp6L9dD67dIdqRpsMCNUWEKfGbKlNXV1fjyfSY2h6qNi2s
BlZTBrilaPWoaU5wje0HY9qoulbNuFl2sn5txwRt6WpatAswAWWAVvBYwmoA
mgWricV2H9kWSNZTtw53x2pgUbJYLUWrY2L1xLGjTFh9penmNLBa9CtDG0bw
K+MM8FB+ZWhzfExoYTV6KnBhdeQMcEuoGl1JGeAYDOi1aGZliTuVYXg4OpXF
Sf8WS7zxOLz6+5uH69hygWuqpcWFqr1KVh6uvby8vEglBdeQaDtGXmSYryZy
ZBxN5HQRrjFXZwqjWVwRGdmuCATtjtIWmtYCtVpCS1xMbQFqd6YOdCqzh6oh
TIPVhdXShFkqWg3VPDrBCa5XzCGyptLVZ3YsNVqZrenx5mtXtKWrKbvYhNX4
eNqxmkAMA3tKa5Udrlt2NrpgNa6HsBofjQhYrTqBFwurxaLVgVitra7FfmUi
VifiV8ahapNfmVhaC+cNVVorkQxwTIDR4zOFctXoVhGrSy1UnZRTmRSqFm8R
GISj2yUGQz1cR1MgXGPMu4S2vUpBHq69vAqsZw3Ct5jpT14kmv6l1zWlBtcp
CShNFbQ5UVyEa1ERoLVYsGyXC0rbadoE1LN1JbRUd7KwTB02VO2ysJqxetiw
YUAzF6ymAlujxz3iAtfdFi8grF6y/szLr70NlPv5S6d/0tKhLNdL87/02sEF
b7x6WcVqEA1hNfBKi9UEaIFYDULBe89ms49vMa68Xrp9diBWr127NgJWSwHr
ZLGaO4WweuGk7lqsfnn1HW+f1GN1tKLVjNVoE7wvMmyPhtWBC6tVrKYMcLQP
mr3wGeBsViaWq45pVubO1Casxv1ELKoV06lMvFHY07/F+wMGoSnZ2MN1WImt
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
aW31i2fnmciathfOLnXEanSNC1bHr64V069MygB38StTS2tRlgLeeLSF1Ylk
gM+21tVKJFQt3Q2SClW7OJU5ysN1fHm47krycO3lVWDhe3zTP2Yu3pTJ3ZXJ
PZjJDcgnh0/I5Gbk+boxk2vJm4cDsXdm3t35B5O9Oiq9rvFwDQ0bNqyvoIcF
leVFmdtAZlB2dV40r8MkkKaFHINmRYDoUDQdDagjM3WcULXoAW7JAE8Pq11q
bKlYDRDj0tWgLVONrbBYzQtyI2A1IAhtghE7QSldHYjVqhm4HavZtcwxWr1w
Und3y7KfvXnp2NY77XB9dMudr758zoTVhIcAz7Sx2m4DnoZfmXtpLcvC6pQy
wDEkajqalZVOqNpeVOs/ZwyOlv5tkofr+PJw3ZXk4drLq8DCzGHX9Znn/jmT
+3Im9+1MrnsmV57Jjcrkxufj13Pz669XZHJrMrknM/9v3fuKfb2lIh+5Tk9S
WriExi6Kg88RUNpO0xGC1IkztRarxYXVpgzwpLA6co0tCavZDBzkAmIKLF1t
wWqusQWMila6mjiLrau0WB22xhYuqbKykrAaBxSxeoZgBu6O1cdnfzaUE/jl
5xrtZE3bhacXmbAa7aNitVhdy4LVjkWrgdVofMZqkw24o1+ZfWG1itURSmsF
ZoDzqIjmAY7PL2F1/AzwpFZVU1GtvQ/fbQpVR3Aqc5SH6/jycN2V5OHay6vA
wqTl7E3/88L1md9+IZP790zuvjxfl2VyI/L54Y9mcrPzIezFmdzyzPPLvlTs
6y0VebhOTyJcY0aXFCkniNIxgdo9SJ0GU4sLq3v27BmYAR4Hq0fWjtO6lgGr
D565wlgXoXQ1SM2ldLWK1YCs+DW27FgdrXQ1epYij4MGDUID4gpFJrJgNeeB
i1g9Z0JfE1a/c3mfhNW/zIt64bljY13g+uzhOsZq7he0FbrAUrRaxeqY1bUC
/cpMWB15YTXaPLC0lmVhdahy1dICfEu5apcMcJWpHTPAHUPV/NkPDFW/0zgl
2VC1JA/X8eXhuivJw7WXV4GF6c2uur5v3ZD5f5/K5P41k/tanq8fyueHV+T9
zcZnclPyWeIzM5g/FPt6S0UertNTYeA6LEq70HQEoI7M1NGwevjw4QBqx4XV
LlitTq0Jq6trx2ixunza9gg1tjgqCkQKW2OLsZpLV8c3AwcfoYUJq8FE7AUd
DauJBSjyyFgtLa9WsVpcXs1YfbXwkxWrf/Ob35iwmgpsOcL1M4dqRaxGuxUA
q7XVtQL9ykJhtX1hNXocTR22tFbaHuAJhqotWO0Yqj7U7+uFD1VL8nAdXx6u
u5I8XHt5FViY5GAyk7sxk7shk/t0O19/O7/+uk8+Rbwyk6vO5Ooyr07yVuG/
k4fr9JQgXEcg6LA0bQfq4jK1mAE+cOBAygAvLy93X1gdDasH1DbEr7FFWM01
tgA+mCFEqLFFWcRJYTWOMytfYwsNQut8k8XqWYprWSJY/fMLGyWslla48+8b
z5+Y6gLX29rKwmK1vWg1L6xWsZp/FZlhqK4V1gbcvrBawmpxYTV6LX5prTge
4BgAogf4dKFctYmpI5iVSfeBBELVUYtqRZOH6/jycN2V5OHay6vAwlQH/2IG
kvt8JvepPF9/IZO7LZP7Zib3nUzuR5lc76su4r/t93uY5BT7YktIHq7TU1i4
jknQidO0BagTZGr3UDV5gFMGOCbMYRdWu2N1IWtsOZqBp1S6es6cOXFKV0tY
TQm9RcdquqG9/OJeF7huWTklMAlcrK7lgtWWotVoEDSypbqWow24+8JqjLqZ
HRdWh80Aj+ABbgpVY1TQaImcAa4ydWAGeCcKVUvycB1fHq67kjxce3kVWATX
ECYquRv/R+76zNXtnzNXY9lA7Duubi/1uQETnuJeZ6nJw3V6kuA6QXaOwNHp
AbWWqQOXVLuHqiUPcG0GeFJYXeAaW/hcuGB1W1tbfb50NfCnpLAa7cb2Uy5Y
PbljjS1HrH775Lz/+sWb7ljNfXFy948C3MJ39NRitbZotYrVoYpWo3Fi2oDb
/crsFatnmxdWFyADvD5frprNyqqqqhI3KwsVqnY3AC9wqFqSh+v48nDdleTh
2surwGK4hjC5bc0+9tL9n3z383/47mf+4L8+9/5zvW7HfKOIl1ey8nCdnlKC
68RpOhpQOzJ1IFZrmVo0KyMPcDED3H1hdXysjlZjC/DFNbZAWBYzcDtWg6EI
q3EoAFdJYXV5eTlAqbq6Gl1sx2q1dDX6ZcrkUdOnVowfV9Mwsd/BWTeqWP3y
6jsiY/VP83rlpWesdbi+fvH5faGwOvHqWmFtwMNWrL76q0XHhdUFywBPyqxM
uksULFT9q71thQ9VS/JwHV8erruSPFx7eRVYIlyLSrWCcxeQh+v0FBOuw0J0
KJq2A3XMIHWcULWYAa6alUXwK3PB6sraSUnV2AKgiTW2MPgtZuCFKV0N0iGs
xtgAPcXB6mw2iz4irK6oqKCArAmrpyg1tq525cTRTQse2rb6G4c2fom2E61f
OLf8hmSxmrvj8qVDx7f/h0rWx3c+eP7s5kCsdixaLfmVoQvcq2uF9SuzL6xG
f41XKlaHLa3lmAFeLLMy7X2ga4SqJXm4ji8P111JHq4Lo0+7qdiX6VUIebiO
Jg/X6ckFriMTdASaDgTqIjK1NgNcy9RxsJrn2IzVJjPwEfW7xRpbwDptjS3Q
XJwaWyaspkRiCas5YO2I1VxjC8MPzRsNq6XS1WRCBVayYLW0vFqKVu9a+++M
1eJ2rO1fgdWXF38yKawWC2y1rRy+b/0Dx7bdh+3knr7nTsy9dPFsHKwOVV0r
EKuj+ZVJC6sBYhjnhNWmitXaDHDH0lqhMsBNZmUJYrXK1BazMnzSA2tVl0Ko
WpKH6/jycN2V5OG6MHIBZw/X14g8XEeTh+v0JMF1IhwdCqVjAnWyTG0JVaN9
+vfvzxngmCQHYrXdBjwOVocyA1drbBFWu9fYErGa3aSz2SzoyV662gWr1dLV
dqw2BaxdsFp1LZPWVk8YXysGrNXt9LZvW7Ba+nHDEau5UzAls6+tFqtrRcbq
GSGra4XFamlhNYQ+ndm+sBodoS6sjlZaq+gZ4BHqanWBULUkD9fx5eG6K8nD
dWHk4dqL5eE6mjxcpycRrjHNi8zXidN0BKBOnKkhzI0pVG0vVx0Kq8cKsmB1
eW29O1ZbzMDFGlvAIqnGFo18uxk4AVpSNbYIq9F6LljtkgeO7hs2bJgJq7Wu
ZSpWU780zv+Rhaxpe+XFdaGwWsrJV7EajZY2VnN1LbSeBatj2oDb/crQL+hZ
F6yOv7C6WBng2kwVe6h628D7OleomoURjq6ktBMP13Hk4borqfBwTTdJ6cnb
b789/pEDz4vbXbTX4oXqNZv2zOQl7W8BZ3yTfuUrX8FXkofra0QerqPJw3V6
EuGa+DpZiA5F03agjs/UgenfkllZnz59KAN88ODBYTPAw2I1kzVIxGQGbqqx
RUwXrcaWoxl4GqWrQUMxS1fjejBoCavR+CJWzzDX2BKxms3AJ44dtfGxOw+0
3RYI16f3do+J1WiiwmC1WLQarYrTBWJ1TBtwClUTVqOpR40aRfZ0gX5l2oXV
PAZMWB2YAU5YrWaAS3ezNDLALV4KE2pGtgz+YScNVbOk746YfH3NwrXYesW+
Fq8E5OHaRRJc9+7dG993/F88xjO8Jz0jvSMTOBNZ44aP72gP19eIPFxHk4fr
9GSB68gcnSxQp8HUllA1mZX17NmTQ9UThHLVRcFqci0z1diymIG3tbXZsdrF
DJxrbIF6AFylYwZOgciysjI0IC5PRKRArBZrbBFWPz/nHy4s+odAsqYtGlaj
2RPE6jN5mbAax2esRvOGwmqTDbiE1XYbcMmvTIvVYStWO2aA88Jq9HUaGeDS
rcAlA5w/6YGh6qLUqo4mD9eJyMN1F1NKcM0BXGZM4Cc9w6CK2zg/I6EodsY+
9FfsRk9+7GMfo2cIZul57MavxQ7aIxD5MlzzlfDzvCfTN18/Xa34XnBe2k18
FcTXSfu4RK5Fsjbt49X15OE6mjxcpycVrtNG6ZhAnSxTS2ZlAwcOpFD1gAED
pFB1AbA6DTNwe40tQja7GfiM9iW6cczAs9ls4lgNMVbPtJauFjlIi9VkAP78
kk84wvXP3n41FFajqRmr46+ttmM1OkJMM8Dp4mO1qbqW5FeGXmasRg8m4lcW
IQMcI6HAGeCBZmUTakYuGd6ns4eqJXm4TkQerruY0o5cEwVLCEzgSZicy5Os
Ctf0DIeA8S/tjKPhsUjKxNTMvNIR6Ix0DVLkmo5JjMx75jrGuPEM9hEj1xy2
FlleCl6rgXiAM76GgNL4JqVnJLLOebi+ZuThOpo8XKcncYKEOxgmmcWi6QhA
nQhTTxTqauFfNVQdygY8LFZDI2vHaV3LgNWiGbgWqwF0IspJZuD2GltiwNqx
xpYYsHbEapAR3j5GF8W+45euJmiiQKTWtUzCanV5NWH12qn3MFbTdmn+3zrC
dSBWU3cQVu/ZuWlj4yN7lvU6tuKB59f3u7Rv6o8vnguF1c/k5YLVaDpadS4V
rXbHalN1LTtWz2xfWO1uAx5tYXVgBjg+vzRCcD0iVrszNY+faBng0sd8VtXg
LhOqVoXBj3aLT9bXMlzn/JrrrqX04DrTLty6KY5Mz9P9kxiZd1bhmvOu6U8Z
QUS19Dz2pKixFDsWj0D3QEZmPM+HIriWwJlD23z9Ilzzpd6el/oWROhmAZwB
0UBp4muVrHMerq8ZebiOJg/X6UmC60Q4Oimgjs/UlvRvbV2tOBngEbDaZAZe
Pm275FoWocYWvmtcsJpgTcRqAjQLVkcwA08Eq6l0dXV1NQZAHKxePvmBp7Md
ilbnC2x96idPfvfEzu8GkvXJPQ+5YDWaHW31ZOPkpxu/eqHpRmm7uHdKslhN
ldGy2ayE1VxdKzJWm6prSX5lYFhHG/DEF1aLGeBlZWWJZ4BHMCubUDNybuUA
S6j65/NqO12oWivvFh5fHq67klKCawr45vJgS3DN5MtwzaHenBtcS6fA88zU
2ti3CNd0UoJrPhTto4VrKalbhGuRnSmznQ6rZWoWgTPztUrWOQ/X14w8XEeT
h+v0pIXraCjtSNNFYWopVE1mZVxXK2YGeDSsHlDbELPGFmiOsBoYpZqBO2I1
kZpoBg5Aa2trs2O1GLBOqsaWFqtxMegywuqKioqp5tLVLlg9Z0Lf47M/K2E1
NmD1L189/e677754bn4gXP/4+TWB0WpKAt+wdMSzjV9Uyfq9befowmC1Wl3L
hNWORasJq9G2Wr8yLVa7L6wOrFhtyQDHAEgbq13Myix1tTp7qFqVh+v48nDd
lZQSXIuJ1tHSwiW4plRwcR96FTG7FETOtUe0+WIIovEMHjAFmyLX4tWSxH2k
P3EIXoxoizF0EoMz8bVK1jkP19eMPFxHk4fr9CTBdbFo2gLUJqYOm/5NoWq7
WVlhsHpo7WPdale7m4GbamyxGTjYBMgj1dhyxOpEzMBFrEYv8KpbyQzcBavD
lq4Wk3i1NbaoO+xY/Ytfvv3s5a2Hzs3bemTknk23W8j6mYMV9mj179ZW795q
I+v8dv7wE2Gx+nhehNWcuu+O1TGra8X3K9MurA70K7OX1pIywHmcRGbqCBng
9rpaP+33RWB11whVS/JwHV8erruS0jY045g1kFMyNBMNwQLhOidkhhM1U9SY
95HQu3deYlUsraGZFq7FfYjEKZOcE9FpHzG3XFxzbYdrizxcXyPycB1NHq7T
U1i4dqfpmEAdk6mlUDVYADRNoery8nJMki1MnRJWW2psTW08bDED12I1KMxe
Y8sRq4FOmB5HxmptjS0wV8waW45YLQWsI2D1u++++9zlrSt2/3DZ9m/T1rj9
XhNfn9738Ouv/ViL1WKBLUrLv7Rvqp2sr24rvxyI1SfzSgOrQ1XXwjBDZwX6
lWmxWruwOtCvzJQBPqW9tFZhMsC1H3YpVP3E0O6mUPWbQ+98pyX736+/XOw7
fVoS4frDf/FHcba7brs+va2U4d3DdVdS4UtxFUZStawEJTmnkSjR3fIqD9de
LA/X0eThOj3Z4ToUSjsCdYJM7RKqplXVjqHqVLG6Z21TBDNwFavJDJyw2m4G
bsFq0QwchwJ8lUiNLfTpsGHDCKtxY9RitZoHrsXqhon9Ds66UYvVP7+w8d28
zrywlrFa3NZtuVNEbGD1xWeWgKy1WC2tdicn8Atr7gqG66Ybnz21V8Lq03lJ
WP301qbnlw57cfpdVybc9PzYm3eMv3/LmmWSDXh8rDZV18pms2hSwmp1YbXF
Btx9YXWgXxkIGp8pAHVKpbUimJUF1tX69bGdXSkDXKukItdpbx6uvQojD9cR
xNblJLWqtapPuymlC+4a6jJt6OE6mjxcpycRrjGfjEDThQfqQKYWDcB5VbWY
8xmNqaNhtcUM/PT5V1M1A7dj9dSOrmVFx2oMEkr0BTpRvXURq9U8cBNWQzPH
l2+f8RUVq19efcfbJ+f91y/eBFaj5X/yxnNizFq7nb+49aevXzZFq7VYTZ3i
QtbYzh1aY8fqE4f2AatfHvPP6vbs4iGSDbg7VptswCWsBjqJNuAR/MosC6sD
/coilNYqQAZ4oFlZZ6yrFVkeruPLw3VXUleFa6+upy4T/fdwHU0ertNTNLh2
oelAoE6EqU2hajIAr66uTjZUHQqrTWbgI+p3r993nrGaAtZaM3AAHWM1oCmC
GbiK1WwGDoxSXcsilK4G4BSrdLWI1dQ108YNF0tX83al6WYRq6nltx8fbydr
bDtPTCWs5p84JKxGi4l1qy/ldXXNuxtcnz2wzITV5DJ3YUF/LVnTdj7bzWQD
HojVJr8yCP3INuDoBRGrpQzwsH5lloXVql/ZlI6ltTASip4Bvr78/os9brpG
zMpc5OE6vjxcdyV5uPbqLPJwfY3Lw3V6coRrR5qOA9RxmJpWVYuhakySpVC1
xawsDaxO0AwctEVm4EAh0bUsVI0tIBibgbssry5Y6WoJq13MwBmr3yPrCWPH
TK8ZM3fE1MUPb1/6xefnf7xjja1Pqlj9y7xW7AoIW2N7YtcDElbzrxwgVrS8
itXvFdha800XuD5zbKcJq6+ybn21haxpO94y21RdKyxWS9W10Bfozfh+ZZ1r
YbU3KwslD9fx5eG6K8nDtVdnkQWcqW44ZggerruwPFynJxNcu9N0EZlaXVWt
DVUXDKvtZuDr92uw2sUM3ORa5mgGzjW2pkdyLUupxhbm5GhkqrEFlAMouWO1
GLAekx05uq189OaB4ta86hvvYfUpGau58V9741IgWb+XGf7i/8/em33bUV3p
nvwH9VKjHuoh/cB9qXopZ45x763KyoS82E5xXTY3m+v0tUlfnG6wBUqTagAh
pKNzwE5LCCPZNNIRjQU2rUFIR1iob4wAoxbZwBEIEKRkmiuQMGBDOj3uro89
88ycWmvFihXdbuJ839hDYyt2xIqItXbsE79Yc37zgGK1POVAV1istoOiTzxe
3L0sl6xf2PCVIFajV8GSOPen//HTuXB9dNXflSha7diAC1ajh4PVtUr4lZVL
rJaC5ppYXbS0VgpTF40Aj5uVTcOpakeE6+oiXLdJhOshlTU5V+Wmfte1a9/S
LVFLTcXwosoCZyFrqW5GuG6xCNfNyYHreoG6Oab2p6r9rOp4BHjtWB0xAx9/
+FAJM/ANGzZEzMDxdU0xAwcZlcZqO2GNX2/0Zzmshpy43+VdM3ApXY0vSenS
1df+cIGD1fq6+ZGvvPvrXwWxWjr/1DtvJsL1Cy8ftliN3o5j9b/WrZ58+sW1
OZPXz+65S7H64MGDitXoB3TUri0/zSVreRUqWp1YXasuv7JIBHhWYjW+FX5i
ddNT1Q5WLx+ZT7OyFBGuq4tw3SYRrodULYBr33TOVjTzFQRnS9ZZ6wyaCNfl
RLhuToXgOoWm40BdlKn98G9g7Jw5c+IG4OmJ1TVi9cyxuyNm4EGsDpqBg8vE
DHxiYqK0GbjW2JLIbcBXxRpbIyMj6EbwkTWzaq7GlmJ1lmvZdd8ZufbWq7PI
Wl5r9v7gw66cztf+TwkLv3vbhYLVgNBUrJ566PH8/vWxbOvNiyxWS3TBjV3z
dowIlhzc9lAiXD++aW2hotXqV4YRWZJdXSvFryyI1UUTq3EAmliN70DfI8D3
zvpsVgT4tDIrSxHhuroI120S4XqQtXSqXLhSsxbgVkqVet9Z5cK1mLhWCjv7
7LO1PLdWIcdquq2U9g42IuQbrBjemeJ9W4vcnoIcsJ6OVjRzNsG/WUXNAM64
MQBK465Gljhk3SFct1qE6+aUC9e1AHVFppbw7/nz53/jG98AU+PfxKnqJrB6
GM3AK9bY+qhadB01thYsWJCC1cH0aqd09VPj/+/yjRfH4RqvF954NojV0v+7
n16eC9f3bZ5TAqv1ucfkgc1H133BweoXH/jUczuWO1iN00dnYmi0wNbePTsT
4fqxRx/KwuqIDbgkzqfYgFf0KxuKxOp4BPj0NCtLEeG6ugjXbRLhujeqWEZK
KNhBYIFrweROF0t9uJYlWixMi4ihNby3mCxM7Vfx1kZkp3IYzjrSrGCyrtk5
c44bS7COPhPQaWuH5SOT1+gf3CDhT7DwtU/WHcJ1q0W4bk4+XCfSdBWgLh3+
PWfOHNwM48ekSgR4XVhdrxk4eMoxAwfExc3Ag1itZuBaY0vJul81tkBJ3/7O
4oXXzrxu9ZdXPXjRD9dfetv9V9wyfr1itT9hHcHqQyv/w6u3/bs9d/9JLlnj
tfbpu97vyul/GYITr7+Q42a266Jnnn+8HFbbRx/PPfHjye3fPfLovMnNi57d
verpA084s9XoVYvVOmonlvxpLlm/vPyCOFZbG3BgtfqVobeLYnW6X1k8sRoD
Om/evPSK1U0wtV7atyycR7Oy0iJcVxfhuk0iXPdGpZ2uz5oS7ohkElmWy183
YWRd2YdrjbuWj84yEqqV5VhTpoz9iWPbiPypUmTGcm1N4NoJ+dapbT0FhWs9
1Bld2T1mBbdL/yhf+2Sd1YeDJsJ1ORGum5OFa9yCNs3UifPUMlWN228n/Ntn
6tKJ1RWxupAZeJZrmRhQi2uZbwb+UTmnZDNwJbXx8fENGzb4NbaErHOxGvxl
zcBrqbEFrF619sIf7fi887rtJ7MTsRq69bpZe246Tz3AN93/qRS4XvX4UovV
zhBAz7/yRASu9z+7Vh7nlsZq3wk8EaulaPXzt12SC9eH18wvitVOdS0Hq1Ns
wItWrBasBkHjUvrWt74lWL0io2J1LyPAn77k/EgE+O9PvtbvX+hBF+G6ugjX
bRLhujcqB9cy29uZCpbWKO6OgWs7z5sC184uNEJb/vXB1oFr2a/AtbYm6wTh
2kkMV7i2E9YS2W7nuOP9I3ztk3WHcN1qEa6bUwpc59J0uUnqIFPj9nj+/Pm5
TmW5TN0QVkt69ddCrmVZZuAgu3Jm4PghTTED37dvX2kzcAer6zUDF3+qy6/+
xg83/zefrOV1x8TXI1gto3Pzkjl+6eqJn3w6Ca73LPl1Vz5W/1uS+ysHHnrs
mw5WY8mhyY0pWG1Hp0asloF7fOeW+OT1q8s+tWPThjhW26LVhaprpduA5yZW
42dE/coWLlwoWN3HCPCNcy5kBHgtIlxXF+G6TSJc90blykjZKOtyYeEOXEso
uF1HthJm9yeRO1OT2no8AtFYgjdKwVkz1/aARbqOs9xOwcdnruNy1rGPI5zl
jpeaLw2hr12E63IiXDenLLhOAerSTB0M/wa9XnbZZV/vatasWWCB6lPVkQjw
clgdNANffu++107+upBrWYoZeIprGQBZXMtARhXNwDFe1bEaGh8fx6BIja1r
vr0oQtbyuuWuyy1WO65lPlbjdeK+c/c/tjgFru/et8pitTMKb3QljzjueuC6
R3Zdv33/sl0Hb/rl8ztffuV5HRFnUHqD1Tp2P994bxZZH//unzz+4KosrHaK
VleprpVuA+5MVYtfmWJ1Fb+yWjzAWa66dhGuq4tw3SY1CtfinYWfR41ADqbZ
9kU9ridVrozU0ik3MIVE9KFjaGYNwXLhumMiw+X0ZdZY1/HPa2ZXsonucaln
aBaEa7uODLpEkmNHuoINLO/k5Vzn9DLhutUiXDcnB66rA3Uhpq4S/t1jrI6b
gX/44YdBrPZdy0Bq4loGtImbgRd1LQOjVXEtQy+hKSUvMJeP1elm4FJj67YH
roiTNV53bv2iHweehdUfla4+/FHp6vd+++sUuN515NEgVtuAfDFmR5dKbrUd
ETsodlyqYDXGKBGrdfieeOTuydXfdLD66Pc/t3PD/RGsXtYtWi1mdClYXdoG
vC6/MkaAD6MI19VFuG6TmoNr3xqrlXCdWE9qeMtIpXBoCflfD5HEugc3KWEK
p3CtHulqp+ZYoHfMcwCdWydcD5QI180pHa7rZWrc/SaGfxeNAE/0K8vF6rhr
GbD6qWdO5JqBg+myzMDFtSyC1RHXMhDN8gFzLVseqrF1x/pLcuEar+U3L7RY
PbH8r8NY/YuPsFpLV689/KM4Wa/YNfra//hVD7DajlEWVgNsLVY/2VUuVusI
Qjs3bfj5A9/fd8+Sxx9ctf3RiQhWLylYtLpeG3BJrAZQy5cBIxvEakaAt0OE
6+oiXLdJDcG11odSJ67OFK3o3KsijK4m/xXGsa1VLynV93pSw1tGqiG47oTo
VV3N65I/cy3fCt8C3T4wka8f4XrQRLhuTnG4zgXqokyNG+Orr75amfqyyy7L
cv+uOFWdklhdDqvnrNjhu5ZlmYGLa5mYgUu5ZGsGjj/BEaz2Xcvwe6WuZUCq
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
qycmJsCVOH301bYdt+aS9UfB4TtvyMVqGcGtG9clwvXmn4z3Bqs1uf6qq65K
tAEvgdUpidUsrTVcIlzXIsJ1y0S4HmT5cA1c1VrhuXDt1Np2Wpa8MMvIHQ+u
0QiWO3PcAtcWnCX+XPmdTB0X4bqcCNfNyd4ggaxxl2tjv2uZqu4xVkdcyx7c
ceSdd3/rY3XctQxMlGUGXsK1rIQZuONatqRuM3B1LXPSadNdy1YvvfTQyv/g
YPXxu/7w1P4Vhw8uziXrrdv+874uWcvrlSMPnuwqsXT1sa6qY/XGjRsFqyVW
H0t27flBClxv2vEPuVitz0YS4fqRB+4IYnWhotURG3CnuhaGuxYb8BoTq1la
a8CFX1H8iDHnuroI120S4XqQ5cO1BGZ3pmK2I3AtEeORliUbWjbHe525VkaW
eWr814F0Z+Za5HO6vAnapk1zEa7LiXDdnCxc4743l6nrnapuAqsvHruvCdey
LKwu5FoGgn7qqafKuZYBogE+IyMj6G1wk4PVwl/pWI1GxLVMHKvKm4FfN8vH
arzeeOSLH55+5Xe/+93bp47kwvVjm/98v4HrFw5eb7EavdQ0VqOrV69erSnw
WmBr+8+uSYHrR7d/MwWrJergF3ddnEvWL9x2QXNYbatriWddab8yJ0egKFaz
tFYLRLfw6iJct0mE60GWD9dLpwzNNLE6C647JuRb87Jty9bQTEO7Z3bllNDS
yHBZx8m5dnbhHNKAwDXOxQmM742CZcsI1+VEuG5ODlwXZerBwepFY9/Nci1T
rP7ggw+CWO27loGtJL26imsZfgNBPb5rmZD1MLqW6cBhgG5eMmfHjecHsfq3
b/4SWC19Dh04OBoh621bz5i2xuvZJ68AVtskd3ROpHT1i13piNhBcZ54BLHa
GrYrVstIbd+9NGnmevsVKViNWymMzq3fuzoXrnf/eLQurHaqa0lmfaS6Vg9s
wCOJ1aeuuIAR4MMlwnV1Ea7bpB7AdUp1p46xtlal72IpSyr3XOoW7ghDMCBA
bUW4boEI180pF64rMnUPsDrLtezqVT976pkT1gw817VMqzsBXkBDTnp1rmuZ
sJtQm6RXA1vWrVsXdC1Tso5jNXCpRtcyqVyc7lrmpM1muZYpVr/30iaL1drt
Tx++LkjW27eev3fTJ/afCdfPPTVqk9wjpasTsdo+9BCyxgCh2yNY/eSe7Qe2
rT78yMxD6857auKTP9s4IwLXm7f9II7VOAuN50eX7hn/aoSs9625pAmslicq
c+fO9bG6ORtwJla3XoTr6iJct0mDA9ciJ5k3UUtZUrkf8slxQIbALyimcK3z
8tbS3Hq++XXHZIltU89aC5lJEVXxWtcpfm3K4XrCdTkRrptTFlxnMXWNU9Wl
sdq6ls0ZW+VjdXXXsmB6dYpr2b59+zZs2ABUKeRaZsnacS0DjoFowFlVsBoA
NVqTa1kQq4/f9YfvHL79w/ffVrJ2uh165dXtjz8x02L1ns2fcuas5bXxwdmF
SlcXwuqDBw/GsRojdXDLD44++NmX7/sT+3ruwXN3bjrfJ+uN27+4ZcuG+Gy1
YjXGCN+uj563/GhuFlmvvf9HkaLVhbA6t2h1BKtr9CtjYnWLRbiuLsJ1m9Qb
uLakY3OBfZQuB9cillSmRH5BMX/mWp4MiGObLlzq1R3D5payO4bT9dmC5JvL
F1tm7TXqnjPXNYpw3Zx8uO7BVHV1rI64lm184sWirmWAMnUtA4tF0qsjWK3p
1eAUKddVzrUMUCa1upp2LXNIKher1yz7+rPjHw9i9T//5lQQq50I/LdPngA7
7930iSBTy+upjec/+tN7+oXV0NObljpYbV/eFPZfb9q6KgWrMVjrutICW4/e
v3L/nZc+d/vnXlr958/fdgGw+qf33hzBarUB14GOF63GCGrRaoxs7dW1EhOr
N8658OWLz2FidVtFuK4uwnWb1Bu4dkjH1oFykKc0XC9lSWVqSn5BMf2mCQLb
smI2iD1Yd0zbkTU1qdyuKS7uOhuuae+E6xpFuG5OFq5xS5zI1IOJ1cvv3ffa
yV8D8YJYHXct06LJEdcyQFyKa5lNry6K1Zpeja5DU8JipbEavS1YXdG1LMMM
/I/efuIacS1zsDrY8/JY49XnH8rCankdOXBjbunqF7oKYrUzNEGsRrcHsRqD
tXf7XS8+8MkIXB+9/0+3bPm0kvWjW1aUwGotsKVOdE4QeBWs1qLVgtW5Rasb
8iuLV6xmBHhrRLiuLsJ1m9TjsHD5TRa+7mTEFZeDa5Z/olR+QTGFa42akHV8
uPbrjmk7PlzbNQnXTYtw3ZwicN1HrM5Kr14wtuzvx+6Im4Gnu5Y51Z2E5uKu
ZSA437UMl7xQGwgrmF6diNUgpnKuZQ/decO2O+fuufPiJ9dctOWHc9bcdou4
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
NUVRlGgY4bozVXsLd7kSEw629df5oCu8KQHX0O23376+q3VdKbdaz22byGxn
h5VkIeCnTNSiQXUMU7C11mFa7kqSnVevXq0HA1yVSWRodVdoFiAMsgaiAnVx
p7eyK02CVgRWCtYpZpsWrVAsso8XcMzz58+//PLLx8bGFPOVlHUaWpFZ56OV
nW2VapmeFl0zpbGu7rpy5k9nf9F/bbtr9U5PeoQ4bP/TJmTvouttua5zqXKE
mjcx2o3xSNxKLkAR3ueuL9dpyhGmr9kv9f4I7QMH/Bb1ZqeF1PsjxF50j9h7
jS3bc8HVkbUafvR0tdJ/yCq20N/Nmz4AwvVwiXBNURQlGlK4Fl4WBWPC/ZWL
wjVFURRFUU0r+IebcD1cIlxTFEWJhhSuNTJ8tDu5EF+ZcE1RFEVRg6ngH27C
9XCJcE1RFCUaUrjudDMf5e9ybhIi4ZqiKIqiBlPBP9yE6+ES4ZqiKEo0vHDd
MVnVcQXhutO1xKEoiqKocmri7xolIlwPlwjXFEVRoqGG60RlwTVFURRFUQMo
wvVwiXBNURQlIlxTFEVRFDVQIlwPl+qF65MnT75OURQ1DDp16pTzC0a4piiK
oihqoES4Hi7VC9dHjhz5JUVR1DAIf62cX7DpANfA6lWrVhGuKYqiKIqiahfD
wimKokTTAa7jOn36dIor2jQRuuJ0V/0+EGp6KWJOKN/JHh9P3xW/DKdnn/RL
kd4Ws+tly5YVbVOmZVVV5mfXrl2LFvbu3Vt0Qxy2HsDWrVt7szmOM3i0aEFb
W7lyZdGDofouwjVFUZRomsM1bpmWLFny5JNP9vtA+i/cQG7atAm9oXc4O3fu
7PdBtVbo7SWe1q1b1+/j6o/QG2vWrLnvvvuc5a+//vqqVaum2xfy0KFD9qxx
VdpPnet02n5n6hK+dc5luGLFCv3U6W1nLFSCmek7FcBUoBbQLkeU0lRRuHYi
rgVsAenpLdhHCumbZx2ttKCEXu55BdVfEa4piqJE0xmuQdZyE0u4hnDfKPfq
IJrJyUncc7JnmtPr3TLrIMp1RtOzt8EvUrPegWssx+Upz77whZR1Wt9FOEH5
Yhw7dgxnvXPnTvmvriAwiNWwgq7cxwMedgGl8TWzl6ElaL+3/UdAokJwuqwr
u8Shy3Tp9HEhuF7ZlbMk/fmAP1eesrmsEzxaZ+5e2L9Eb1B9FOGaoihKNG3h
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
dTmZx8fHswzOCohrAACanTeuX19f7z6Vx6ef3sPDw2DL9+/fPz4+6i1PT0/j
Y/3+/bvsefoJnKicQ/ko3t7e9u1QXmr+oMobZ0b+8sTKx1jePv6EZ5wY1+Wj
mO9TM9dcl7gGAKDZ2eO6VO0ZT++QuJ60kLgu4T+/w3Xj+th3nRLX5V/k/v5+
vk/FNdclrgEAaNY1rktaRv2V7aXm3nZiXjurueyfk935rpgB//btW2yvEzLG
qbeXLXHQ8sbY/uvXr3rMUpH5NIsynj7tbD8jNybcc/49XiqD55byOI4yWc3l
ouoTy4PmZ1KffLR/xnXMcdfbc8+s7zyNyOr6JOvPJ3bLU61HiDMs/424zl9B
lD3zk8kPJN9btsQljOP0ZadUc15pbH98fIwt5dUS1/W/csnto+K3Hqo8fX9/
L1vKmIPR8hzKDoePH+e/2a0PL0PlSeYOOWxciLheN3ENAECzfsvCI8ciouO/
0WuxZzRgZG9sKa9G1tXLvCdnrmO38t54EHE9mKqun2ZTl40xYFZ/RF8cffJY
MXId6Rny49Xp+UuAPOK4fHNLOVwZajxzHSPXn1V+evXHUvaZnLn+vjPYGCPE
Z54XMh/X9acxH9fZ1OVxfH/5eSfj9JSZ62jerOwySGnnbOp4XDfysePXcZ1N
nec/eSHiesXENQAAzXovC89Z1O3nbGxsj3nV8rQuwSzfwZZavZ65jusIxnr8
GDkOlG+Pisxu3VYTtXWo1r8iiJnreufJK63HzOwdx3WefEyRZzIPptfr84l3
5dR2nti+uM5DDFYFRJLXu83Edc7p12biNESflg7NKewTl4XnxHHOU8fMde5Q
Hr/vTM6JHxXX+fY81ckLEdcrJq4BAGjWO65jBnYyrmON9LniOl8dzMlOxvVg
WnZwbhmhcTn94joOGoPXc/r74nqQ0vNxXV/meDL6y7jefrZ5PbH+ZVxnk+aW
0+M68zaM4zp3iNnnU5aFx8YyYBxi8kL2Dc4KiGsAAJr1jusI1VzYnOEW09b7
loXn28eTp/Nxvf38XnPUaGw5cFl4vag7T/7wuD5wWXgOlTPUsTw+y3ffzHX9
6eUnNhPX+VuF/JBnloVnuQ+OEoPMLwvPAs1F1KVMs7hPXxY+SNqYpI6gLsE7
GHNyffiBcZ3Nnuc/eSHiesXENQAAzfp957r0WsTptrqh2eC2Xdtq6fJgmrUe
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
    
    "], {{0, 878.25}, {983.25, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96., 96.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{676.5, Automatic},
  ImageSizeRaw->{983.25, 878.25},
  PlotRange->{{0, 983.25}, {0, 878.25}}]], "Output",
 CellChangeTimes->{
  3.8439299286592093`*^9, 3.8439310799466352`*^9, {3.843931130214526*^9, 
   3.843931139068925*^9}, 3.843990409879443*^9, 3.8439906352587767`*^9, {
   3.843990688883624*^9, 3.8439907138458767`*^9}, {3.844019013563727*^9, 
   3.844019067134615*^9}, {3.844019122081052*^9, 3.8440191413589077`*^9}, {
   3.844019174179475*^9, 3.8440192373284492`*^9}, {3.8440193069574223`*^9, 
   3.8440193334841413`*^9}, {3.844019431014323*^9, 3.844019478421855*^9}, {
   3.844019593462861*^9, 3.844019668410779*^9}, 3.844434959481036*^9, {
   3.845053271816292*^9, 3.845053294954365*^9}, {3.8450533817946167`*^9, 
   3.845053396280005*^9}, 3.850841954834198*^9, 3.8508421499165077`*^9, {
   3.850842192055914*^9, 3.850842219379416*^9}, 3.8508423010632343`*^9, 
   3.850844891540559*^9, 3.850845171746766*^9, 3.8509117865750184`*^9, 
   3.850915816845158*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"cef15174-27bd-4978-92e9-608d3665ed06"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1428., 741.75},
WindowMargins->{{Automatic, -188.25}, {570, Automatic}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 6, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"11901156-f411-4736-8844-a432afa13c32"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 922, 22, 58, "Text",ExpressionUUID->"f1d157ee-91a3-42d6-bc68-af1122e93353"],
Cell[CellGroupData[{
Cell[1505, 46, 207, 4, 67, "Section",ExpressionUUID->"716bd89b-8757-42e0-a151-c1a29588d53c"],
Cell[1715, 52, 691, 12, 58, "Text",ExpressionUUID->"ac94e22b-06d2-4f04-b4ba-c481651b31df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2443, 69, 174, 3, 67, "Section",ExpressionUUID->"f0a7d849-8d09-4e6e-a2cc-2c81062b0700"],
Cell[2620, 74, 1698, 25, 173, "Text",ExpressionUUID->"8684fee0-b417-4f67-a1a0-9c526676e9b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4355, 104, 159, 3, 67, "Section",ExpressionUUID->"4064be94-039a-41cf-9c40-c2b61a455f52"],
Cell[4517, 109, 2603, 42, 242, "Text",ExpressionUUID->"54311706-e5ec-494f-b545-1edddd49b7a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7157, 156, 216, 4, 67, "Section",ExpressionUUID->"58b98613-c77c-45cb-9077-3d4540786097"],
Cell[7376, 162, 1773, 30, 150, "Text",ExpressionUUID->"ca92c054-1ac9-4741-a0d8-32b6a20301c0"],
Cell[9152, 194, 264, 4, 35, "Text",ExpressionUUID->"33bdaa63-8fd1-4fe8-b423-e56cfb0ac609"],
Cell[9419, 200, 466, 8, 28, "Input",ExpressionUUID->"0e219a26-63aa-4155-919e-aa91a6878317"],
Cell[9888, 210, 2143, 48, 35, "Input",ExpressionUUID->"61131167-537f-4456-bfe0-538c1346e768"],
Cell[12034, 260, 2143, 48, 35, "Input",ExpressionUUID->"1471fa0b-8e93-4104-aab6-6bc9e8d01b1d"],
Cell[14180, 310, 2143, 48, 35, "Input",ExpressionUUID->"a8f95d0b-e115-4c6c-a227-769d7815d02b"],
Cell[16326, 360, 2145, 48, 35, "Input",ExpressionUUID->"6be83ca3-bf3e-414d-ac04-276f40355d44"],
Cell[18474, 410, 2145, 48, 35, "Input",ExpressionUUID->"149b29d6-ba92-4342-a41d-6c352943ec67"],
Cell[20622, 460, 2145, 48, 35, "Input",ExpressionUUID->"815484b4-6924-4fc5-885f-3c419fe7ed8e"],
Cell[22770, 510, 2143, 48, 35, "Input",ExpressionUUID->"5c8a4d6d-e74a-4d10-a9c6-0132f1a99925"],
Cell[24916, 560, 2161, 48, 35, "Input",ExpressionUUID->"1f35bdc0-3633-4a1c-9cf3-124abee6ad05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27114, 613, 142, 3, 67, "Section",ExpressionUUID->"274ab1d2-6721-4da4-895b-2fc868a91310"],
Cell[CellGroupData[{
Cell[27281, 620, 247126, 4988, 8299, "Input",ExpressionUUID->"08cfd9e0-233a-4f11-9580-b699b3e8e9f9"],
Cell[274410, 5610, 213856, 3510, 621, "Output",ExpressionUUID->"cef15174-27bd-4978-92e9-608d3665ed06"]
}, Open  ]]
}, Open  ]]
}
]
*)

